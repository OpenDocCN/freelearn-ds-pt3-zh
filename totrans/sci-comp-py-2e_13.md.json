["```py\nimport math\nimport numpy\nmath.sin\nnumpy.sin\n```", "```py\nmath.__name__ # returns math\nmath.__doc__ # returns 'This module provides access to .....'\n```", "```py\n'float' in dir(__builtin__) # returns True \nfloat is __builtin__.float # returns True\n```", "```py\ne = 3\ndef my_function(in1):\n    a = 2 * e\n    b = 3\n    in1 = 5\n    def other_function():\n       c = a\n       d = e\n       return dir()\n    print(f\"\"\"\n          my_function's namespace: {dir()} \n          other_function's namespace: {other_function()}\n          \"\"\")\n    return a\n```", "```py\nmy_function's namespace: ['a', 'b', 'in1', 'other_function'] \nother_function's namespace: ['a', 'c', 'd']\n```", "```py\ne = 3\ndef my_function():\n    e = 4\n    a = 2\n    print(f\"my_function's namespace: {dir()}\")\n```", "```py\ne = 3\nmy_function()\ne # has the value 3\n```", "```py\nmy_function's namespace: ['a', 'e']\n```", "```py\ndef fun():\n    def fun1():\n        global a\n        a = 3\n    def fun2():\n        global b\n        b = 2\n        print(a)\n    fun1()\n    fun2() # prints a\n    print(b)\n```", "```py\nfrom numpy import array, vander\n```", "```py\nfrom numpy import *\n```", "```py\nimport numpy\n...\nnumpy.array(...)\n```", "```py\nimport numpy as np\n...\nnp.array(...)\n```", "```py\nfrom scipy.linalg import eig\nA = array([[1,2],[3,4]])\n(eig, eigvec) = eig(A)\n...\n(c, d) = eig(B) # raises an error\n```", "```py\nimport scipy.linalg as sl\nA = array([[1,2],[3,4]])\n(eig, eigvec) = sl.eig(A) # eig and sl.eig are different objects\n...\n(c, d) = sl.eig(B)\n```", "```py\nfrom scipy import *\n```", "```py\nfrom numpy import array\n...\na = array(...)\n```", "```py\n# module\nimport ...\n\nclass ...\n\nif __name__ == \"__main__\":\n   # perform some tests here\n```"]