["```py\nmkdir pretty_trees \n```", "```py\ncp trees_app/trees.csv pretty_trees \n```", "```py\ntouch pretty_trees.py \n```", "```py\nimport streamlit as st\nst.title(\"SF Trees\")\nst.write(\n    \"\"\"\n    This app analyses trees in San Francisco using\n    a dataset kindly provided by SF DPW.\n    \"\"\"\n)\ncol1, col2, col3 = st.columns(3)\nwith col1:\n    st.write(\"Column 1\")\nwith col2:\n    st.write(\"Column 2\")\nwith col3:\n    st.write(\"Column 3\") \n```", "```py\nimport streamlit as st\nst.title(\"SF Trees\")\nst.write(\n    \"\"\"\n    This app analyses trees in San Francisco using\n    a dataset kindly provided by SF DPW.\n    \"\"\"\n)\ncol1, col2, col3 = st.columns(3)\ncol1.write(\"Column 1\")\ncol2.write(\"Column 2\")\ncol3.write(\"Column 3\") \n```", "```py\n#option 1\ncol1, col2, col3 = st.columns((1,1,1))\n#option 2\ncol1, col2, col3 = st.columns((10,10,10))\n#option 3\ncol1, col2, col3 = st.columns(3) \n```", "```py\nimport streamlit as st\nst.title('SF Trees')\nst.write(\n    \"\"\"\n    This app analyses trees in San Francisco using\n    a dataset kindly provided by SF DPW.\n    \"\"\"\n)\nfirst_width = st.number_input('First Width', min_value=1, value=1)\nsecond_width = st.number_input('Second Width', min_value=1, value=1)\nthird_width = st.number_input('Third Width', min_value=1, value=1)\ncol1, col2, col3 = st.columns(\n      (first_width,second_width,third_width))\nwith col1:\n     st.write('First column')\nwith col2:\n     st.write('Second column')\nwith col3:\n     st.write('Third column') \n```", "```py\nimport streamlit as st\nimport pandas as pd\nst.title('SF Trees')\nst.write(\n    \"\"\"\n    This app analyses trees in San Francisco using\n    a dataset kindly provided by SF DPW.\n    \"\"\"\n)\ntrees_df = pd.read_csv('trees.csv')\ndf_dbh_grouped = pd.DataFrame(trees_df.groupby(['dbh']).count()['tree_id'])\ndf_dbh_grouped.columns = ['tree_count']\nst.line_chart(df_dbh_grouped)\nst.bar_chart(df_dbh_grouped)\nst.area_chart(df_dbh_grouped) \n```", "```py\nimport streamlit as st\nimport pandas as pd\nst.title('SF Trees')\nst.write(\n    \"\"\"\n    This app analyses trees in San Francisco using\n    a dataset kindly provided by SF DPW.\n    \"\"\"\n)\ntrees_df = pd.read_csv('trees.csv')\ndf_dbh_grouped = pd.DataFrame(trees_df.groupby(['dbh']).count()['tree_id'])\ndf_dbh_grouped.columns = ['tree_count']\ncol1, col2, col3 = st.columns(3)\nwith col1:\n     st.line_chart(df_dbh_grouped)\nwith col2:\n     st.bar_chart(df_dbh_grouped)\nwith col3:\n     st.area_chart(df_dbh_grouped) \n```", "```py\nimport streamlit as st\nimport pandas as pd\nst.set_page_config(layout='wide')\nst.title('SF Trees')\nst.write(\n    \"\"\"\n    This app analyses trees in San Francisco using\n    a dataset kindly provided by SF DPW.\n    \"\"\"\n)\ntrees_df = pd.read_csv('trees.csv')\ndf_dbh_grouped = pd.DataFrame(trees_df.groupby(['dbh']).count()['tree_id'])\ndf_dbh_grouped.columns = ['tree_count']\ncol1, col2, col3 = st.columns(3)\nwith col1:\n     st.line_chart(df_dbh_grouped)\nwith col2:\n     st.bar_chart(df_dbh_grouped)\nwith col3:\n     st.area_chart(df_dbh_grouped) \n```", "```py\nimport pandas as pd\nimport streamlit as st\nst.set_page_config(layout=\"wide\")\nst.title(\"SF Trees\")\nst.write(\n    \"\"\"\n    This app analyses trees in San Francisco using\n    a dataset kindly provided by SF DPW.\n    \"\"\"\n)\ntrees_df = pd.read_csv(\"trees.csv\")\ndf_dbh_grouped = pd.DataFrame(trees_df.groupby([\"dbh\"]).count()[\"tree_id\"])\ndf_dbh_grouped.columns = [\"tree_count\"]\ncol1, col2, col3 = st.columns(3, gap=\"large\")\nwith col1:\n    st.line_chart(df_dbh_grouped)\nwith col2:\n    st.bar_chart(df_dbh_grouped)\nwith col3:\n    st.area_chart(df_dbh_grouped) \n```", "```py\nwith col1:\n    st.line_chart(df_dbh_grouped, \n   use_container_width=False) \n```", "```py\nimport pandas as pd\nimport streamlit as st\n\nst.set_page_config(layout=\"wide\")\nst.title(\"SF Trees\")\nst.write(\n    \"\"\"\n    This app analyses trees in San Francisco using\n    a dataset kindly provided by SF DPW.\n    \"\"\"\n)\ntrees_df = pd.read_csv(\"trees.csv\")\ndf_dbh_grouped = pd.DataFrame(trees_df.groupby([\"dbh\"]).count()[\"tree_id\"])\ndf_dbh_grouped.columns = [\"tree_count\"]\ntab1, tab2, tab3 = st.tabs([\"Line Chart\", \"Bar Chart\", \"Area Chart\"])\nwith tab1:\n    st.line_chart(df_dbh_grouped)\nwith tab2:\n    st.bar_chart(df_dbh_grouped)\nwith tab3:\n    st.area_chart(df_dbh_grouped) \n```", "```py\nimport pandas as pd\nimport streamlit as st\nst.title(\"SF Trees\")\nst.write(\n    \"\"\"\n    This app analyses trees in San Francisco using\n    a dataset kindly provided by SF DPW.\n    \"\"\"\n)\ntrees_df = pd.read_csv(\"trees.csv\")\nowners = st.sidebar.multiselect(\n    \"Tree Owner Filter\", \n    trees_df[\"caretaker\"].unique())\nif owners:\n    trees_df = trees_df[\ntrees_df[\"caretaker\"].isin(owners)]\ndf_dbh_grouped = pd.DataFrame(\ntrees_df.groupby([\"dbh\"]).count()[\"tree_id\"])\ndf_dbh_grouped.columns = [\"tree_count\"]\nst.line_chart(df_dbh_grouped) \n```", "```py\nimport pandas as pd\nimport streamlit as st\n\nst.title(\"SF Trees\")\nst.write(\n    \"\"\"\n    This app analyses trees in San Francisco using\n    a dataset kindly provided by SF DPW. The dataset\n    is filtered by the owner of the tree as selected \n    in the sidebar!\n    \"\"\"\n)\ntrees_df = pd.read_csv(\"trees.csv\")\nowners = st.sidebar.multiselect(\n    \"Tree Owner Filter\", \n    trees_df[\"caretaker\"].unique())\nif owners:\n    trees_df = trees_df[\n        trees_df[\"caretaker\"].isin(owners)]\ndf_dbh_grouped = pd.DataFrame(trees_df.groupby([\"dbh\"]).count()[\"tree_id\"])\ndf_dbh_grouped.columns = [\"tree_count\"]\nst.line_chart(df_dbh_grouped)\n\ntrees_df = trees_df.dropna(subset=['longitude', 'latitude'])\ntrees_df = trees_df.sample(n = 1000, replace=True) \nst.map(trees_df) \n```", "```py\nimport pandas as pd\nimport plotly.express as px\nimport streamlit as st\nst.page_config(layout='wide')\nst.title(\"SF Trees\")\nst.write(\n    \"\"\"\n    This app analyses trees in San Francisco using\n    a dataset kindly provided by SF DPW. The dataset\n    is filtered by the owner of the tree as selected\n    in the sidebar!\n    \"\"\"\n)\ntrees_df = pd.read_csv(\"trees.csv\")\ntoday = pd.to_datetime(\"today\")\ntrees_df[\"date\"] = pd.to_datetime(trees_df[\"date\"])\ntrees_df[\"age\"] = (today - trees_df[\"date\"]).dt.days\nunique_caretakers = trees_df[\"caretaker\"].unique()\nowners = st.sidebar.multiselect(\n    \"Tree Owner Filter\", \n    unique_caretakers)\nif owners:\n    trees_df = trees_df[trees_df[\"caretaker\"].isin(owners)]\ndf_dbh_grouped = pd.DataFrame(trees_df.groupby([\"dbh\"]).count()[\"tree_id\"])\ndf_dbh_grouped.columns = [\"tree_count\"] \n```", "```py\ncol1, col2 = st.columns(2)\nwith col1:\n    fig = px.histogram(trees_df, x=trees_df[\"dbh\"], title=\"Tree Width\")\n    st.plotly_chart(fig)\n\nwith col2:\n    fig = px.histogram(\n        trees_df, x=trees_df[\"age\"], \n        title=\"Tree Age\")\n    st.plotly_chart(fig)\n\nst.write(\"Trees by Location\")\ntrees_df = trees_df.dropna(\n    subset=[\"longitude\", \"latitude\"])\ntrees_df = trees_df.sample(\n    n=1000, replace=True)\nst.map(trees_df) \n```", "```py\nimport pandas as pd\nimport plotly.express as px\nimport streamlit as st\nst.set_page_config(layout=\"wide\")\nst.title(\"SF Trees\")\nst.write(\n    \"\"\"\n    This app analyses trees in San Francisco using\n    a dataset kindly provided by SF DPW. The dataset\n    is filtered by the owner of the tree as selected\n    in the sidebar!\n    \"\"\"\n)\ntrees_df = pd.read_csv(\"trees.csv\")\ntoday = pd.to_datetime(\"today\")\ntrees_df[\"date\"] = pd.to_datetime(trees_df[\"date\"])\ntrees_df[\"age\"] = (today - trees_df[\"date\"]).dt.days\nunique_caretakers = trees_df[\"caretaker\"].unique()\nowners = st.sidebar.multiselect(\"Tree Owner Filter\", unique_caretakers)\ngraph_color = st.sidebar.color_picker(\"Graph Colors\")\nif owners:\n    trees_df = trees_df[trees_df[\"caretaker\"].isin(owners)] \n```", "```py\ncol1, col2 = st.columns(2)\nwith col1:\n    fig = px.histogram(\n        trees_df,\n        x=trees_df[\"dbh\"],\n        title=\"Tree Width\",\n        color_discrete_sequence=[graph_color],\n    )\n    fig.update_xaxes(title_text=\"Width\")\n    st.plotly_chart(fig, use_container_width=True)\n\nwith col2:\n    fig = px.histogram(\n        trees_df,\n        x=trees_df[\"age\"],\n        title=\"Tree Age\",\n        color_discrete_sequence=[graph_color],\n    )\n    st.plotly_chart(fig, use_container_width=True)\nst.write('Trees by Location')\ntrees_df = trees_df.dropna(subset=['longitude', 'latitude'])\ntrees_df = trees_df.sample(n = 1000, replace=True)\nst.map(trees_df) \n```", "```py\nmkdir pages\ntouch pages/map.py \n```", "```py\nimport pandas as pd\nimport streamlit as st\nst.title(\"SF Trees Map\")\ntrees_df = pd.read_csv(\"trees.csv\")\ntrees_df = trees_df.dropna(subset=[\"longitude\", \"latitude\"])\ntrees_df = trees_df.sample(n=1000, replace=True)\nst.map(trees_df) \n```", "```py\ncol1, col2 = st.columns(2)\nwith col1:\n    fig = px.histogram(\n        trees_df,\n        x=trees_df[\"dbh\"],\n        title=\"Tree Width\",\n        color_discrete_sequence=[graph_color],\n    )\n    fig.update_xaxes(title_text=\"Width\")\n    st.plotly_chart(fig, use_container_width=True)\n\nwith col2:\n    fig = px.histogram(\n        trees_df,\n        x=trees_df[\"age\"],\n        title=\"Tree Age\",\n        color_discrete_sequence=[graph_color],\n    )\n    st.plotly_chart(fig, use_container_width=True) \n```", "```py\nimport pandas as pd\nimport streamlit as st\nst.title(\"SF Trees Data Quality App\")\nst.write(\n    \"\"\"This app is a data quality tool for the SF trees dataset. Edit the data and save to a new file!\"\"\"\n)\ntrees_df = pd.read_csv(\"trees.csv\")\ntrees_df = trees_df.dropna(subset=[\"longitude\", \"latitude\"])\ntrees_df_filtered = trees_df[trees_df[\"legal_status\"] == \"Private\"]\nst.dataframe(trees_df) \n```", "```py\nimport pandas as pd\nimport streamlit as st\nst.title(\"SF Trees Data Quality App\")\nst.write(\n    \"\"\"This app is a data quality tool for the SF trees dataset. Edit the data and save to a new file!\"\"\"\n)\ntrees_df = pd.read_csv(\"trees.csv\")\ntrees_df = trees_df.dropna(subset=[\"longitude\", \"latitude\"])\ntrees_df_filtered = trees_df[trees_df[\"legal_status\"] == \"Private\"]\nedited_df = st.experimental_data_editor(trees_df_filtered) \n```", "```py\nimport pandas as pd\nimport streamlit as st\nst.title(\"SF Trees Data Quality App\")\nst.write(\n    \"\"\"This app is a data quality tool for the SF trees dataset. Edit the data and save to a new file!\"\"\"\n)\ntrees_df = pd.read_csv(\"trees.csv\")\ntrees_df = trees_df.dropna(subset=[\"longitude\", \"latitude\"])\ntrees_df_filtered = trees_df[trees_df[\"legal_status\"] == \"Private\"]\nedited_df = st.experimental_data_editor(trees_df_filtered) \ntrees_df.loc[edited_df.index] = edited_df\nif st.button(\"Save data and overwrite:\"):\n    trees_df.to_csv(\"trees.csv\", index=False)\n    st.write(\"Saved!\") \n```"]