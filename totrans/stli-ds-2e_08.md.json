["```py\ngit clone https://huggingface.co/spaces/{your username}/{your_huggingface_space_name} \n```", "```py\ncd {your_huggingface_space_name}\ntouch app.py \ntouch requirements.txt \n```", "```py\nimport streamlit as st\nfrom transformers import pipeline\nst.title(\"Hugging Face Demo\")\ntext = st.text_input(\"Enter text to analyze\")\nst.cache_resource\ndef get_model():\n    return pipeline(\"sentiment-analysis\")\nmodel = get_model()\nif text:\n    result = model(text)\n    st.write(\"Sentiment:\", result[0][\"label\"])\n    st.write(\"Confidence:\", result[0][\"score\"]) \n```", "```py\nstreamlit\ntransformers\ntorch \n```", "```py\ngit add .\ngit commit â€“m 'added req, streamlit app'\ngit push \n```", "```py\nheroku login \n```", "```py\ncd ~/Documents/penguin_ml \n```", "```py\ngit clone https://github.com/tylerjrichards/penguin_ml.git \n```", "```py\nheroku create penguin-machine-learning \n```", "```py\nheroku git:remote -a penguin-machine-learning \n```", "```py\ntouch streamlit_setup.sh \n```", "```py\nmkdir -p ~/.streamlit\necho \"[server]\nheadless = true\nport = $PORT\nenableCORS = false\n\" > ~/.streamlit/config.toml \n```", "```py\ntouch Procfile \n```", "```py\nweb: sh streamlit_setup.sh && streamlit run penguins_streamlit.py \n```", "```py\ngit add .\ngit commit -m 'added heroku files'\ngit push \n```", "```py\ngit push heroku main \n```"]