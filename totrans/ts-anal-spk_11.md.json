["```py\n    # Initialize the TimesFm model with specified hyperparameters \n    # and load from checkpoint\n    model = timesfm.TimesFm(\n        hparams = timesfm.TimesFmHparams(\n            backend=\"gpu\",\n            per_core_batch_size=32,\n            horizon_len=128,\n            num_layers=50,\n            use_positional_embedding=False,\n            context_len=2048,\n        ),\n        checkpoint = timesfm.TimesFmCheckpoint(\n            huggingface_repo_id=\"google/timesfm-2.0-500m-pytorch\"\n        )\n    )\n    ```", "```py\n    # Define catalog, schema, and table names\n    CATALOG_NAME = \"ts_spark\"\n    SCHEMA_NAME = \"ch10\"\n    ACTUALS_TABLE_NAME = f\"{CATALOG_NAME}.{SCHEMA_NAME}.features_aggr_power_consumption\"\n    FORECAST_TABLE_NAME = f\"{CATALOG_NAME}.{SCHEMA_NAME}.forecast\"\n    # Load data from the actuals table into a Spark DataFrame\n    sdf = spark.sql(f\"\"\"\n        SELECT * FROM {ACTUALS_TABLE_NAME}\n    \"\"\")\n    # Convert Spark DataFrame to Pandas DataFrame\n    df = sdf.toPandas()\n    # Convert 'Date' column to datetime format\n    df['get_batched_data_fn function. The important part, shown in the following code extract, is the mapping of inputs and outputs. The code is based on an adaptation of an example from TimesFM([https://github.com/google-research/timesfm/blob/master/notebooks/covariates.ipynb](https://github.com/google-research/timesfm/blob/master/notebooks/covariates.ipynb)):\n\n    ```", "```py\n\n    ```", "```py\n    # Iterate over the batches of data\n    for i, example in enumerate(input_data()):\n        # Generate raw forecast using the model\n        raw_forecast, _ = model.forecast(\n            inputs=example[\"inputs\"],\n            freq=[0] * len(example[\"inputs\"])\n        )\n    ```", "```py\n    # Calculate and store the evaluation metric for the forecast\n    metrics[\"eval_mdape_timesfm\"].extend([\n        mdape(\n            pd.DavtaFrame(raw_forecast[:, :horizon_len]),\n            pd.DataFrame(example[\"outputs\"])\n        )\n    ])\n    ```", "```py\n    eval_mdape_timesfm: 0.36983413500008916\n    ```", "```py\nSELECT *\nFROM AI_FORECAST(\n    TABLE(aggregated),\n    horizon => '2016-03-31',\n    time_col => 'ds',\n    value_col => 'revenue'\n)\n```"]