- en: '7'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sharing and Deploying Your Apps on the Cloud Using Streamlit Share
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Streamlit Share is a service provided by the Streamlit framework that allows
    users to deploy their web applications, made with Streamlit, to the cloud with
    just a few clicks. Streamlit Share provides a free and easy way to share our web
    applications with others and make them accessible from anywhere with an internet
    connection.
  prefs: []
  type: TYPE_NORMAL
- en: To deploy a Streamlit app on Streamlit Share, users must connect their GitHub
    repository to the Streamlit Share platform. Streamlit Share takes care of the
    rest, automatically building and deploying the app in the cloud. Streamlit Share
    provides several benefits for users, including seamless deployment, automatic
    scaling, and easy collaboration.
  prefs: []
  type: TYPE_NORMAL
- en: Overall, deploying on Streamlit Share is a convenient and user-friendly way
    to deploy Streamlit web applications to the cloud and share them with others.
  prefs: []
  type: TYPE_NORMAL
- en: In the previous chapter, we finished and tested our NLP web application, so
    now is the perfect moment to deploy it using Streamlit Share and maybe show it
    to our friends and colleagues so that they can try and play with our creation
    using any browser.
  prefs: []
  type: TYPE_NORMAL
- en: Web applications deployed in this way are even a great “portfolio” to be shown
    around to prove our capabilities!
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the importance of deployment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A quick introduction to GitHub
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Getting familiar with the Streamlit Share service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will use the following libraries, packages, and tools:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sublime Text
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Python 3
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`pipenv`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Streamlit
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: GitHub
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Streamlit Cloud
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The code for this chapter can be found in this book’s GitHub repository: [https://github.com/PacktPublishing/Web-App-Development-Made-Simple-with-Streamlit/tree/8d935899f9f128c8cd62d93627711de7c9388b15/Chapter07](https://github.com/PacktPublishing/Web-App-Development-Made-Simple-with-Streamlit/tree/8d935899f9f128c8cd62d93627711de7c9388b15/Chapter07).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the importance of deployment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Web application deployment** is the process of making a web application available
    to users. This involves copying the application’s code, data, and configuration
    files to a web server, and configuring the server to run the application.'
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many reasons why web application deployment is important; here are
    a few:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Deployment ensures that your application is available to users*: Once your
    application has been deployed, it will be accessible to users on the internet.
    This means that they can use your application to perform tasks, such as shopping,
    browsing, or interacting with your business.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Deployment makes it easy to update your web application*: As you make changes
    to your web application, you can deploy them to production with a few clicks.
    This allows you to quickly and easily deliver new features and bug fixes to your
    users.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Deployment helps improve the security of your web application*: When you deploy
    your web application, you can take steps to improve its security, such as configuring
    firewalls and implementing security best practices. This helps protect your application
    from attacks and data breaches.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Deployment can help you improve the performance of your web application*:
    When you deploy your web application, you can optimize its performance by configuring
    the server, optimizing the code, and using caching. This can help improve the
    user experience and reduce the server load.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In short, web application deployment is an important part of the development
    process. Next, let’s learn about some best practices to keep in mind related to
    web application deployment.
  prefs: []
  type: TYPE_NORMAL
- en: Best practices in web application deployment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'By following these best practices, you can ensure that your web application
    is available, secure, and performant:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Use a staging environment*: A staging environment is a copy of your production
    environment that you can use to test changes to your web application before deploying
    them to production. This helps ensure that your changes are stable and working
    properly before you make them available to users.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Automate the deployment process*: Automation can help reduce the time and
    resources required to deploy your web application. There are many different tools
    available to help you automate the deployment process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Use a version control system*: A version control system helps you track changes
    to your web application code. This makes it easy to roll back changes if something
    goes wrong during deployment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Test your application thoroughly*: Before you deploy your web application,
    it is important to test it thoroughly. This includes testing the application’s
    functionality, performance, and security.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Monitor your application after deployment*: Once your web application has
    been deployed, monitoring its performance and availability is important. This
    helps you identify and fix any problems that may occur.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By following these practices, your web applications can be deployed smoothly
    and successfully.
  prefs: []
  type: TYPE_NORMAL
- en: Additional benefits of web application deployment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are some additional benefits of web application deployment:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Increased scalability*: You can easily handle increased traffic by deploying
    your web application to a scalable infrastructure. This is important for businesses
    that experience spikes in traffic, such as during sales or marketing campaigns.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Reduced costs*: By automating the deployment process, you can reduce the time
    and resources required to deploy your web application. This can save you money
    in the long run.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Improved agility*: With a repeatable and automated deployment process, you
    can quickly and easily deploy new features and bug fixes to your web application.
    This gives you the agility to respond to changing customer needs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overall, web application deployment is a key part of the development process.
    So, is there a way to ease the adoption of all these best practices?
  prefs: []
  type: TYPE_NORMAL
- en: We are very lucky since Streamlit Share adopts the best practices we mentioned,
    by definition, so we can ensure we deploy our web application in the best possible
    way.
  prefs: []
  type: TYPE_NORMAL
- en: Having a service that adopts all these best practices is a big advantage for
    us since we can exclusively focus on the real business logic of our web apps.
    Our main task will be coding and making our web applications work properly, satisfying
    and achieving all the needs and results we want, all while being sure that the
    deployment and how it’s shared is something perfect that we don’t have to care
    too much about.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we’ll learn about Streamlit Share and Streamlit Cloud.
  prefs: []
  type: TYPE_NORMAL
- en: What are Streamlit Share and Streamlit Cloud?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Streamlit Share** is a free service that allows you to deploy your Streamlit
    apps to the web with just a few clicks. Once you have created your Streamlit app,
    you can share it on Streamlit Share by clicking the **Share** button in the Streamlit
    app. This will create a unique URL for your app that you can share with anyone.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Streamlit Cloud** is a service that allows you to deploy one private app
    and unlimited public apps, thus offering more features and flexibility than Streamlit
    Share. With Streamlit Cloud, you can deploy your Streamlit apps to a scalable
    infrastructure, add custom domains, and integrate with other services. Please
    check the official page to get updated information: [https://streamlit.io/cloud](https://streamlit.io/cloud).'
  prefs: []
  type: TYPE_NORMAL
- en: To close this section, let’s underline the importance of deployment once more.
    This is the easiest way to make our web apps available to anyone. Streamlit offers
    its own cloud service that is very easy to manage. Besides the app code, the only
    thing we need is a GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: A quick introduction to GitHub
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**GitHub** is a code hosting platform for version control and collaboration.
    It allows you to store your code in a central location, track changes over time,
    and collaborate with others on projects.'
  prefs: []
  type: TYPE_NORMAL
- en: 'There are many reasons to use GitHub. Here are just a few:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Version control*: GitHub allows you to track changes to your code over time.
    This is essential for any project as it allows you to revert to previous code
    versions if necessary.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Collaboration*: GitHub makes it easy to collaborate with others on projects.
    You can create a repository and invite others to collaborate with you. This is
    a great way to get feedback on your code and help from others.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Documentation*: GitHub can be used to store documentation for your projects.
    This is a great way to keep track of your project’s requirements, design, and
    implementation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Hosting*: GitHub can also be used to host your projects. This means you can
    make your code available to others to view and download.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Free*: GitHub is free to use, and you can keep your repositories public or
    private. If you need more resources, you can opt for a paid plan and check out
    [https://github.com/pricing](https://github.com/pricing).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Popular*: GitHub is the most popular code hosting platform in the world. This
    means that there is a large community of users and developers who can help you
    with your projects.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Feature-rich*: GitHub offers a wide range of features that make it easy for
    you to track changes, collaborate with others, and host your projects.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Secure*: GitHub uses industry-standard security measures to protect your code.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You should use GitHub for any project that you want to track changes to, collaborate
    on, or host. This includes personal projects, work projects, and open source projects.
  prefs: []
  type: TYPE_NORMAL
- en: 'Nonetheless, there are a few disadvantages to using GitHub:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Can be complex*: GitHub can be complex to use, especially for beginners'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Can be slow*: GitHub can be slow at times, especially when there is a lot
    of traffic'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These disadvantages can be overcome quite easily:'
  prefs: []
  type: TYPE_NORMAL
- en: First of all, the complexity can be mitigated by studying GitHub’s syntax and
    functions. After doing this a few times, everything will be smoother.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the case of sensitive information we need to protect, we can always create
    private repositories – it’s just a matter of understanding when this operation
    is truly necessary.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Finally, in the case of big traffic, the service can be a little bit slow, but
    there are always intervals throughout the daytime when speed and responsiveness
    are not a problem.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'GitHub is a key part of the Streamlit ecosystem. GitHub is related to Streamlit
    Share in a few ways:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Streamlit apps are hosted on GitHub*: When you create a Streamlit app, you
    can choose to host it on GitHub. This means that your app’s code will be stored
    in a GitHub repository. This is a great way to make your app available to others
    to view and download.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Streamlit Share uses GitHub OAuth*: Streamlit Share allows you to share your
    app with others without having to share your GitHub username and password. When
    you use Streamlit Share, Streamlit will ask you to authorize it to access your
    GitHub account. This allows Streamlit to create a new GitHub repository for your
    app and deploy your app to GitHub pages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Streamlit’s Community Cloud is integrated with GitHub*: Streamlit’s Community
    Cloud, as we’ve already explained, is a platform that makes it easy to deploy,
    manage, and share Streamlit apps. When you create a Streamlit app in Community
    Cloud, you can choose to link it to your GitHub account. This allows you to easily
    manage your app’s code and collaborate with others on your app.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In short, if you want to create, share, and collaborate on Streamlit apps, you
    will need to use GitHub.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have all the theoretical information we need to start sharing our
    web apps in a very effective way, let’s not hesitate and get started!
  prefs: []
  type: TYPE_NORMAL
- en: Getting familiar with the Streamlit Share service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we’ve covered the theory, let’s understand how to deploy our fresh
    NLP web application in a very easy and smooth way!
  prefs: []
  type: TYPE_NORMAL
- en: 'First of all, you will have to go to [https://share.streamlit.io](https://share.streamlit.io):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.1: The Streamlit Share web page](img/B21147_07_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.1: The Streamlit Share web page'
  prefs: []
  type: TYPE_NORMAL
- en: When you arrive on the page, you must sign in with your GitHub account, using
    the email (or username) and password you use for your GitHub account. This requires
    you to register for a GitHub account if you do not already have one ([https://github.com](https://github.com)).
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, before signing in, I strongly suggest that you carefully read Streamlit’s
    official documentation about sharing apps since you can find very detailed information
    about how to share private and public apps:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.2: Official “Share your app” documentation on Streamlit’s website](img/B21147_07_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.2: Official “Share your app” documentation on Streamlit’s website'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you’ve logged in with your GitHub account, you will see a page similar
    to the following (in mine, there are a lot of already published/deployed applications;
    in the beginning, yours will be empty):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.3: The page you get after logging in](img/B21147_07_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.3: The page you get after logging in'
  prefs: []
  type: TYPE_NORMAL
- en: On the top left-hand side of the page, there is the Streamlit logo, while on
    the right-hand side, there are the **Analytics** and **Settings** areas of the
    menu and your account name.
  prefs: []
  type: TYPE_NORMAL
- en: 'To work correctly, the web application we are going to deploy needs all the
    required libraries in its code. There are several ways to collect the list of
    all these required packages, but one of the simplest is using the `pipreqs` package.
    So, from the command line, let’s write the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This installation is very fast. Once completed, you can write, once again in
    the command line, a very simple instruction:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Here, `my_application_folder_name` is the folder where the Python file of your
    application lives.
  prefs: []
  type: TYPE_NORMAL
- en: 'This instruction will produce a file named `requirements.txt`. If you open
    it, you will see that it contains a list of all the packages/libraries that are
    required by the Python web application we will deploy:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.4: The “requirements.txt” file](img/B21147_07_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.4: The “requirements.txt” file'
  prefs: []
  type: TYPE_NORMAL
- en: 'Very well – we already have everything we need! Before you start the real deployment,
    you must upload the Python file of the web app, so the `app.py` or `whatevername.py`
    file, together with the `requirements.txt` file you just made, and the `nlp.jpg`
    file we used as an image in the sidebar for GitHub (if you don’t update the image
    file, you will get a runtime error). Your GitHub should contain these two files
    and should look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.5: GitHub with the files needed for deployment](img/B21147_07_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.5: GitHub with the files needed for deployment'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are at the stage shown in *Figure 7**.5*, everything is ready for deployment.
    Please move back to the Streamlit Share page and click on **New app**, then **From
    existing repo**, as shown in *Figure 7**.6*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.6: “New app” from an existing repo](img/B21147_07_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.6: “New app” from an existing repo'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, you will be asked to provide some information about the repository, including
    its name (under **Repository**), **Branch**, **Main file path**, and **App URL
    (Optional)**, as shown in *Figure 7**.7*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.7: The information that’s required to deploy the app](img/B21147_07_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.7: The information that’s required to deploy the app'
  prefs: []
  type: TYPE_NORMAL
- en: The information required depends on how you upload your files to GitHub. However,
    providing this information is simple. You must provide the name of your repository,
    which will be displayed as an alternative in the form. You will also need to provide
    the name of the branch, which is usually `main`. Additionally, you will need to
    provide the name of the application code file, which should be `app.py` or the
    name of your Python file. Finally, it is strongly suggested that you fill in the
    name of the public URL that everyone will use to connect to your web application.
    More or less, that’s it! You can then click **Deploy!** and just wait for the
    magic to happen.
  prefs: []
  type: TYPE_NORMAL
- en: 'While the web application is being deployed, you should get a nice message
    saying **Your app is in the oven**, with an animation made up of nice images of
    desserts:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.8: Your app is in the oven](img/B21147_07_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.8: Your app is in the oven'
  prefs: []
  type: TYPE_NORMAL
- en: After a little while, your web application will be up and running in the cloud,
    on the internet!
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.9: The NLP web app has been deployed](img/B21147_07_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.9: The NLP web app has been deployed'
  prefs: []
  type: TYPE_NORMAL
- en: 'This was very easy and neat. Once our app is working on the cloud, we might
    want to manage it. Let’s see what functions we can access by clicking on **Manage
    app** in the bottom-right corner of the web app:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.10: Deployment “terminal”](img/B21147_07_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.10: Deployment “terminal”'
  prefs: []
  type: TYPE_NORMAL
- en: 'First of all, we will see something like an installation terminal – that is,
    a terminal reporting everything that is going on with our deployment. Besides
    this, we can click on the three dots, which will give us access to some very important
    functions:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.11: Functions in Streamlit Share](img/B21147_07_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.11: Functions in Streamlit Share'
  prefs: []
  type: TYPE_NORMAL
- en: First, by choosing **Download log**, we can download the deployment log, which
    is very useful in case of issues. After that, we can access the analytics of our
    app, reboot the web application, delete it, and access some settings. Moreover,
    we can get an overview of all the web applications we have already deployed and
    check the documentation or ask for support.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we select **Settings**, we will have access to three extra voices, as shown
    in *Figure 7**.10*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.12: App settings](img/B21147_07_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.12: App settings'
  prefs: []
  type: TYPE_NORMAL
- en: In the **General** section, we can modify the URL of our app, in the **Sharing**
    section, we can decide whether our web app is private or public, and in the **Secrets**
    section, we can specify – if we use them – the API keys for external services
    without sharing them with everybody.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, there is something else very easy but very useful we can do: we can add
    a badge or a button that says **Open in Streamlit** in our GitHub repository.
    By doing this, everyone can directly access our deployed web app very easily just
    by clicking this badge.'
  prefs: []
  type: TYPE_NORMAL
- en: This operation is quite immediate since we just have to add a `README.md` file
    with a couple of lines of code to our repository.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, let’s add the `README.md` file containing the code shown in the following
    screenshot to our GitHub repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.13: The README.md file’s content](img/B21147_07_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.13: The README.md file’s content'
  prefs: []
  type: TYPE_NORMAL
- en: The first URL, so the first `https://`, is the link to the badge or the image,
    while the second one, so the second `https://`, is just the URL of the web app
    you just deployed, so please customize it with your app’s real URL.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following figure shows us the effect in the GitHub repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.14: The “Open in Streamlit” badge](img/B21147_07_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7.14: The “Open in Streamlit” badge'
  prefs: []
  type: TYPE_NORMAL
- en: As we mentioned previously, upon clicking on the badge, you will be redirected
    to the web application we just deployed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before closing this chapter, please note that when we developed our NLP application
    after installing all the required Python packages, we downloaded the *spaCy English
    model* with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: When we deploy an app on Streamlit Share, we just have a `requirements.txt`
    file. So, how do we get our spaCy English model?
  prefs: []
  type: TYPE_NORMAL
- en: 'If we get an error related to `NOT FOUND en_core_web_sm`, to fix it, we have
    to make a very easy change in our `requirements.txt` file – we have just to replace
    the line related to `spacy` with the following two lines:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: In this way, the English model will be downloaded to our workspace and everything
    will work perfectly!
  prefs: []
  type: TYPE_NORMAL
- en: If we stop for a few seconds and think carefully, we’ll understand that in this
    section, we achieved an incredible result. A web app that was previously living
    only in our little environment (our computer or our local network) is now available
    for anyone who has an internet connection. Anyone everywhere can interact with
    our web application and use it. This kind of skill is incredibly valuable. We
    can not only develop beautiful web apps but also make them available to anybody.
    Our applications can now serve an incredibly wide audience.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Congratulations! You deployed your first web application, and now, anybody can
    access it and enjoy it just by using the URL you specified!
  prefs: []
  type: TYPE_NORMAL
- en: If you look back now, you can consider how far we’ve come together. Starting
    from a real empty file in an empty folder, we have built up a complete web application
    with a lot of features.
  prefs: []
  type: TYPE_NORMAL
- en: The point is that this new web application only lives in the developer’s computer
    or private network unless it’s deployed to the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: Deploying it to the cloud is what we learned to do in this chapter. App deployment
    is the real “big thing” since we can make our creations accessible anywhere!
  prefs: []
  type: TYPE_NORMAL
- en: Making changes and improvements to what we have already deployed is very easy
    since we can simply modify the code according to the new ideas, test it, and upload
    it to the GitHub repository. After that, in a very magical way, Streamlit Share
    will automatically update the deployment seamlessly.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can upload the code on GitHub and Streamlit Share takes care of all the
    rest: easy!'
  prefs: []
  type: TYPE_NORMAL
- en: Starting with the next chapter, we are going to implement a new web application
    that’s even more complex than the one we’ve just finished. By doing this, we will
    learn about and master all the main advanced features of Streamlit!
  prefs: []
  type: TYPE_NORMAL
- en: 'Part 3: Developing Advanced Skills with a Covid-19 Detection Tool'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In Part 3, the book shifts focus to more advanced Streamlit capabilities, using
    the development of a Covid-19 Detection Tool as a practical case study. It begins
    by guiding you through an advanced environment setup and package management, specifically
    tailored to build **artifitial intelligence** (**AI**)-powered web applications.
    This section is critical for understanding the nuances of integrating complex
    AI models. Then, it delves into optimizing the **user experience** (**UX**) of
    Streamlit web apps through customization and UI features, highlighting the importance
    of an intuitive and engaging interface. The part further explores the use of pretrained
    models, demonstrating how to create specialized and personalized applications,
    a skill crucial in the era of AI and machine learning. Finally, it covers the
    deployment and management of complex libraries on Streamlit Share, ensuring that
    you are well-equipped to handle sophisticated app requirements. This part of the
    book is pivotal in elevating your skills from intermediate to advanced, preparing
    you for professional-grade Streamlit development.
  prefs: []
  type: TYPE_NORMAL
- en: 'This part contains the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B21147_08.xhtml#_idTextAnchor091), *Advanced Environment Setup
    and Package Management for Building an AI-Powered Web App*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B21147_09.xhtml#_idTextAnchor099), *Optimizing Streamlit Web
    App UX with Customization and UI Features*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B21147_10.xhtml#_idTextAnchor109), *Utilizing Pretrained Models*
    *to Create* *Specialized and Personalized Web Applications*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B21147_11.xhtml#_idTextAnchor116), *Deploying and Managing Complex
    Libraries on Streamlit Share*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
