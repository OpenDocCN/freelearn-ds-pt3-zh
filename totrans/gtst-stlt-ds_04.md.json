["```py\nmkdir trees_app\ncd trees_app\ntouch trees.py\ncurl https://raw.githubusercontent.com/tylerjrichards/streamlit_apps/main/trees_app/trees.csv > trees.csv\n```", "```py\nimport streamlit as st\nimport pandas as pd\nst.title('SF Trees')\n st.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\n trees_df = pd.read_csv('trees.csv')\n st.write(trees_df.head())\n```", "```py\nstreamlit run trees.py\n```", "```py\nimport streamlit as st\nimport pandas as pd\nst.title('SF Trees')\n st.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\n trees_df = pd.read_csv('trees.csv')\n df_dbh_grouped = pd.DataFrame(trees_df.groupby(['dbh']).count()['tree_id'])\n df_dbh_grouped.columns = ['tree_count']\n st.line_chart(df_dbh_grouped)\n st.bar_chart(df_dbh_grouped)\n st.area_chart(df_dbh_grouped)\n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport numpy as np\nst.title('SF Trees')\n st.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\n trees_df = pd.read_csv('trees.csv')\n df_dbh_grouped = pd.DataFrame(trees_df.groupby(['dbh']).count()['tree_id'])\n df_dbh_grouped.columns = ['tree_count']\nst.line_chart(df_dbh_grouped)\n df_dbh_grouped['new_col'] = np.random.randn(len(df_dbh_grouped)) * 500\nst.line_chart(df_dbh_grouped)\n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport numpy as np\nt.title('SF Trees')\n st.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\n trees_df = pd.read_csv('trees.csv')\n trees_df = trees_df.dropna(subset=['longitude', 'latitude'])\n trees_df = trees_df.sample(n = 1000)\n st.map(trees_df)\n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport plotly.express as px\nst.title('SF Trees')\n st.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\n st.subheader('Plotly Chart')\n trees_df = pd.read_csv('trees.csv')\n\nfig = px.histogram(trees_df['dbh'])\n st.plotly_chart(fig)\n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport datetime as dt\nst.title('SF Trees')\nst.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\ntrees_df = pd.read_csv('trees.csv')\ntrees_df['age'] = (pd.to_datetime('today') -\n                   pd.to_datetime(trees_df['date'])).dt.days\nst.subheader('Seaborn Chart')\nfig_sb, ax_sb = plt.subplots()\nax_sb = sns.histplot(trees_df['age'])\nplt.xlabel('Age (Days)')\nst.pyplot(fig_sb)\nst.subheader('Matploblib Chart')\nfig_mpl, ax_mpl = plt.subplots()\nax_mpl = plt.hist(trees_df['age'])\nplt.xlabel('Age (Days)')\nst.pyplot(fig_mpl)\n```", "```py\nimport streamlit as st\nimport pandas as pd\nfrom bokeh.plotting import figure\nst.title('SF Trees')\n st.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\n st.subheader('Bokeh Chart')\n trees_df = pd.read_csv('trees.csv')\n\nscatterplot = figure(title = 'Bokeh Scatterplot')\n scatterplot.scatter(trees_df['dbh'], trees_df['site_order'])\n st.bokeh_chart(scatterplot)\n scatterplot.xaxis.axis_label = \"dbh\"\n```", "```py\nimport streamlit as st\nimport pandas as pd\nfrom bokeh.plotting import figure\nst.title('SF Trees')\n st.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\n st.subheader('Bokeh Chart')\n trees_df = pd.read_csv('trees.csv')\n\nscatterplot = figure(title = 'Bokeh Scatterplot')\n scatterplot.scatter(trees_df['dbh'], trees_df['site_order'])\n scatterplot.yaxis.axis_label = \"site_order\"\nscatterplot.xaxis.axis_label = \"dbh\"\nst.bokeh_chart(scatterplot)\n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport altair as alt\nst.title('SF Trees')\n st.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\n trees_df = pd.read_csv('trees.csv')\n df_caretaker = trees_df.groupby(['caretaker']).count()['tree_id'].reset_index()\ndf_caretaker.columns = ['caretaker', 'tree_count']\n fig = alt.Chart(df_caretaker).mark_bar().encode(x = 'caretaker', y = 'tree_count')\n st.altair_chart(fig)\n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport altair as alt\nst.title('SF Trees')\n st.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\n trees_df = pd.read_csv('trees.csv')\n fig = alt.Chart(trees_df).mark_bar().encode(x = 'caretaker', y = 'count(*):Q')\n st.altair_chart(fig)\n```", "```py\nstreamlit config show\n```", "```py\nsublime ~/.streamlit/config.toml\n```", "```py\nstreamlit config show > ~/.streamlit/config.toml\n```", "```py\nmkdir .streamlit\nstreamlit config show > .streamlit/config.toml \n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport pydeck as pdk \nst.title('SF Trees')\nst.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\ntrees_df = pd.read_csv('trees.csv')\nsf_initial_view = pdk.ViewState(\n     latitude=37.77,\n     longitude=-122.4\n     )\nst.pydeck_chart(pdk.Deck(\n     initial_view_state=sf_initial_view\n     ))\n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport pydeck as pdk \nst.title('SF Trees')\n st.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\n trees_df = pd.read_csv('trees.csv')\n\nsf_initial_view = pdk.ViewState(\n     latitude=37.77,\n     longitude=-122.4,\n     zoom=9\n     )\n\nst.pydeck_chart(pdk.Deck(\n     map_style='mapbox://styles/mapbox/light-v9',\n     initial_view_state=sf_initial_view,\n     ))\n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport pydeck as pdk \nst.title('SF Trees')\n st.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\n trees_df = pd.read_csv('trees.csv')\n trees_df.dropna(how='any', inplace=True)\n\nsf_initial_view = pdk.ViewState(\n     latitude=37.77,\n     longitude=-122.4,\n     zoom=11\n     )\n\nsp_layer = pdk.Layer(\n     'ScatterplotLayer',\n     data = trees_df,\n     get_position = ['longitude', 'latitude'],\n     get_radius=30) \nst.pydeck_chart(pdk.Deck(\n     map_style='mapbox://styles/mapbox/light-v9',\n     initial_view_state=sf_initial_view,\n     layers = [sp_layer]\n     ))\n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport pydeck as pdk \nst.title('SF Trees')\n st.write('This app analyses trees in San Francisco using'\n         ' a dataset kindly provided by SF DPW')\n trees_df = pd.read_csv('trees.csv')\n trees_df.dropna(how='any', inplace=True)\n\nsf_initial_view = pdk.ViewState(\n     latitude=37.77,\n     longitude=-122.4,\n     zoom=11,\n     pitch=30\n     )\n\nhx_layer = pdk.Layer(\n     'HexagonLayer',\n     data = trees_df,\n     get_position = ['longitude', 'latitude'],\n     radius=100,\n     extruded=True)\n\nst.pydeck_chart(pdk.Deck(\n     map_style='mapbox://styles/mapbox/light-v9',\n     initial_view_state=sf_initial_view,\n     layers = [hx_layer]\n     ))\n```"]