["```py\nif st.sidebar.button('Diagnosis'):\n```", "```py\nnew_img = np.array(our_image.convert('RGB'))\nnew_img = cv2.cvtColor(new_img, 1) #0 is original, 1 is grayscale\nGray = cv2.cvtColor(new_img, cv2.COLOR_BGR2GRAY)\n```", "```py\nst.text(\"Chest X-Ray\")\nst.image(gray, width=400, use_column_width= True)\n```", "```py\nIMG_SIZE = (200, 200)\nimg = cv2.equalizeHist(gray)\nimg = cv2.resize(img, IMG_SIZE)\nimg = img/255 #normalization\n```", "```py\nX_Ray = img.reshape(1, 200, 200, 1)\n```", "```py\nmodel = tf.keras.models.load_model(\"./models/Covid19_CNN_Classifier.h5\")\n```", "```py\ndiagnosis_proba = model.predict(X_Ray)\ndiagnosis = np.argmax(diagnosis_proba, axis=1)\n```", "```py\nmy_bar = st.sidebar.progress(0)\n```", "```py\nfor percent_complete in range(100):\ntime.sleep(0.05)\nmy_bar.progress(percent_complete + 1)\n```", "```py\nif diagnosis == 0:\nst.sidebar.success(\"DIAGNOSIS: NO COVID-19\")\nelse:\nst.sidebar.error (\"DIAGNOSIS: COVID-19\")\n```", "```py\nst.warning(\"This Web App is just a DEMO about Streamlit and Artificial Intelligence and there is no clinical value in its diagnosis!\")\n```"]