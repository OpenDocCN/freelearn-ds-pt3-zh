["```py\n       which python\n```", "```py\n    python --version\n```", "```py\n       sudo apt-get install python2.7\n       sudo apt-get install python2.7-devel\n\n```", "```py\n       sudo yum install python\n       sudo yum install python-devel\n```", "```py\n       sudo zypper install python\n       sudo zypper install python-devel\n```", "```py\n    #Install dependencies\n    sudo apt-get install build-essential\n    sudo apt-get install libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev \n    #Download the tarball\n    mkdir /tmp/downloads\n    cd /tmp/downloads\n    wget http://python.org/ftp/python/2.7.5/Python-2.7.5.tgz\n    tar xvfz Python-2.7.5.tgz\n    cd Python-2.7.5 \n    # Configure, build and install\n    ./configure --prefix=/opt/python2.7 --enable-shared\n    make\n    make test\n    sudo make install\n    echo \"/opt/python2.7/lib\" >> /etc/ld.so.conf.d/opt-python2.7.conf\n    ldconfig\n    cd ..\n    rm -rf /tmp/downloads\n```", "```py\nruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"\n```", "```py\nbrew install python\n```", "```py\nbash ~/Downloads/Anaconda3-5.3.0-Linux-x86_64.sh\n```", "```py\nbash ~/Downloads/Anaconda2-5.3.0-Linux-x86_64.sh\n```", "```py\npip install jupyter\n```", "```py\njupyter notebook\n```", "```py\nlibrary(reticulate)\n\n# Installing a python package from R\npy_install(\"pandas\")\n\n# Importing pandas\npd &lt;- import(\"pandas\", convert = FALSE)\n\n# Some basic pandas operations in R\npd_df &lt;- pd$read_csv(\"train.csv\")\npd_head &lt;- pd_df$head()\npd_dtypes &lt;- pd_df$dtypes\n```", "```py\nnumpy &lt;- import(\"numpy\")\n\ny &lt;- array(1:4, c(2, 2))\nx &lt;- numpy$array(y)\n```", "```py\nimport pandas\ndef get_data_head(file):\n    data = pandas.read_csv(file)\n    data_head = data.head()\n    return(data_head)\n```", "```py\nsource_python(\"titanic.py\")\ntitanic_in_r &lt;- get_data_head(\"titanic.csv\")\n```", "```py\nlibrary(reticulate)\nrepl_python()\nimport pandas as pd\n[i*i for i in range(10)]\n```", "```py\nsummary(py$df)\n```", "```py\nPkg.add(\"Pandas\")\nusing Pandas\n# Creating a dataframe object\ndf = DataFrame(Dict(:score=>[67, 89, 32], :name=>[\"A\", \"B\", \"C\"]))\n\n# Any Pandas function or method could be applied on the created dataframe.\nhead(df)\ndescribe(df)\n```", "```py\n# Get the first 10 rows\n$ head myData.csv\n\n# Get the first 5 rows\n$ head -n 5 myData.csv\n\n# Get 100 bytes of data\n$ head -c 100 myData.csv\n```", "```py\n$ cat upper.txt | tr \"[:upper:]\" \"[:lower:]\" >lower.txt\n```", "```py\n$ split -l 100 huge_file.csv small_filename_\n```", "```py\n# Sort the 5th column alphabetically\n     $ sort -t, -k5 orderfile.csv\n\n# Sort the 3rd column in reverse numerical order\n      $ sort -t,  -k3nr orederfile.csv\n```", "```py\npd.get_option(\"display.max_rows\")\nOutput: 60\n\npd.set_option(\"display.max_rows\", 120)\npd.get_option(\"display.max_rows\")\nOutput: 120\n\npd.reset_option(\"display.max_rows\")\npd.get_option(\"display.max_rows\")\nOutput: 60\n```"]