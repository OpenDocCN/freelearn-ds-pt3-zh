["```py\n    import plotly.graph_objects as go\n    ```", "```py\n    fig = go.Figure()\n    ```", "```py\n    fig.add_scatter(x=[1, 2, 3], y=[4, 2, 3])\n    ```", "```py\n    fig.show()\n    ```", "```py\nfig.add_scatter(x=[1, 2, 3, 4], y=[4, 5, 2, 3])\n```", "```py\nfig.layout.title = 'The Figure Title'\nfig.layout.xaxis.title = 'The X-axis title'\nfig.layout.yaxis.title = 'The Y-axis title'\n```", "```py\nfig.show(config={'displaylogo': False,\n                 'modeBarButtonsToAdd': ['drawrect',\n                                         'drawcircle',\n                                         'eraseshape']})\n```", "```py\nfig.write_html('html_plot.html',\n               config={'toImageButtonOptions':\n                       {'format': 'svg'}})\n```", "```py\nfig.write_image('path/to/image_file.svg',\n                height=600, width=850)\n```", "```py\n    import pandas as pd\n    poverty_data =\n    pd.read_csv('data/PovStats_csv/PovStatsData.csv')\n    ```", "```py\n    regions = ['East Asia & Pacific', 'Europe & Central\n    Asia',           'Fragile and conflict affected\n    situations', 'High income',\n    'IDA countries classified as fragile situations', 'IDA\n    total', 'Latin America & Caribbean', 'Low & middle\n    income', 'Low income', 'Lower middle income', 'Middle\n    East & North Africa', 'Middle income', 'South Asia',\n    'Sub-Saharan Africa', 'Upper middle income', 'World'] \n    ```", "```py\n    population_df = poverty_data[~poverty_data['Country\n    Name'].isin(regions) & (poverty_data['Indicator\n    Name']== 'Population, total')]\n    ```", "```py\n    population_df.head()\n    ```", "```py\n    year = '2010'\n    year_df = population_df[['Country Name',\n    year]].sort_values(year, ascending=False)[:20]\n    ```", "```py\n    fig = go.Figure()\n    fig.add_bar(x=year_df['Country Name'],\n    y=year_df[year])\n    fig.layout.title = f'Top twenty countries by\n    population - {year}'\n    fig.show()\n    ```", "```py\ndef plot_countries_by_population(year):\n    year_df = …\n    fig = go.Figure()\n    …\n    fig.show()    \n```", "```py\napp.layout = html.Div([\n    dcc.Dropdown(id='year_dropdown',\n                 value='2010',\n                 options=[{'label': year, 'value':\nstr(year)}\n                          for year in range(1974, 2019)]),\n    dcc.Graph(id='population_chart'),\n])\n```", "```py\ndcc.Dropdown(options=[{'label': color.title(), 'value':\ncolor} for color in ['blue', 'green', 'yellow']])\n```", "```py\n@app.callback(Output('population_chart', 'figure'),\n              Input('year_dropdown', 'value'))\ndef plot_countries_by_population(year):\n    year_df = …\n    fig = go.Figure()\n    …\n    return fig\n```", "```py\n    …\n    html.Br(),\n    html.Div(id='report'),\n    html.Br(),\n    dcc.Dropdown(id='year_dropdown',\n                 value='2010',\n                 options=[{'label': year, 'value':\n    str(year)}\n                          for year in range(1974, 2019)]),\n    dcc.Graph(id='population_chart'),\n    dbc.Tabs([\n    …\n    ```", "```py\n    @app.callback(Output('population_chart', 'figure'),\n                  Input('year_dropdown', 'value'))\n    def plot_countries_by_population(year):\n        fig = go.Figure()\n        year_df = population_df[['Country Name',\n    year]].sort_values(year, ascending=False)[:20]\n        fig.add_bar(x=year_df['Country Name'],\n                    y=year_df[year])\n        fig.layout.title = f'Top twenty countries by\n    population - {year}'\n        return fig\n    ```", "```py\n    poverty_data = … \n    regions = …\n    population_df = …\n    ```", "```py\nfig.layout.template = template_name\n```"]