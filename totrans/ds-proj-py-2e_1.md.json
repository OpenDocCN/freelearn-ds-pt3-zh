["```py\n    for counter in range(5):\n    ...    print(counter)\n    ... \n    ```", "```py\n    example_dict = {'apples':5, 'oranges':8, 'bananas':13}\n    ```", "```py\n    dict_to_list = list(example_dict)\n    dict_to_list\n    ```", "```py\n    ['apples', 'oranges', 'bananas']\n    ```", "```py\n    dict_to_list = dict_to_list + ['pears']\n    dict_to_list\n    ```", "```py\n    ['apples', 'oranges', 'bananas', 'pears']\n    ```", "```py\n    sorted(dict_to_list)\n    ```", "```py\n    ['apples', 'bananas', 'oranges', 'pears']\n    ```", "```py\n    df = pd.read_excel('../../Data/default_of_credit_card_clients'\\\n                       '__courseware_version_1_21_19.xls')\n    ```", "```py\n    df.shape\n    ```", "```py\n    Out[3]: (30000, 25)\n    ```", "```py\n    import pandas as pd\n    df = pd.read_excel('../Data/default_of_credit_card'\\\n                       '_clients__courseware_version_1_21_19.xls')\n    df.columns\n    ```", "```py\n    df.head()\n    ```", "```py\n    df['ID'].nunique()\n    ```", "```py\n    29687\n    ```", "```py\n    df.shape \n    ```", "```py\n    (30000, 25)\n    ```", "```py\n    id_counts = df['ID'].value_counts()\n    id_counts.head()\n    ```", "```py\n    id_counts.value_counts()\n    ```", "```py\nimport numpy as np\nfrom numpy.random import default_rng \n```", "```py\nrg = default_rng(12345)\n```", "```py\nrandom_integers = rg.integers(low=1,high=5,size=100)\n```", "```py\narray ([3, 1, 4, 2, 1])\n```", "```py\nis_equal_to_3 = random_integers == 3\n```", "```py\nis_equal_to_3[:5]\n```", "```py\narray([ True, False, False, False, False])\n```", "```py\nsum(is_equal_to_3)\n```", "```py\n31\n```", "```py\nrandom_integers[is_equal_to_3]\n```", "```py\n    import pandas as pd\n    df = pd.read_excel('../../Data/default_of_credit_card_clients'\\\n                       '__courseware_version_1_21_19.xls')\n    id_counts = df['ID'].value_counts()\n    id_counts.head()\n    dupe_mask = id_counts == 2\n    dupe_mask[0:5]\n    ```", "```py\n    id_counts.index[0:5]\n    ```", "```py\n    dupe_ids = id_counts.index[dupe_mask]\n    ```", "```py\n    dupe_ids = list(dupe_ids)\n    len(dupe_ids)\n    ```", "```py\n    313\n    ```", "```py\n    dupe_ids[0:5]\n    ```", "```py\n    df.loc[df['ID'].isin(dupe_ids[0:3]),:]\n    ```", "```py\n    df_zero_mask = df == 0\n    ```", "```py\n    feature_zero_mask = df_zero_mask.iloc[:,1:].all(axis=1)\n    ```", "```py\n    sum(feature_zero_mask)\n    ```", "```py\n    315\n    ```", "```py\n    df_clean_1 = df.loc[~feature_zero_mask,:].copy()\n    ```", "```py\n    df_clean_1.shape\n    ```", "```py\n    (29685, 25)\n    ```", "```py\n    df_clean_1['ID'].nunique()\n    ```", "```py\n    29685\n    ```", "```py\ndf_clean_1.to_csv('../../Data/df_clean_1.csv', index=False)\n```", "```py\n    import pandas as pd\n    df_clean_1 = pd.read_csv('../../Data/df_clean_1.csv')\n    df_clean_1.info()\n    ```", "```py\n    df_clean_1['PAY_1'].head(5)\n    ```", "```py\n    df_clean_1['PAY_1'].value_counts()\n    ```", "```py\n    valid_pay_1_mask = df_clean_1['PAY_1'] != 'Not available'\n    valid_pay_1_mask[0:5]\n    ```", "```py\n    sum(valid_pay_1_mask)\n    ```", "```py\n    26664\n    ```", "```py\n    df_clean_2 = df_clean_1.loc[valid_pay_1_mask,:].copy()\n    ```", "```py\n    df_clean_2.shape\n    ```", "```py\n    (26664, 25)\n    ```", "```py\n    df_clean_2['PAY_1'] = df_clean_2['PAY_1'].astype('int64')\n    df_clean_2[['PAY_1', 'PAY_2']].info()\n    ```", "```py\ndf_clean_2.to_csv('../../Data/df_clean_2.csv', index=False)\n```", "```py\n    import pandas as pd\n    import matplotlib.pyplot as plt #import plotting package\n    #render plotting automatically\n    %matplotlib inline\n    import matplotlib as mpl #additional plotting functionality\n    mpl.rcParams['figure.dpi'] = 400 #high resolution figures\n    ```", "```py\n    df_clean_2 = pd.read_csv('../Data/df_clean_2.csv'),\n    ```", "```py\n    df_clean_2[['LIMIT_BAL', 'AGE']].describe()\n    ```", "```py\n    df_clean_2['EDUCATION'].value_counts()\n    ```", "```py\n    df_clean_2['EDUCATION'].replace(to_replace=[0, 5, 6],\\\n                                    value=4, inplace=True)\n    df_clean_2['EDUCATION'].value_counts()\n    ```", "```py\n    df_clean_2['MARRIAGE'].value_counts()\n    ```", "```py\n    df_clean_2['MARRIAGE'].replace(to_replace=0, value=3, \\\n                                   inplace=True)\n    df_clean_2['MARRIAGE'].value_counts()\n    ```", "```py\ndf_clean_2.to_csv('../../Data/df_clean_2_01.csv', index=False)\n```", "```py\ndf_clean_2 = pd.read_csv('../../Data/df_clean_2_01.csv')\ndf_clean_2.groupby('EDUCATION').agg({'default payment next '\\\n                                     'month':'mean'})\\\n                               .plot.bar(legend=False)\nplt.ylabel('Default rate')\nplt.xlabel('Education level: ordinal encoding')\n```", "```py\nimport pandas as pd\nimport matplotlib as mpl #additional plotting functionality\nmpl.rcParams['figure.dpi'] = 400 #high resolution figures\ndf_clean_2 = pd.read_csv('../../Data/df_clean_2_01.csv')\n```", "```py\n    df_clean_2['EDUCATION_CAT'] = 'none'\n    ```", "```py\n    df_clean_2[['EDUCATION', 'EDUCATION_CAT']].head(10)\n    ```", "```py\n    cat_mapping = {1: \"graduate school\",\\\n                   2: \"university\",\\\n                   3: \"high school\",\\\n                   4: \"others\"}\n    ```", "```py\n    df_clean_2['EDUCATION_CAT'] = df_clean_2['EDUCATION']\\\n                                  .map(cat_mapping)\n    df_clean_2[['EDUCATION', 'EDUCATION_CAT']].head(10)\n    ```", "```py\n    edu_ohe = pd.get_dummies(df_clean_2['EDUCATION_CAT'])\n    edu_ohe.head(10)\n    ```", "```py\n    df_with_ohe = pd.concat([df_clean_2, edu_ohe], axis=1)\n    df_with_ohe[['EDUCATION_CAT', 'graduate school',\\\n                 'high school', 'university', 'others']].head(10)\n    ```", "```py\nimport pandas as pd\nimport matplotlib.pyplot as plt #import plotting package\n#render plotting automatically\n%matplotlib inline\nimport matplotlib as mpl #additional plotting functionality\nmpl.rcParams['figure.dpi'] = 400 #high resolution figures\nimport numpy as np\ndf = pd.read_csv('../../Data/Chapter_1_cleaned_data.csv')\n```", "```py\npay_feats = ['PAY_1', 'PAY_2', 'PAY_3', 'PAY_4', 'PAY_5', \\\n             'PAY_6']\n```", "```py\ndf[pay_feats].describe()\n```", "```py\ndf[pay_feats[0]].value_counts().sort_index()\n```", "```py\npay_1_bins = np.array(range(-2,10)) - 0.5\npay_1_bins\n```", "```py\narray([-2.5, -1.5, -0.5, 0.5, 1.5, 2.5,\\\n       3.5,4.5, 5.5, 6.5, 7.5,8.5])\n```", "```py\ndf[pay_feats[0]].hist(bins=pay_1_bins)\nplt.xlabel('PAY_1')\nplt.ylabel('Number of accounts')\n```", "```py\nmpl.rcParams['font.size'] = 4\ndf[pay_feats].hist(bins=pay_1_bins, layout=(2,3))\n```", "```py\ndf.loc[df['PAY_2']==2, ['PAY_2', 'PAY_3']].head()\n```", "```py\nimport pandas as pd\nimport matplotlib.pyplot as plt #import plotting package\n#render plotting automatically\n%matplotlib inline\nimport matplotlib as mpl #additional plotting functionality\nmpl.rcParams['figure.dpi'] = 400 #high resolution figures\nmpl.rcParams['font.size'] = 4 #font size for figures\nfrom scipy import stats\nimport numpy as np\ndf = pd.read_csv('../../Data/Chapter_1_cleaned_data.csv')\n```"]