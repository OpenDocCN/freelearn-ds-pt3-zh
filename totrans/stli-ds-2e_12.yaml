- en: '12'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Streamlit Power Users
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to the final chapter of this book! In this chapter, we will learn from
    the best – Streamlit creators with experience creating dozens of apps and Components,
    Streamlit power users turned Streamlit employees, and even the founder of the
    Streamlit library who now runs the company from within Snowflake. I sat down and
    interviewed six different users and learned about their backgrounds, their experience
    with Streamlit, and what tips they have for users of all experience levels. From
    these interviews, we will learn how they use Streamlit on a day-to-day basis at
    work, for teaching, and also about where Streamlit is going from here.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter is grouped into five interviews:'
  prefs: []
  type: TYPE_NORMAL
- en: Fanilo Andrianasolo, Streamlit creator and tech lead at Worldline
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adrien Treuille, the Streamlit founder and CEO
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gerard Bentley, a Streamlit creator and software engineer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arnaud Miribel and Zachary Blackwood, Streamlit data team members
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Yuichiro Tachibana, the creator of stlite and a Streamlit creator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: First, let’s start with Fanilo!
  prefs: []
  type: TYPE_NORMAL
- en: Fanilo Andrianasolo
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Tyler**: Hey, Fanilo! I just wanted to go ahead and get started; do you want
    to introduce yourself to everyone? What is your background? What do you spend
    your time working on these days?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fanilo**: Hey everyone, my name is Fanilo. I’ve been working at WorldLine
    for the past 10 years, first as a big data engineer then going into business development,
    then into product management, and then back to managing data science teams. And
    now I work as more of a developer advocate, for data science and business intelligence
    internally and externally.'
  prefs: []
  type: TYPE_NORMAL
- en: It’s mostly talking to internal teams about how they can leverage data analytics
    in their payment products and then doing talks externally to promote our data
    analysis and data science skills.
  prefs: []
  type: TYPE_NORMAL
- en: And then on the side, I’m also a lecturer at a university. I give lectures about
    big data and SQL. I do demonstrations using Streamlit for lectures.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, I also do a bit of content creation, mostly on YouTube ([https://www.youtube.com/@andfanilo/videos](mailto:https://www.youtube.com/@andfanilo/videos))
    and Twitter ([https://twitter.com/andfanilo](https://twitter.com/andfanilo)),
    as well as talking externally.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: That’s so many things! I mean, you’ve also been a part of this Streamlit
    community for a very long time now. You’re one of the first original interviews
    in the first edition of the book, you’ve been a regular contributor to the Streamlit
    forums, and now you’re a massive YouTuber in the space.'
  prefs: []
  type: TYPE_NORMAL
- en: What are the big changes in Streamlit, both as a company and as an open-source
    library?
  prefs: []
  type: TYPE_NORMAL
- en: '**Fanilo**: I just realized it has been 3 years of building Streamlit apps!
    When I started using Streamlit, it was a team of 9 people and there was a very
    small community. Now it has really exploded; there are so many social media posts
    it’s really hard to track everything down.'
  prefs: []
  type: TYPE_NORMAL
- en: I feel even with the tremendous state and popularity, it is still very approachable
    for new people or people that are not developers, as a way to create data apps.
  prefs: []
  type: TYPE_NORMAL
- en: Streamlit has always been very careful to make it easy to use, but also to enable
    developers to build more advanced applications as well, while managing to listen
    to a huge community.
  prefs: []
  type: TYPE_NORMAL
- en: One change is that they have loosened up on the constraints a little bit, for
    example, we couldn’t do styling in Markdown 2 years ago but now we can.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: That’s awesome. So, what is your content diet when it comes to Streamlit
    like? If I’m trying to get into this space and know what’s happening and what
    people are building, is Twitter really the best place for discovery?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fanilo**: I actually prefer to use the weekly roundup on the Streamlit Forums
    ([https://discuss.streamlit.io/](https://discuss.streamlit.io/)), managed by Jessica.
    I don’t know how she pulls it all together, but it’s been one of my most reliable
    ways of staying inspired by Streamlit apps.'
  prefs: []
  type: TYPE_NORMAL
- en: I also get to see some apps in Hugging Face Spaces ([https://huggingface.co/spaces](https://huggingface.co/spaces)).
    I regularly see strong apps there, and generally, both those sources go on Twitter
    or YouTube, so by the time I see it there, it is a repeat.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Speaking of an information diet, do you have any favorite apps that
    either you’ve created or seen recently?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fanilo**: I’ve talked to multiple people who wanted to share their own apps
    with me. For example, there was a marketing guy who was starting out with Python
    and he wanted to start a small Python application that would create invoices to
    send to clients. And he made it so that his colleagues could go on the app and
    generate invoices as well, so it’s more of those small apps that everybody can
    build.'
  prefs: []
  type: TYPE_NORMAL
- en: I know of another use case where a user built his own startup around a Streamlit
    multi-page app that he provides to some medical facilities to allow them to track
    their medicine stock between buildings.
  prefs: []
  type: TYPE_NORMAL
- en: It’s been very interesting to see those people create apps, even if it wasn’t
    a part of their initial job as a developer, or even if they weren’t developers.
    I think that those are the apps that stick with me the most.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: I definitely get that; you really have a ton of interesting folks
    who come and talk to you about Streamlit or about their problems. With that context,
    what are some of the hardest parts of building Streamlit apps? Where do you see
    new builders going in the wrong direction?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fanilo**: I often see a lot of people try to build a real-time application,
    which is possible but very hard to handle because suddenly they’re generating
    new Python threads or threads are conflicting with the main thread. Manipulating
    all of those is a hassle.'
  prefs: []
  type: TYPE_NORMAL
- en: I also see people who want to integrate Streamlit with their own design pattern
    at their company with all the visual customizations or putting all their data
    into a cache or session state. Those design patterns are not easy for beginner
    developers to integrate into Streamlit apps.
  prefs: []
  type: TYPE_NORMAL
- en: I also see people that are trying to build very big applications and it can
    get pretty messy very fast because it’s hard for them to understand how the caching
    works with the rerunning of the app from top to bottom.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: What do you mean by a bigger app? Like a really large multi-page
    app, or a really long app?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fanilo**: Both, but mostly I’ve seen people that want to do, for example,
    cross-filtering between 40 different graphs on the same page. Maybe that’s a bit
    too much on one page and you should consider splitting that up into multiple apps,
    so an app has a single responsibility, and it can be very good to that end. That
    would maybe be better than stuffing everything onto one page.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: On the flip side of that, I mentioned that you’ve seen a ton of
    folks learning about Streamlit, and you have some really nice tutorials on your
    YouTube channel. I think your most popular video at the moment is the epic Streamlit
    tutorial video ([https://www.youtube.com/watch?v=vIQQR_yq-8I](https://www.youtube.com/watch?v=vIQQR_yq-8I)).
    How do I go from watching your great video content to building cool apps?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fanilo**: I think doing something a hundred times is the best way to become
    a master of it. The way I do it is I kind of make a Streamlit app for almost any
    random idea I have in my life. For example, I recently made an app to track when
    I’m starting in a badminton tournament. I made another app to just query a MongoDB
    database. I made another app to query my Outlook mailbox to check the recently
    attached files and see if I need to download them.'
  prefs: []
  type: TYPE_NORMAL
- en: So, every time I’ve got an idea, I make an app, and the more I create apps,
    the more I get used to the Streamlit life cycle. I understand it’s about the creative
    expressiveness of Streamlit, where I can have an idea, make a draft, and iterate
    on it little by little. I feel like this is the best way to learn.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: I feel both entertained and inspired whenever I watch you, and I’m
    sure other folks feel very similarly. Speaking of YouTube, what are your favorite
    YouTube videos that you’ve made about Streamlit?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fanilo**: When you start on YouTube, you realize that you have no clue what
    people will actually like. My own favorite videos are the ones that are performing
    the worst, and my least favorite videos are the ones that are performing the best.'
  prefs: []
  type: TYPE_NORMAL
- en: My favorite one would be the video on creating Components because talking to
    Python developers about JavaScript and React can prove quite tricky, to be honest.
    I was a little bit proud of the way I edited that video, and it reminded me of
    how far I had come with tutorials.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Do you have any advice for those folks who are interested in becoming
    Streamlit content creators or educators? I know you posted a video about this
    recently, so I’ll link it here ([https://www.youtube.com/watch?v=pT6lNKtGyP8&t=163s](https://www.youtube.com/watch?v=pT6lNKtGyP8&t=163s)).
    But I wanted to give you a chance to mention some stuff as well.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Fanilo**: Well, first, I can only encourage you to just do it because it
    has led me to so many opportunities, and to meet so many great people that wanted
    to share the apps with me, which I would not have had if I stayed only on Twitter,
    or only on the forum answering questions. So, that has been a huge benefit for
    me, and even in my own company.'
  prefs: []
  type: TYPE_NORMAL
- en: The unfortunate truth about starting content creation is the one that everybody
    shares. Every content creator will say this. There’s always this fear that maybe
    people won’t like you, or that people will judge you. I’m having those same conversations
    about the fact that people will judge me. What if I make a mistake? Or if people
    make fun of me?
  prefs: []
  type: TYPE_NORMAL
- en: Most of the advice I give is to always think about starting small and with small,
    consistent steps because that’s how you create something, by working slowly. And
    also don’t compare the current present or your current journey to creators that
    have done this for 5 years because there’s nothing comparable, and that’s, like,
    the quickest way to burn out.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: I think that’s great advice. It’s the same with careers as well,
    where you want to make sure that you don’t compare your first year with someone
    else’s tenth year.'
  prefs: []
  type: TYPE_NORMAL
- en: Well, this has been awesome, I just wanted to say thank you again for being
    interviewed twice! Before we go, do you have anything else you want to mention
    or talk about?
  prefs: []
  type: TYPE_NORMAL
- en: '**Fanilo**: I’m pretty easy to find online, so check out my YouTube channel
    – everything else is under my handle `andfanilo`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Fanilo can be found on GitHub ([https://github.com/andfanilo](https://github.com/andfanilo)),
    YouTube ([https://www.youtube.com/@andfanilo](mailto:https://www.youtube.com/@andfanilo)),
    and Twitter ([https://twitter.com/andfanilo](https://twitter.com/andfanilo)).'
  prefs: []
  type: TYPE_NORMAL
- en: Adrien Treuille
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Tyler**: Hey, Adrien! Good to chat with you again; thanks for agreeing to
    be interviewed. Do you want to start this off with a quick intro?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Adrien**: Yeah! I was the founder and CEO of Streamlit for four and a half,
    maybe five years and then I became the head of Streamlit inside of Snowflake after
    the acquisition.'
  prefs: []
  type: TYPE_NORMAL
- en: Here we have two main goals, one of which is to build an amazing first-party
    version of Streamlit into Snowflake, affecting the entire Snowflake product line,
    and the other is to maintain and run this wonderful open-source project that is
    growing really quickly and is used all over the world by the world’s biggest companies.
  prefs: []
  type: TYPE_NORMAL
- en: The move from being an independent company to Snowflake has really supercharged
    and added many dimensions to my job description, which is super exciting.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Great, I guess we can jump right in and talk about the acquisition
    first. That’s the biggest change from our first interview when the first version
    of this book came out. As you mentioned, in the spring of 2022, Streamlit was
    acquired by Snowflake. What was that process like?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Adrien**: Streamlit was an unusual company in that it was first a personal
    project, and even when it became a business, it was as much a community and an
    open-source project as it was a business. Obviously, we thought there would be
    long-term success with the business model, but we always were a very mission-driven
    organization in that we genuinely believed that this product we were bringing
    to the world would advance the state of the art and would make people’s lives
    better.'
  prefs: []
  type: TYPE_NORMAL
- en: As a part of that, we never once looked at Streamlit and asked why we were doing
    this, or how we would squeeze as much money out of it as possible. We created
    a vehicle that enables us to get the product in as many hands as possible and
    continue to work on it with talented designers, engineers, and data scientists
    to the benefit of everyone.
  prefs: []
  type: TYPE_NORMAL
- en: Then, when Snowflake approached us about acquiring us, we had not really considered
    that as an option. Our expectation was to create all of this through the original
    company. The thing that changed and completely blew our minds was recognizing
    that Snowflake wanted and needed a Streamlit in exactly the same way that we were
    trying to create it for the community. And that was really, really cool.
  prefs: []
  type: TYPE_NORMAL
- en: It really wasn’t some new business plan that we had never thought of; it was
    an alignment of incentives up and down the stack. We have really complementary
    incentives and objectives, and it was, like, wait a minute, this is awesome. Let’s
    work with people to whom success means the same thing as it means to us, and not
    only was that true at the time of the acquisition but it is also still true now.
  prefs: []
  type: TYPE_NORMAL
- en: I feel like Streamlit and Snowflake are an amazing combination and have become
    more aligned over time, not less, which is amazing and cool.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Absolutely. As you mentioned, there is a massive community around
    Streamlit that you clearly care about. It must have been a bit easier to grow
    that community intentionally when Streamlit was a fledgling library; how has that
    changed as it has grown in size?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Adrien**: The key when you’re going through these rapid scale changes (if
    you don’t want to destroy everything) is to be mindful of the things that got
    you there and the principles that are most important.'
  prefs: []
  type: TYPE_NORMAL
- en: From the early days of Streamlit, we did not think of the community as adjacent
    to the product, but we thought of the product, the forums, the website, the creators
    program, and the effort that we put into communication as input into the community.
  prefs: []
  type: TYPE_NORMAL
- en: So, taking a step back, we like to say our principles out loud clearly and hold
    onto them as we scale. One of them is that the community is a living thing that
    matters at the core of everything. That’s true today. Another is how we talk about
    Streamlit, and how enthusiastic we are about the product itself. You’ll notice
    this in all our documentation and in the forums, where we use lots of exclamation
    points and emojis. We write like someone who is excited about what they’re talking
    about, which is true for us!
  prefs: []
  type: TYPE_NORMAL
- en: The community is a living thing that is cultivated and given emotional properties,
    like genuine enthusiasm about data and excitement about exploration and sharing
    one’s work. I think this has been one of the reasons why people have found constant
    themes in Streamlit, even as we double and double, or triple and triple over time.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: One of the things I noticed before I joined Streamlit, and continue
    to notice as an employee, is the emphasis on kindness. Both in interactions with
    the community and other employees, it was so noticeably different from other groups
    I had seen in the past.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Adrien**: Yeah, even when I was super young, whenever I ran a group, it was
    a nice group. I think that was often reflected at Streamlit, from co-founders
    to employees and even to the types of people that we attracted into the community
    and the product. Over the years, these things have taken a life of their own,
    and the characteristics have also taken on lives of their own. For example, when
    we started to hire our first employees at Streamlit, we purposefully selected
    and screened them for kindness. And then I was a little surprised to talk to employees
    much later who also screened for kindness in interviews as well! Some emotional
    dimensions have taken on a sort of self-propelling function in the coolest possible
    way.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Moving on, in the first interview that we did in the prior edition
    of this book when we were talking about how Streamlit has changed over time, you
    mentioned that Streamlit is more fundamental to Python programming than it is
    to machine learning or data science, and how toy-like Streamlit was. How do you
    feel that vision has come true?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Adrien**: I totally agree. Streamlit is growing beyond just the ability to
    build rich and interesting apps and is starting to encompass the goal of being
    that visual layer on top of Python.'
  prefs: []
  type: TYPE_NORMAL
- en: The other part of this is that Python has so many more niches, like the fact
    that it is a primary language for CS education and a great language for data engineering
    work. It’s also a language of, just, scripting and pulling things together across
    a billion different APIs and file formats. So, we’re seeing apps like the GPTZero
    app ([https://gptzero.me/](https://gptzero.me/)) that originated in Streamlit
    and does hardcore machine learning stuff, or other apps that measure and help
    stop human trafficking around the globe.
  prefs: []
  type: TYPE_NORMAL
- en: Now there are even other examples of Streamlit apps created by GPT-3 itself.
    It seems that if there is any language or framework to use as the product of large
    language models like GPT3, Streamlit is the right target because of the super
    unique, super easy data flow. It really lends itself to this class of models and
    tightens the complexity of apps that they can create. We’re only just seeing the
    beginning of this, and I think it has a super rich and amazing future. I can’t
    wait.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Adrien, thank you so much for coming and talking with us. I was
    wondering if you had anything else that you wanted to talk about.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Adrien**: I think a very cool thing about Streamlit is that many of our hypotheses
    about the trends in data science have been validated by our experience creating
    the product. The core idea was super simple; it wasn’t rocket science! It was
    a new kind of data work that was Python-native and tied together APIs, `pandas`,
    machine learning, and all the other Python concepts. Of all the different directions,
    the one that I think still has so much of a greenfield area to explore is machine
    learning, and there are so many different angles to talk about. One we already
    talked about was AI generating apps, which I think is very real and we’re going
    to see more and more of that over the next couple of years. The other is bringing
    Streamlit into the ML development process more deeply as you’re building models
    and exploring large datasets. There is essentially an unbounded need for a visualization
    layer in the experience of machine learning engineers, so it’s really exciting
    to watch as this develops and to help it along.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Thanks again for coming on here, Adrien! You can find Adrien online
    on Twitter at [https://twitter.com/myelbows](https://twitter.com/myelbows).'
  prefs: []
  type: TYPE_NORMAL
- en: Gerard Bentley
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Tyler**: Hey, Gerard! Let’s get started, I was wondering if you could give
    us a bit about your background. What do you do for work? What got you started
    in the data world?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gerard**: Right now, I’m working on backend web services at a startup called
    Sensible Weather. We sell an insurance guarantee against bad weather, a new product
    in the climate tech space. I haven’t gotten a lot of time to use Streamlit here,
    but I use it for a couple of things internally that haven’t completely been deployed
    yet.'
  prefs: []
  type: TYPE_NORMAL
- en: Previously, I worked at a mortgage company, doing mostly batch ETL work, where
    I got a bit of exposure to data science and predictive models in finance. There,
    it was fun to build something internal in Streamlit to visualize what would happen
    if a person’s credit score were higher, or if they put more principal down, etc.
    Before Streamlit we didn’t have a tool to answer those questions quickly.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: So, you were mostly focused on models created by the data science
    team, and creating the interactive apps that are used to demo the models, right?
    What got you into the data world?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gerard**: I did a year of AI research with Professor Osborn at Pomona College
    after my undergrad, where we explored computer vision on classic video games.
    We trained convolutional neural networks and built out data pipelines to record
    gameplay screenshots and tag training data.'
  prefs: []
  type: TYPE_NORMAL
- en: This was before Streamlit existed. I was building out interfaces that loaded
    an image, asked the user to tag image features, and then saved the new training
    data. But it took me months to learn JavaScript, Nginx, and Docker enough to deploy
    a useful Flask app.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: I have a lot of experience trying to create projects in Flask and
    Django, and they’re extremely difficult to work with. So, then, after these experiences,
    how did you get your introduction to Streamlit?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gerard**: I heard about it while I was doing a remote teaching gig at AI
    Camp. One teacher suggested that I use it with students. One Python beginner was
    able to start a personal website in a day, and then add images and interactivity
    on their own during that week. They built out a full computer vision app, which
    gave them a lot of confidence and was really impressive in my eyes. So, that’s
    where I got started with Streamlit, and then I started making small side projects
    to try and understand new things at work and on my own.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: That’s very cool. A lot of apps are pedagogical, where your goal
    is to teach someone something, either students or different partners within work.
    So what was your “aha” moment with Streamlit? At what point did you realize that
    you really liked the library?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gerard**: I think I saw it early on. When it took only a day or so for a
    student to run a YOLO computer vision web app with webcam support. And I just
    knew it had taken me weeks to build an app like that with HTML and JavaScript.
    From then, I understood that this could be used to interact with any machine learning
    model.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Since then, you’ve made lots of different Streamlit apps. What did
    your learning curve with Streamlit look like? Did you feel like it ramped up really
    fast, and then you plateaued? Was it easy to learn, hard to master, or hard to
    learn, easy to master? Or even continuous?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gerard**: Definitely fast to ramp up. To learn, I went through the gallery
    and copied the source code of apps I wanted to mimic. Then, I would make changes
    to make them my own. I was pretty comfortable with Python already, so this process
    went smoothly.'
  prefs: []
  type: TYPE_NORMAL
- en: Easy to learn, and then harder to master. When I was trying to do things from
    traditional web apps, such as the client state and async functions, I had to search
    the forums and web for solutions.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: That’s my experience as well. So, why do you create Streamlit apps
    like your Fidelity app ([https://github.com/gerardrbentley/fidelity-account-overview](https://github.com/gerardrbentley/fidelity-account-overview))?
    As part of the journey to master Streamlit?'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18444_12_01.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.1: Gerard’s Streamlit app'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gerard**: Part of it is to build a portfolio that I can show companies who
    might hire me. Part of it is my own interests; these are apps that I want to build
    mostly for myself and see if they will work. Streamlit is the fastest way to do
    that for me at the moment.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: On the Fidelity app, was it more “I’m starting to look at new jobs
    and I want to develop a portfolio” or more on the side of “I have this personal
    problem I’m trying to figure out”?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gerard**: That example was a strong mix of both. I wanted to build a dashboard
    for myself for my own data, so it was a personal problem. At the same time, I
    was thinking about a project that might demonstrate data analysis skills for applying
    to data science roles. Other apps have a focus on backend concepts, which were
    great to reference in interviews.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: How long did the Fidelity app take? And how did you get the idea?
    Can you talk me through the build and thought process?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gerard**: I’d say version one took probably 4 hours of coding time and researching
    time. I was pretty confident in my skills to load a DataFrame from a CSV file
    from my computer, and I had built a handful of apps with a file drop input, which
    Streamlit makes really straightforward. Loading the data was easy enough, then
    I had to clean it, present it, and add filters.'
  prefs: []
  type: TYPE_NORMAL
- en: The most time-consuming part of building it was making the visuals. In my experience,
    Plotly has the nicest default charts, so that helped me try out a mix of charts
    without a ton of code.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Four hours for the first version of the Fidelity app, and then what
    happened after that?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gerard**: After that, I basically thought, oh, how can I share this? How
    could I let someone else use this easily without having to run Streamlit on their
    computer? So, that included a usable description and then some niceties around
    adding colors and using Streamlit AG Grid.'
  prefs: []
  type: TYPE_NORMAL
- en: That was an extra 2 hours of work or so, to clean up and make it pretty. Then,
    I was happy with it being out in the wild. This was after I had read the first
    version of your book and DM’d you on Twitter about it. Then, you shared the app
    and I immediately thought, oh I should make this a little prettier.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: I really enjoyed the app! Have you ever thought about charging for
    an app? Maybe figuring out how to charge for more than basic features?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gerard**: I’ve thought about that a little. Some apps that I have built,
    such as a QR code maker ([https://github.com/gerardrbentley/flash_qr](https://github.com/gerardrbentley/flash_qr)),
    are similar to existing Software-as-a-Service products, but I just made a version
    for fun. I definitely think some apps would work with a tiered or freemium structure,
    but I’ve never put in the effort.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: After you posted about the app, what was your first interaction
    with the Streamlit community? Broadly, what happened from there? Did people, like,
    reach out to you via GitHub or Twitter, or what was the response?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gerard**: After that point, I posted a few things about the app, and people
    started following me on GitHub and forked the code. That’s the main interaction
    I’ve seen.'
  prefs: []
  type: TYPE_NORMAL
- en: And then the viewership metrics feature came out on Streamlit Community Cloud,
    and I saw that people were using the app every month, or at least viewing it!
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: After building your first set of apps, are there big things that
    you wish you would have known earlier? Maybe about Streamlit flow, storing, state,
    or caching?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Gerard**: Definitely using forms to stop re-runs is important. I made a couple
    of apps that did time-series forecasting, and whenever you change one slider,
    it’s going to trigger a change everywhere. But if you keep that in a form, then
    you can control the execution a little better.'
  prefs: []
  type: TYPE_NORMAL
- en: When I got started, there were fewer of the control flow functions such as `st.stop()`
    or `st.experimental_rerun()`. But now, I use those to keep code from nesting really
    far in a bunch of `if` statements. Also showing a warning with why the app stopped
    is good, because the user never knows as much as you know about your app.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: I just wanted to say thanks for the great interview. I really like
    all of your apps! If you’re reading this and want to find Gerard, you can find
    him on LinkedIn at [https://www.linkedin.com/in/gerardrbentley](https://www.linkedin.com/authwall?trk=bf&trkInfo=AQGvqeLue1E4AgAAAYqwwTpAtU_XFg4R7ziS3xw_A0DX1t3WxqoXwFBo04Bq81h43Wgi50U_SpVL270lZXr8eWZ_BsX5oKUcR3-Vy9Z3hSudrGFdiIXyKGehp76ZDS5WcYbNjFc=&original_referer=&sessionRedirect=https%3A%2F%2Fwww.linkedin.com%2Fin%2Fgerardrbentley)
    or on his website at, [https://home.gerardbentley.com/](https://home.gerardbentley.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Arnaud Miribel and Zachary Blackwood
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Tyler**: Hey Zachary and Arnaud! First, do you each want to tell everyone
    a bit about yourself?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Zachary**: As you mentioned, I’m Zachary Blackwood. I started off as a teacher
    and then when that wouldn’t pay the bills, I switched to web development and then
    got sucked into the data team there because they were using Python, and that sounded
    like fun.'
  prefs: []
  type: TYPE_NORMAL
- en: I was with a little AG tech startup that got acquired by a larger organization,
    where I learned a lot about infrastructure and data engineering. While I was there,
    I built various dashboards for the data science team, and we tried out several
    different frameworks. A friend of mine showed me Streamlit, and this may be me
    getting ahead of myself, but I loved it.
  prefs: []
  type: TYPE_NORMAL
- en: Later, the same friend told me that he had a friend who worked at Streamlit
    and was looking for a data engineer. I immediately applied, and here I am! Now,
    I work on the data team at Streamlit.
  prefs: []
  type: TYPE_NORMAL
- en: '**Arnaud**: Hey everyone, I’m Arnaud Miribel. I have done data science for
    over five years now. I started working in a few companies that had domain expertise
    in a few different fields, which is something I’ve always loved about data science:
    you can get into anything. The first one was in the legal field working on court
    decisions with **Natural Language Processing** (**NLP**). Another one was a hospital,
    and I did machine learning on medical reports. Another one was working in the
    continuing education space, teaching machine learning to a lot of folks.'
  prefs: []
  type: TYPE_NORMAL
- en: At the last two companies, I used Streamlit and loved it. I thought it was the
    greatest thing ever; it suddenly made my life so much easier. It was so different
    from all my student projects where I was struggling with either Plotly, Jupyter,
    or Flask. So, when I discovered, it was super happy.
  prefs: []
  type: TYPE_NORMAL
- en: I was on Twitter and saw that Johannes, who had a similar background to me,
    had started to work at Streamlit while living in Berlin. That was quite a surprise,
    as I always thought Streamlit was SF Bay Area only! I DM’d him on Twitter, and
    he had me meet with Adrien, and then… I started working for Streamlit. That was
    about two years ago, and that’s how I got started.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: It’s funny how things work like that sometimes; I know I found out
    about Streamlit via Twitter. So, then, both of you are on the data team at Streamlit
    with me, and you two have spent all this time over the course of the past 6 months
    or so building a library called `streamlit-extras` ([https://extras.streamlitapp.com/](https://extras.streamlitapp.com/)),
    which contains a lot of the mini tools we have built on the Streamlit data team
    over the years. Can you talk a bit about the central problem that inspired you?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arnaud**: In some ways, it was a little selfish because we wanted to have
    some way to share all of our findings. And then we realized that it was an open-source
    product that we should share with everyone, a way for us to show our experiences
    and teachings from being heavy Streamlit users. We also wanted to release it as
    an experiment of sorts, to see what the community did with it and to take inspiration
    and build on that.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: So, when you say experiences and teachings, what are some of the
    things that you mean?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arnaud**: Within the data team, we have one large multi-page app that we
    develop. In it, there are a lot of visual functions or hacks that we do on top
    of Streamlit as ways to augment it visually and make the viewer experience better.
    So, we wanted to isolate those and make them into a single package.'
  prefs: []
  type: TYPE_NORMAL
- en: There are also some functions that just make things faster for data scientists,
    like systematically making charts always show the underlying DataFrames and a
    button that exports the data to a CSV file. We wanted to package all of these
    things together because they really just fit together as Components, and we thought
    it would make sense to call a group of small Components extras!
  prefs: []
  type: TYPE_NORMAL
- en: '**Zachary**: The other source of these extras, other than functions that we’re
    using internally, is the community forum! We all spend some time on that on a
    regular basis and it is interesting to see the kinds of problems people have,
    and how they approach them. There are often very common kinds of problems that
    take a little bit of setup code but work fairly well once you have that setup.
    A simple example of one that just takes a little bit of extra CSS is when people
    wanted to have a logo on the top left of their app above their list of pages in
    a multi-page app. It turns out it’s not very hard to do that, but we have seen
    people ask about it multiple times. So, we made that into a function, and put
    that function in `streamlit-extras` ([https://extras.streamlit.app/App%20logo](https://extras.streamlit.app/App%20logo)).
    A number of the extras have come directly out of somebody who asked for something
    in the forum. And we either figured it out, or someone else figured it out, and
    we added it to extras to make it more discoverable and easier to make sure you
    don’t repeat yourself.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Some of my favorite extras are the one that makes it much easier
    to add headers with a solid colored line under them ([https://extras.streamlit.app/Color%20ya%20Headers](https://extras.streamlit.app/Color%20ya%20Headers))
    and the data explorer extra ([https://extras.streamlit.app/Dataframe%20explorer%20UI](https://extras.streamlit.app/Dataframe%20explorer%20UI)).
    Do you two have some favorites?'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18444_12_02.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.2: Explorer'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arnaud**: My favorite is one of the latest ones that was added called “chart
    container” ([https://extras.streamlit.app/Chart%20container](https://extras.streamlit.app/Chart%20container)),
    which is a super efficient API for creating a BI component quickly. So you can,
    whenever you’re working with a DataFrame, create a plot, show the DataFrame, and
    also export it to a CSV in one function.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18444_12_03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.3: Chart Container'
  prefs: []
  type: TYPE_NORMAL
- en: '**Zachary**: I like that one as well! I have one that we don’t use internally
    but is something that comes up all the time. People get confused or frustrated
    by the fact that when they click a button, it does not “stay clicked” after they
    do something else on the page. This happens because of the model that Streamlit
    has, which is to re-run the script from the top down on each interaction. People
    sometimes expect it to work more like a checkbox, in that you click it and it
    remembers that it has been clicked.'
  prefs: []
  type: TYPE_NORMAL
- en: The extra that we made is called Stateful Button ([https://extras.streamlit.app/Stateful%20Button](https://extras.streamlit.app/Stateful%20Button)),
    which stays clicked across re-runs. It’s a simple one but I think it’s nice, and
    it solves a problem that people seem to have out in the wild.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: I see all these extras as a way, if you’re an individual developer
    on a team, to understand best practices and get a leg up on using Streamlit. One
    unmentioned one so far is called Chart annotations ([https://extras.streamlit.app/Chart%20annotations](https://extras.streamlit.app/Chart%20annotations)),
    which lets you put clickable annotations on graphs. I think it’s a wonderful extra
    for use at work, when you want to be able to explain large movements in graphs
    on the graph itself:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18444_12_04.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.4: Annotations'
  prefs: []
  type: TYPE_NORMAL
- en: In terms of the development of the library itself, what were some of the difficulties
    in developing something like this?
  prefs: []
  type: TYPE_NORMAL
- en: '**Zachary**: It actually started as something called `st-hub`! We wanted to
    make Components and functions easy to discover all in one place. That project
    turned into its own thing, but a big part of that was building this gallery that
    we have on [http://extras.streamlit.app](http://extras.streamlit.app). It’s been
    a fun process for both of us. Right now, the gallery is dynamically based on the
    source code of each extra and some dunder variables ([https://www.pythonmorsels.com/dunder-variables/](https://www.pythonmorsels.com/dunder-variables/))
    that you set. Then, it builds all of the pages that you see on the main gallery
    page with the code, the docstrings, the usage examples, etc. That was one of my
    favorite parts about `streamlit-extras` — the technical challenge and the clever
    solutions for making this kind of dynamically generated page. We spent all this
    time on it because we wanted to make the barrier as low as possible so other people
    in the community could contribute.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arnaud**: I agree, the gallery is probably 75% of the work. The funny part
    is that the challenge was not so clear at the beginning, the motivation for why
    we really wanted to do this. But we knew we really wanted to have projects within
    the Streamlit team to be more discoverable and also wanted to make Components
    more discoverable and easier to create, so we thought this would be a good community
    start.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: One of the difficulties that I’ve had writing this book is that
    I realistically, could write many chapters on Components. And in all likelihood,
    I would have to teach a sufficient amount of CSS, HTML, or JavaScript, or with
    Python, I would have to show folks how to create and upload packages to PyPI.
    There is an extremely large jump between creating beautiful Streamlit apps and
    creating Components.'
  prefs: []
  type: TYPE_NORMAL
- en: That’s one of the biggest reasons I wanted to have the two of you on, to encourage
    people to start their component creation journey with `streamlit-extras` ([https://extras.streamlit.app/Contribute](https://extras.streamlit.app/Contribute)).
  prefs: []
  type: TYPE_NORMAL
- en: I always close out these interviews by asking if the guests have anything else
    to say or have anything else they wanted to chat about. The floor is yours!
  prefs: []
  type: TYPE_NORMAL
- en: '**Zachary**: It was at the company before Streamlit that I started creating
    open-source packages for the first time, and even though they weren’t used terribly
    much beyond my own team, I really enjoyed being part of the open-source ecosystem.
    And now it has been really fun to work on a project that is widely used and has
    a strong user base and is being actively developed. I think there are a lot of
    ways that Streamlit could make it easier to contribute, but I’m really just excited
    to be a part of the community and get to pass this work along. It has been really
    fun to create things for my team that solves their problems, and then throwing
    it out on the forums for others to use is pretty fun too.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Arnaud**: Exactly what he said. I would encourage anyone to try out `streamlit-extras`
    and have fun and tell us what they think is good or bad about it. And more generally,
    this was the first time I made an open-source contribution and it is very rewarding
    because you get people that use it, and reference it even in things like YouTube
    videos. Ultimately it is a commitment too, as you get pressure from people that
    open PRs or issues and you realize that something looks bad or doesn’t work as
    expected. I would encourage people to try it out and try building their own open-source
    packages because it is really a nice adventure.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Thank you two so much for coming out and chatting with us! You can
    find Zachary on GitHub at [https://github.com/blackary](https://github.com/blackary)
    and on Twitter at [https://twitter.com/blackaryz](https://twitter.com/blackaryz),
    and you can find Arnaud on GitHub at [https://github.com/arnaudmiribel](https://github.com/arnaudmiribel)
    and on Twitter at [https://twitter.com/arnaudmiribel](https://twitter.com/arnaudmiribel).'
  prefs: []
  type: TYPE_NORMAL
- en: Yuichiro Tachibana
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Tyler**: Hey, Yuichiro, so great to do this with you! Do you want to get
    started by introducing yourself to everyone? Talk a bit about your background.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Yuichiro**: OK, so I am Yuichiro Tachibana and I am currently in Japan. I’m
    also a member of the Streamlit Creators program and am developing and maintaining
    some Streamlit libraries. My personal OSS projects are hosted on GitHub!'
  prefs: []
  type: TYPE_NORMAL
- en: As far as my background, I studied computer vision and applications of machine
    learning at my university. I worked with people who built robots, and software
    was necessary to help build robotic intelligence, especially in computer vision.
    This is why my knowledge of computer vision and machine learning is more practical
    than theoretical.
  prefs: []
  type: TYPE_NORMAL
- en: After that, I took a year off from university and started my own personal project
    with some financial support from the Japanese government where I built a deep
    learning accelerator based on a **Field-Programmable Gate Array** (**FPGA**).
    I used very low-level stuff at the time; this was around 2014\.
  prefs: []
  type: TYPE_NORMAL
- en: Then, I went to work for a commercial company where I was working on various
    projects from NLP to computer vision, focused on commercial products. At that
    time, my main skills gradually changed to have a more software development focus
    rather than just computer vision or machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: At this company, I started working on a web-based video streaming recording
    system, which had some similar parts to the `Streamlit-webrtc` component that
    I eventually built.
  prefs: []
  type: TYPE_NORMAL
- en: Then, I moved to a company that my friend started, and I worked on more structured
    data. I was a software engineer, and I built internal applications to show some
    data or some analytical results based on logs. That’s when I started using Streamlit
    heavily.
  prefs: []
  type: TYPE_NORMAL
- en: And now, I have no job. I’m taking a break, and that’s a long bit of self-introduction!
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Very cool, what a fun journey. Did you learn about Streamlit when
    you did the web streaming work, or mostly with the last company you were with?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Yuichiro**: I actually started with Streamlit at my first company where I
    worked as a software developer. I worked with some researchers in the field of
    computer vision, who usually showed me their demos using OpenCV. They would carry
    their laptops over to my seat and show me how cool their work was! My first motivation
    was to look into alternative tools for them to use to create some portable and
    shareable demos. I think I originally found Streamlit through Twitter, actually.'
  prefs: []
  type: TYPE_NORMAL
- en: After that, I couldn’t find anything that could help me do real-time video streaming
    in Streamlit, so I built `Streamlit-webrtc` ([https://github.com/whitphx/streamlit-webrtc](https://github.com/whitphx/streamlit-webrtc)),
    which is a component that lets you handle real-time video and audio streams in
    Streamlit.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: I think `Streamlit-webrtc` is really cool, not just because it is
    useful but also because it seems very, very difficult to produce. Do you want
    to talk about the development of the component a bit? How are people using it?'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18444_12_05.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.5: WebRTC'
  prefs: []
  type: TYPE_NORMAL
- en: '**Yuichiro**: First of all, thank you very much. I think the original motivation
    for creating and developing this library was to help computer vision researchers
    or software developers who want to create demos on top of their models and a live
    video stream. So, from my point of view, it replaces parts of OpenCV.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: I think this also leads into your work with stlite ([https://github.com/whitphx/stlite](https://github.com/whitphx/stlite)),
    which is a serverless version of Streamlit and essentially means you can share
    a Streamlit app with someone and they can run it locally in their browser without
    having to do any of the Python setup for the app. Can you talk us through a bit
    of your motivations in building stlite? What was the central problem there?'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18444_12_06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 12.6: stlite'
  prefs: []
  type: TYPE_NORMAL
- en: '**Yuichiro**: Well, where should I start? At first, I started by looking at
    Jupyter, where Jupyter is similar to Streamlit because it abstracts away some
    of the front-end code and hides it from the developers so the developers can mostly
    write Python code. And then I saw that Jupyter could be turned into web assembly,
    which meant that it could be run in the browser and run entirely locally. At that
    point, I knew I could do the same thing with Streamlit.'
  prefs: []
  type: TYPE_NORMAL
- en: I also had this emotion, this opinion, that the offline experience was important.
    That some people would want a privacy-focused experience where everything was
    running locally.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Right, there are some things that you want to have centralized,
    and there are some things where you really want to use your own computer for.
    There are thin and thick clients everywhere!'
  prefs: []
  type: TYPE_NORMAL
- en: '**Yuichiro**: Exactly. During my work with the deep learning accelerator, I
    had a hypothesis that the offline, local capability is beneficial especially for
    computer vision or machine learning stuff, primarily because of privacy.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Then, you had this big opinion about the importance of privacy and
    local development, and then you also had this technical idea for a solution with
    WebAssembly. Where did it go from there?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Yuichiro**: At that point, I had the idea, but I knew it would be really
    difficult. It took maybe half a year before I even started after I got the idea.
    There were some discussions on the Streamlit forum, but I couldn’t find a clear
    way to solve the technical problem from an implementation standpoint.'
  prefs: []
  type: TYPE_NORMAL
- en: That all changed in late April 2022, with the launch of PyScript ([https://pyscript.net/](https://pyscript.net/)),
    which lets you run Python in your browser. It was a potential idea competitor,
    and after I saw it, I decided to bring all my power into this project. And I started
    development the next week.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: That is awesome; I recommend stlite to many people that are just
    starting out with Streamlit because they don’t have to do any of their own development
    setup. They can just start coding and then it’s there; it is like magic.'
  prefs: []
  type: TYPE_NORMAL
- en: In your mind, where does it go from here?
  prefs: []
  type: TYPE_NORMAL
- en: '**Yuichiro**: I have so many to-do items on my list related to it. But I still
    don’t have a 100% clear image of what we’ll be able to do in the future. So, first
    of all, I would like you and the audience of this interview to let me know about
    interesting applications of stlite. If you have any ideas, please let me know!'
  prefs: []
  type: TYPE_NORMAL
- en: Some other applications could be with edge computing, like Cloudflare and its
    edge computing services, which are based on WebAssembly but don’t support Python.
    Maybe we could integrate there.
  prefs: []
  type: TYPE_NORMAL
- en: Industrial companies could also use stlite to create commercial-level products
    that run the Streamlit applications on the client side, to reduce their server
    cost, or if a major part of their customers consider data privacy strongly, as
    you said.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Switching to another subject, you clearly have spent an insane amount
    of time contributing to the Streamlit component ecosystem and the forums; what
    is it about the library and community that keeps you around?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Yuichiro**: I would say I have three reasons.'
  prefs: []
  type: TYPE_NORMAL
- en: First, the technical design of Streamlit. The library is designed so it hits
    that critical point between simplicity and extensibility. It is an extremely great
    API design. Streamlit also helps me a lot with realizing my technical interests
    and technical ideas as a real-world application and hosting and sharing that application
    with users or colleagues.
  prefs: []
  type: TYPE_NORMAL
- en: Second is the community and company. The company itself loves the community
    too, and I think they pay a lot of money and put in a lot of effort to manage
    and keep the community itself. And there are many dedicated community organizers
    who pay so much attention to maintaining the health of the community, including
    me. It makes me feel comfortable working with Streamlit.
  prefs: []
  type: TYPE_NORMAL
- en: And the third reason is Streamlit’s extensibility. This is the reason why I
    selected it in the first place. There was no other choice for me to create a real-time
    video streaming component on top of!
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Those are some great reasons. I just wanted to give you a chance
    at the end of the interview to pitch anything else that you’re working on or talk
    about anything that you’re thinking about.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Yuichiro**: I don’t have much else to talk about, but I’d like to say that
    I love open-source software. At a high level, whenever you use open-source software,
    there are developers all around the world who have created it for free, and you
    can use it to express your intention, your dedication, and your interest to the
    world with very interesting original stuff. So, this is my self-promotion for
    developers all over the world, I’d say. With that, you should express your interest
    to the world whenever you can, and then you should also do your best to contribute
    and support the OSS ecosystem. Sponsor some of these projects so developers can
    keep making products that you use!'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tyler**: Thanks again Yuichiro! Yuichiro can be found on GitHub at [https://github.com/whitphx](https://github.com/whitphx)
    and on Twitter at [https://twitter.com/whitphx](https://twitter.com/whitphx).'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This concludes *Chapter 12*, *Streamlit Power Users*, and also the book! We
    covered so much deep content in this chapter, from talking about the importance
    of community development with Fanilo to some practical examples of popular Components
    with Arnaud and Zachary, and even discussing the toy-like features of Streamlit
    and where Streamlit is heading next with Adrien. We learned about serverless Streamlit
    with Yuichiro and learned about fun new applications of Streamlit with Gerard.
  prefs: []
  type: TYPE_NORMAL
- en: I just want to say thank you for reading this book; it has been a labor of love
    for me and I would like nothing better than for you to reach out to me and let
    me know how it has affected your Streamlit developer experience. You can find
    me on Twitter at [https://twitter.com/tylerjrichards](https://twitter.com/tylerjrichards),
    and I hope you have had as good of a time reading this book as I had writing it.
    Thank you and go make some awesome Streamlit apps!
  prefs: []
  type: TYPE_NORMAL
- en: Learn more on Discord
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To join the Discord community for this book – where you can share feedback,
    ask questions to the author, and learn about new releases – follow the QR code
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://packt.link/sl](https://packt.link/sl)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/QR_Code13440134443835796.png)'
  prefs: []
  type: TYPE_IMG
