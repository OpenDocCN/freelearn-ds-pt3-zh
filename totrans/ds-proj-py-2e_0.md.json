["```py\n    conda create -n dspwp2 python=3.8.2 jupyter=1.0.0 pandas=1.2.1 scikit-learn=0.23.2 numpy=1.19.2 matplotlib=3.3.2 seaborn=0.11.1 python-graphviz=0.15 xlrd=2.0.1\n    ```", "```py\n    conda activate dspwp2\n    ```", "```py\n    conda install -c conda-forge xgboost=1.3.0 shap=0.37.0\n    ```", "```py\n    conda deactivate\n    ```", "```py\nimport numpy as np #numerical computation\nimport pandas as pd #data wrangling\nimport matplotlib.pyplot as plt #plotting package\n#Next line helps with rendering plots\n%matplotlib inline\nimport matplotlib as mpl #add'l plotting functionality\nmpl.rcParams['figure.dpi'] = 400 #high res figures\nimport graphviz #to visualize decision trees\n```", "```py\nmy_new_lr = LogisticRegression(penalty='l2', dual=False,\\ \n                               tol=0.0001, C=1.0,\\ \n                               fit_intercept=True,\\ \n                               intercept_scaling=1,\\ \n                               class_weight=None,\\ \n                               random_state=None,\\ \n                               solver='lbfgs',\\ \n                               max_iter=100,\\ \n                               multi_class='auto',\\ \n                               verbose=0, warm_start=False,\\ \n                               n_jobs=None, l1_ratio=None)\n```", "```py\nimport pandas as pd\nimport matplotlib.pyplot as plt #import plotting package\n#render plotting automatically\n%matplotlib inline\n```"]