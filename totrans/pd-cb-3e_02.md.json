["```py\n`ser = pd.Series(list(\"abc\") * 3) ser` \n```", "```py\n`0    a 1    b 2    c 3    a 4    b 5    c 6    a 7    b 8    c dtype: object` \n```", "```py\n`ser[3]` \n```", "```py\n`a` \n```", "```py\n`ser[[3]]` \n```", "```py\n`3    a dtype: object` \n```", "```py\n`ser[[0, 2]]` \n```", "```py\n`0    a 2    c dtype: object` \n```", "```py\n`ser[:3]` \n```", "```py\n`0    a 1    b 2    c dtype: object` \n```", "```py\n`ser[-4:]` \n```", "```py\n`5    c 6    a 7    b 8    c dtype: object` \n```", "```py\n`ser[2:6]` \n```", "```py\n`2    c 3    a 4    b 5    c dtype: object` \n```", "```py\n`ser[1:8:3]` \n```", "```py\n`1    b 4    b 7    b dtype: object` \n```", "```py\n`ser = pd.Series(range(3), index=[\"Jack\", \"Jill\", \"Jayne\"]) ser` \n```", "```py\n`Jack     0 Jill     1 Jayne    2 dtype: int64` \n```", "```py\n`ser[\"Jill\"]` \n```", "```py\n`1` \n```", "```py\n`ser[[\"Jill\"]]` \n```", "```py\n`Jill    1 dtype: int64` \n```", "```py\n`ser = pd.Series(list(\"abc\"), index=[2, 42, 21]) ser` \n```", "```py\n`2     a 42    b 21    c dtype: object` \n```", "```py\n`ser[2]` \n```", "```py\n`a` \n```", "```py\n`ser[:2]` \n```", "```py\n`2     a 42    b dtype: object` \n```", "```py\n`ser = pd.Series([\"apple\", \"banana\", \"orange\"], index=[0, 1, 1]) ser` \n```", "```py\n`0     apple 1    banana 1    orange dtype: object` \n```", "```py\n`ser[1]` \n```", "```py\n`1    banana 1    orange dtype: object` \n```", "```py\n`df = pd.DataFrame(np.arange(9).reshape(3, -1), columns=[\"a\", \"b\", \"c\"]) df` \n```", "```py\n `a     b     c 0    0     1     2 1    3     4     5 2    6     7     8` \n```", "```py\n`df[\"a\"]` \n```", "```py\n`0    0 1    3 2    6 Name: a, dtype: int64` \n```", "```py\n`df[[\"a\"]]` \n```", "```py\n `a 0    0 1    3 2    6` \n```", "```py\n`df[[\"a\", \"b\"]]` \n```", "```py\n `a     b 0    0     1 1    3     4 2    6     7` \n```", "```py\n`df[:2]` \n```", "```py\n `a     b     c 0    0     1     2 1    3     4     5` \n```", "```py\n`df[[\"a\", \"b\"]]` \n```", "```py\n `a     b 0    0     1 1    3     4 2    6     7` \n```", "```py\n`df[[\"b\", \"a\"]]` \n```", "```py\n `b     a 0    1     0 1    4     3 2    7     6` \n```", "```py\n`ser = pd.Series([\"apple\", \"banana\", \"orange\"], index=[0, 1, 1]) ser` \n```", "```py\n`0     apple 1    banana 1    orange dtype: object` \n```", "```py\n`ser.iloc[1]` \n```", "```py\n`banana` \n```", "```py\n`ser.iloc[[1]]` \n```", "```py\n`1    banana dtype: object` \n```", "```py\n`ser.iloc[[0, 2]]` \n```", "```py\n`0     apple 1    orange dtype: object` \n```", "```py\n`ser.iloc[:2]` \n```", "```py\n`0     apple 1    banana dtype: object` \n```", "```py\n`df = pd.DataFrame(np.arange(20).reshape(5, -1), columns=list(\"abcd\")) df` \n```", "```py\n `a     b     c     d 0    0     1     2     3 1    4     5     6     7 2    8     9     10    11 3    12    13    14    15 4    16    17    18    19` \n```", "```py\n`df.iloc[2, 2]` \n```", "```py\n`10` \n```", "```py\n`df.iloc[:, 0]` \n```", "```py\n`0     0 1     4 2     8 3    12 4    16 Name: a, dtype: int64` \n```", "```py\n`df.iloc[0, :]` \n```", "```py\n`a    0 b    1 c    2 d    3 Name: 0, dtype: int64` \n```", "```py\n`df.iloc[:, [0]]` \n```", "```py\n `a 0    0 1    4 2    8 3    12 4    16` \n```", "```py\n`df.iloc[[0], :]` \n```", "```py\n `a    b    c    d 0    0    1    2    3` \n```", "```py\n`df.iloc[[0, 1], [-1, -2]]` \n```", "```py\n `d    c 0    3    2 1    7    6` \n```", "```py\n`ser = pd.Series([\"apple\", \"banana\", \"orange\"], index=[0, 1, 1]) ser` \n```", "```py\n`0     apple 1    banana 1    orange dtype: object` \n```", "```py\n`ser.loc[1]` \n```", "```py\n`1    banana 1    orange dtype: object` \n```", "```py\n`ser = pd.Series([2, 2, 4], index=[\"dog\", \"cat\", \"human\"], name=\"num_legs\") ser` \n```", "```py\n`dog      2 cat      2 human    4 Name: num_legs, dtype: int64` \n```", "```py\n`ser.loc[\"dog\"]` \n```", "```py\n`2` \n```", "```py\n`ser.loc[[\"dog\", \"cat\"]]` \n```", "```py\n`dog    2 cat    2 Name: num_legs, dtype: int64` \n```", "```py\n`ser.loc[:\"cat\"]` \n```", "```py\n`dog    2 cat    2 Name: num_legs, dtype: int64` \n```", "```py\n`values = [\"Jack\", \"Jill\", \"Jayne\"] ser = pd.Series(values) ser` \n```", "```py\n`0     Jack 1     Jill 2    Jayne dtype: object` \n```", "```py\n`values[:2]` \n```", "```py\n`Jack    Jill` \n```", "```py\n`ser.iloc[:2]` \n```", "```py\n`0    Jack 1    Jill dtype: object` \n```", "```py\n`ser.loc[:2]` \n```", "```py\n`0     Jack 1     Jill 2    Jayne dtype: object` \n```", "```py\n`repeats_2 = pd.Series(range(5), index=[0, 1, 2, 2, 0]) repeats_2.loc[:2]` \n```", "```py\n`0    0 1    1 2    2 2    3 dtype: int64` \n```", "```py\n`ser = pd.Series(range(4), index=[\"zzz\", \"xxx\", \"xxx\", \"yyy\"]) ser.loc[:\"xxx\"]` \n```", "```py\n`zzz    0 xxx    1 xxx    2 dtype: int64` \n```", "```py\n`ser = pd.Series(range(4), index=[\"zzz\", \"xxx\", \"yyy\", \"xxx\"]) ser.loc[:\"xxx\"]` \n```", "```py\n`KeyError: \"Cannot get right slice bound for non-unique label: 'xxx'\"` \n```", "```py\n`df = pd.DataFrame([     [24, 180, \"blue\"],     [42, 166, \"brown\"],     [22, 160, \"green\"], ], columns=[\"age\", \"height_cm\", \"eye_color\"], index=[\"Jack\", \"Jill\", \"Jayne\"]) df` \n```", "```py\n `age    height_cm    eye_color Jack    24     180          blue Jill    42     166          brown Jayne   22     160          green` \n```", "```py\n`df.loc[\"Jayne\", \"eye_color\"]` \n```", "```py\n`green` \n```", "```py\n`df.loc[:, \"age\"]` \n```", "```py\n`Jack     24 Jill     42 Jayne    22 Name: age, dtype: int64` \n```", "```py\n`df.loc[\"Jack\", :]` \n```", "```py\n`age            24 height_cm     180 eye_color    blue Name: Jack, dtype: object` \n```", "```py\n`df.loc[:, [\"age\"]]` \n```", "```py\n `age Jack     24 Jill     42 Jayne    22` \n```", "```py\n`df.loc[[\"Jack\"], :]` \n```", "```py\n `age   height_cm    eye_color Jack    24    180          blue` \n```", "```py\n`df.loc[[\"Jack\", \"Jill\"], [\"age\", \"eye_color\"]]` \n```", "```py\n `age   eye_color Jack    24    blue Jill    42    brown` \n```", "```py\n`df = pd.DataFrame([     [24, 180, \"blue\"],     [42, 166, \"brown\"],     [22, 160, \"green\"], ], columns=[\"age\", \"height_cm\", \"eye_color\"]) df` \n```", "```py\n `age   height_cm    eye_color 0    24    180          blue 1    42    166          brown 2    22    160          green` \n```", "```py\n`col_idxer = df.columns.get_indexer([\"age\", \"eye_color\"]) col_idxer` \n```", "```py\n`array([0, 2])` \n```", "```py\n`df.iloc[[0, 1], col_idxer]` \n```", "```py\n `age    eye_color 0    24     blue 1    42     brown` \n```", "```py\n`df[[\"age\", \"eye_color\"]].iloc[[0, 1]]` \n```", "```py\n `age    eye_color 0    24     blue 1    42     brown` \n```", "```py\n`import timeit def get_indexer_approach():   col_idxer = df.columns.get_indexer([\"age\", \"eye_color\"])   df.iloc[[0, 1], col_idxer] timeit.timeit(get_indexer_approach, number=10_000)` \n```", "```py\n`1.8184850879988517` \n```", "```py\n`two_step_approach = lambda: df[[\"age\", \"eye_color\"]].iloc[[0, 1]] timeit.timeit(two_step_approach, number=10_000` \n```", "```py\n`2.027099569000711` \n```", "```py\n`df = pd.DataFrame([     [24, 180, \"blue\"],     [42, 166, \"brown\"],     [22, 160, \"green\"], ], columns=[     \"age\",     \"height_cm\",     \"eye_color\" ], index=[\"Jack\", \"Jill\", \"Jayne\"]) df` \n```", "```py\n `age   height_cm   eye_color Jack    24    180         blue Jill    42    166         brown Jayne   22    160         green` \n```", "```py\n`df.filter([\"age\", \"eye_color\"])` \n```", "```py\n `age   eye_color Jack   24    blue Jill   42    brown Jayne  22    green` \n```", "```py\n`df.filter([\"Jack\", \"Jill\"], axis=0)` \n```", "```py\n `age   height_cm   eye_color Jack   24    180         blue Jill   42    166         brown` \n```", "```py\n`df.filter(like=\"_\")` \n```", "```py\n `height_cm   eye_color Jack   180         blue Jill   166         brown Jayne  160         green` \n```", "```py\n`df.filter(regex=r\"^Ja.*(?<!e)$\", axis=0)` \n```", "```py\n `age   height_cm   eye_color Jack   24    180         blue` \n```", "```py\n`df = pd.DataFrame([     [0, 1.0, \"2\"],     [4, 8.0, \"16\"], ], columns=[\"int_col\", \"float_col\", \"string_col\"]) df` \n```", "```py\n `int_col   float_col   string_col 0   0         1.0         2 1   4         8.0         16` \n```", "```py\n`df.select_dtypes(\"int\")` \n```", "```py\n `int_col 0   0 1   4` \n```", "```py\n`df.select_dtypes(include=[\"int\", \"float\"])` \n```", "```py\n `int_col   float_col 0   0         1.0 1   4         8.0` \n```", "```py\n`df.select_dtypes(exclude=[\"int\", \"float\"])` \n```", "```py\n `string_col 0   2 1   16` \n```", "```py\n`mask = [True, False, True] ser = pd.Series(range(3)) ser` \n```", "```py\n`0    0 1    1 2    2 dtype: int64` \n```", "```py\n`ser[mask]` \n```", "```py\n`0    0 2    2 dtype: int64` \n```", "```py\n`ser.loc[mask]` \n```", "```py\n`0    0 2    2 dtype: int64` \n```", "```py\n`df = pd.DataFrame(np.arange(6).reshape(3, -1)) df[mask]` \n```", "```py\n `0   1 0   0   1 2   4   5` \n```", "```py\n`col_mask = [True, False] df.loc[mask, col_mask]` \n```", "```py\n `0 0   0 2   4` \n```", "```py\n`df = pd.DataFrame([     [24, 180, \"blue\"],     [42, 166, \"brown\"],     [22, 160, \"green\"], ], columns=[\"age\", \"height_cm\", \"eye_color\"], index=[\"Jack\", \"Jill\", \"Jayne\"]) df` \n```", "```py\n `age   height_cm   eye_color Jack   24    180         blue Jill   42    166         brown Jayne  22    160         green` \n```", "```py\n`blue_eyes = df[\"eye_color\"] == \"blue\" blue_eyes` \n```", "```py\n`Jack      True Jill     False Jayne    False Name: eye_color, dtype: bool` \n```", "```py\n`green_eyes = df[\"eye_color\"] == \"green\" green_eyes` \n```", "```py\n`Jack     False Jill     False Jayne     True Name: eye_color, dtype: bool` \n```", "```py\n`mask = blue_eyes | green_eyes mask` \n```", "```py\n`Jack      True Jill     False Jayne     True Name: eye_color, dtype: bool` \n```", "```py\n`df[mask]` \n```", "```py\n `age   height_cm   eye_color Jack   24    180         blue Jayne  22    160         green` \n```", "```py\n`age_lt_40 = df[\"age\"] < 40 age_lt_40` \n```", "```py\n`Jack      True Jill     False Jayne     True Name: age, dtype: bool` \n```", "```py\n`height_gt_170 = df[\"height_cm\"] > 170 height_gt_170` \n```", "```py\n`Jack      True Jill     False Jayne    False Name: height_cm, dtype: bool` \n```", "```py\n`df[age_lt_40 & height_gt_170]` \n```", "```py\n `age   height_cm   eye_color Jack   24    180         blue` \n```", "```py\n`df[~(age_lt_40 & height_gt_170)]` \n```", "```py\n `age   height_cm   eye_color Jill   42    166         brown Jayne  22    160         green` \n```", "```py\n`index = pd.MultiIndex.from_tuples([     (\"John\", \"Smith\"),     (\"John\", \"Doe\"),     (\"Jane\", \"Doe\"),     (\"Stephen\", \"Smith\"), ], names=[\"first_name\", \"last_name\"]) ser = pd.Series(range(4), index=index) ser` \n```", "```py\n`first_name  last_name John        Smith        0             Doe          1 Jane        Doe          2 Stephen     Smith        3 dtype: int64` \n```", "```py\n`ser.loc[\"John\"]` \n```", "```py\n`last_name Smith    0 Doe      1 dtype: int64` \n```", "```py\n`ser.loc[[\"John\"]]` \n```", "```py\n`first_name  last_name John        Smith        0             Doe          1 dtype: int64` \n```", "```py\n`index = pd.MultiIndex.from_tuples([     (\"John\", \"Smith\"),     (\"John\", \"Doe\"),     (\"Jane\", \"Doe\"),     (\"Stephen\", \"Smith\"), ], names=[\"first_name\", \"last_name\"]) ser = pd.Series(range(4), index=index) ser` \n```", "```py\n`first_name  last_name John        Smith        0             Doe          1 Jane        Doe          2 Stephen     Smith        3 dtype: int64` \n```", "```py\n`ser.loc[(\"Jane\", \"Doe\")]` \n```", "```py\n`2` \n```", "```py\n`ser.loc[([\"Jane\"], \"Doe\")]` \n```", "```py\n`first_name  last_name Jane        Doe          2 dtype: int64` \n```", "```py\n`ser.loc[[(\"John\", \"Smith\"), (\"Jane\", \"Doe\")]]` \n```", "```py\n`first_name  last_name John        Smith        0 Jane        Doe          2 dtype: int64` \n```", "```py\n`ser.loc[(slice(None), \"Doe\")]` \n```", "```py\n`first_name John    1 Jane    2 dtype: int64` \n```", "```py\n`ser.loc[(slice(None), [\"Doe\"])]` \n```", "```py\n`first_name  last_name John        Doe          1 Jane        Doe          2 dtype: int64` \n```", "```py\n`alist = list(\"abc\") alist[:]` \n```", "```py\n`['a', 'b', 'c']` \n```", "```py\n`alist[slice(None)]` \n```", "```py\n`['a', 'b', 'c']` \n```", "```py\n`ser.loc[(slice(None), [\"Doe\"])]` \n```", "```py\n`first_name  last_name John        Doe          1 Jane        Doe          2 dtype: int64` \n```", "```py\n`ixsl = pd.IndexSlice ser.loc[ixsl[:, [\"Doe\"]]]` \n```", "```py\n`first_name  last_name John        Doe          1 Jane        Doe          2 dtype: int64` \n```", "```py\n`row_index = pd.MultiIndex.from_tuples([     (\"John\", \"Smith\"),     (\"John\", \"Doe\"),     (\"Jane\", \"Doe\"),     (\"Stephen\", \"Smith\"), ], names=[\"first_name\", \"last_name\"]) col_index = pd.MultiIndex.from_tuples([     (\"music\", \"favorite\"),     (\"music\", \"last_seen_live\"),     (\"art\", \"favorite\"), ], names=[\"art_type\", \"category\"]) df = pd.DataFrame([    [\"Swift\", \"Swift\", \"Matisse\"],    [\"Mozart\", \"T. Swift\", \"Van Gogh\"],    [\"Beatles\", \"Wonder\", \"Warhol\"],    [\"Jackson\", \"Dylan\", \"Picasso\"], ], index=row_index, columns=col_index) df` \n```", "```py\n `art_type              music           art              category   favorite   last_seen_live  favorite first_name   last_name John         Smith      Swift      Swift           Matisse              Doe        Mozart     T. Swift        Van Gogh Jane         Doe        Beatles    Wonder          Warhol Stephen      Smith      Jackson    Dylan           Picasso` \n```", "```py\n`row_idxer = (slice(None), \"Smith\") col_idxer = (slice(None), \"favorite\") df.loc[row_idxer, col_idxer]` \n```", "```py\n `art_type   music      art              category   favorite   favorite first_name   last_name John         Smith      Swift      Matisse Stephen      Smith      Jackson    Picasso` \n```", "```py\n`df.loc[(slice(None), \"Smith\"), (slice(None), \"favorite\")]` \n```", "```py\n `art_type   music      art              category   favorite   favorite first_name   last_name John         Smith      Swift      Matisse Stephen      Smith      Jackson    Picasso` \n```", "```py\n`ser = pd.Series(range(3), index=list(\"abc\"))` \n```", "```py\n`ser.loc[\"b\"] = 42 ser` \n```", "```py\n`a     0 b    42 c     2 dtype: int64` \n```", "```py\n`ser.iloc[2] = -42 ser` \n```", "```py\n`a     0 b    42 c   -42 dtype: int64` \n```", "```py\n`df = pd.DataFrame({\"col1\": [1, 2, 3]}) df` \n```", "```py\n `col1 0   1 1   2 2   3` \n```", "```py\n`df[\"new_column1\"] = 42 df` \n```", "```py\n `col1   new_column1 0   1      42 1   2      42 2   3      42` \n```", "```py\n`df[\"new_column2\"] = list(\"abc\") df` \n```", "```py\n `col1   new_column1   new_column2 0   1      42            a 1   2      42            b 2   3      42            c` \n```", "```py\n`df[\"new_column3\"] = pd.Series([\"dog\", \"cat\", \"human\"]) df` \n```", "```py\n `col1   new_column1   new_column2   new_column3 0   1      42            a             dog 1   2      42            b             cat 2   3      42            c             human` \n```", "```py\n`df[\"should_fail\"] = [\"too few\", \"rows\"]` \n```", "```py\n`ValueError: Length of values (2) does not match length of index (3)` \n```", "```py\n`row_index = pd.MultiIndex.from_tuples([     (\"John\", \"Smith\"),     (\"John\", \"Doe\"),     (\"Jane\", \"Doe\"),     (\"Stephen\", \"Smith\"), ], names=[\"first_name\", \"last_name\"]) col_index = pd.MultiIndex.from_tuples([     (\"music\", \"favorite\"),     (\"music\", \"last_seen_live\"),     (\"art\", \"favorite\"), ], names=[\"art_type\", \"category\"]) df = pd.DataFrame([    [\"Swift\", \"Swift\", \"Matisse\"],    [\"Mozart\", \"T. Swift\", \"Van Gogh\"],    [\"Beatles\", \"Wonder\", \"Warhol\"],    [\"Jackson\", \"Dylan\", \"Picasso\"], ], index=row_index, columns=col_index) df` \n```", "```py\n `art_type   music            art              category   favorite   last_seen_live   favorite first_name   last_name John         Smith      Swift      Swift            Matisse              Doe        Mozart     T. Swift         Van Gogh Jane         Doe        Beatles    Wonder           Warhol Stephen      Smith      Jackson    Dylan            Picasso` \n```", "```py\n`df.loc[:, (\"art\", \"museuems_seen\")] = [1, 2, 4, 8] df` \n```", "```py\n `art_type    music            art              category    favorite   last_seen_live   favorite   museuems_seen first_name   last_name John         Smith       Swift       Swift           Matisse    1              Doe         Mozart      T. Swift        Van Gogh   2 Jane         Doe         Beatles     Wonder          Warhol     4 Stephen      Smith       Jackson     Dylan           Picasso    8` \n```", "```py\n`df = pd.DataFrame([[0, 1], [2, 4]], columns=list(\"ab\")) df` \n```", "```py\n `a   b 0   0   1 1   2   4` \n```", "```py\n`(     df     .mul(2)     .add(42) )` \n```", "```py\n `a    b 0   42   44 1   46   50` \n```", "```py\n`df2 = (     df     .mul(2)     .add(42) ) df2[\"assigned_c\"] = df2[\"b\"] - 3 df2` \n```", "```py\n `a   b   assigned_c 0   42  44  41 1   46  50  47` \n```", "```py\n`(     df     .mul(2)     .add(42)     .assign(chained_c=lambda df: df[\"b\"] - 3) )` \n```", "```py\n `a    b    chained_c 0   42   44   41 1   46   50   47` \n```"]