["```py\nIn [1]: import matplotlib.units as munits\nIn [2]: munits.registry\nOut[2]: {}\nIn [3]: import pandas\nIn [4]: munits.registry\nOut[4]:\n{pandas.tslib.Timestamp: <pandas.tseries.converter.DatetimeConverter instance at 0x7fbbc4db17e8>,\npandas.tseries.period.Period: <pandas.tseries.converter.PeriodConverter instance at 0x7fbbc4dc25f0>,\ndatetime.date: <pandas.tseries.converter.DatetimeConverter instance at 0x7fbbc4dc2fc8>,\ndatetime.datetime: <pandas.tseries.converter.DatetimeConverter instance at 0x7fbbc4dc2a70>,\ndatetime.time: <pandas.tseries.converter.TimeConverter instance at 0x7fbbc4d61e18>}\n```", "```py\n    In [3]: import pandas\n                    pandas.__file__\n    Out[3]: '/usr/lib/python2.7/site-packages/pandas/__init__.pyc'\n```", "```py\n    In [4]: import math\n              math.__file__\n    Out[4]: '/usr/lib/python2.7/lib-dynload/math.so'\n```", "```py\n    In [17]: def fibonacci(n):\n             a,b=1,1\n             for i in range(n):\n                 a,b=a+b,a\n             return a\n    In [18]: fibonacci(100)\n    Out[18]: 927372692193078999176L\n    In [19]: %timeit fibonacci(100)\n             100000 loops, best of 3: 18.2 Âµs per loop  \n```", "```py\n    In [22]: %load_ext cythonmagic\n```", "```py\n    In [24]: %%cython\n             def cfibonacci(int n):\n                 cdef int i, a,b\n                 for i in range(n):\n                     a,b=a+b,a\n                 return a \n```", "```py\n    In [25]: %timeit cfibonacci(100)\n             1000000 loops, best of 3: 321 ns per loop\n\n    In [26]: 18.2/0.321\n    Out[26]: 56.69781931464174  \n```"]