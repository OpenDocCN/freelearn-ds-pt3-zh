- en: '16'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Takeaways and Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Together, we’ve traveled quite a long road. Starting from learning how to create
    a working environment, we went through the basics of Streamlit usage. After that,
    we became more advanced users, and we learned a very professional way of creating
    web applications.
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, we saw how to deploy and publish our creations on the cloud. From
    a wide perspective, we also acquired some very useful skills related to automatic
    file detection and upload, database connection, login and sign-up page creation
    and account management, theming, Session State, forms, and subdomains—a very long
    journey!
  prefs: []
  type: TYPE_NORMAL
- en: 'There are also a lot of takeaways, and these can make web application creation
    easier in the future:'
  prefs: []
  type: TYPE_NORMAL
- en: Skills for creating a very cheap (free) and effective development environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A web app skeleton working template with menus and decorations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Skills for deploying and uploading web apps on the cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A useful know-how (with working skeleton template) about web apps with images
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A very powerful technique for creating, populating, and using databases in our
    web application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A very important skill for implementing session states and multi-page applications
    (with a working code example)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deep knowledge of the main and advanced Streamlit widgets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The capacity to easily understand future versions and improvements of the framework
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In this chapter, we’re going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: How and when to use our web app working template
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How and when to use databases and advanced skills
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to deploy web applications on the cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How and when to use our web app working template
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are some operations that we must always do, such as preparing the virtual
    environment and installing all the proper libraries. These operations are the
    real foundation of our activity of web application creation.
  prefs: []
  type: TYPE_NORMAL
- en: Once our environment is ready, we can start writing our code. This activity
    requires a deep comprehension of the problems we are asked to solve and a clear
    implementation strategy. At this point, the template or skeleton that we developed
    together and used to build up the NLP application and the Covid-19 detection tool
    becomes our strongest friend. It is perfect for breaking down the problem into
    several sub-problems and assigning each one of these sub-problems to a specific
    function. The list of all the required functions will be displayed in the menu
    in the sidebar, letting the user select a specific function and proceed with the
    execution. We also saw that, in the template, there are already some nice decorators
    included, such as titles, icons and images.
  prefs: []
  type: TYPE_NORMAL
- en: If we want to be more specific, we can say that knowing how and when to use
    a web application template, such as the one we made together, is crucial for efficient
    and effective web application development.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a breakdown of how to use such a template:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Installation and setup**: After opening the template, you’ll find installation
    and setup instructions for the libraries. Follow these steps to create a project
    directory, install dependencies, and configure your development environment if
    needed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customize content**: Modify the template to fit your specific requirements.
    This may involve changing the user interface, adding or removing features, or
    altering the default content. Templates are typically designed to be customizable,
    so you can adapt them to your project’s needs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Add application logic**: Implement the application’s business logic, which
    is the core functionality that differentiates your project from others. This may
    include data processing, calculations, data visualization, or any other tasks
    relevant to your application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Styling and theming**: Customize the visual aspects of your application,
    such as colors, fonts, and layouts, to match your brand or design preferences.
    Many templates provide options for styling and theming.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Testing**: Thoroughly test your application to ensure that it works as intended
    and is free of bugs or issues. This includes testing user interactions, data handling,
    and responsiveness.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Continuous improvement**: As your application evolves, you can revisit the
    template to make updates or improvements. Templates are designed to be flexible
    and adaptable to accommodate changes in your project.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After knowing how to use a web application template, let’s see when to use
    one:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Prototyping**: Templates are excellent for quickly prototyping ideas. You
    can use a template as a starting point to visualize your concept and gather feedback.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Learning and education**: If you’re new to web development or a particular
    framework, such as Streamlit, templates can be educational. You can dissect a
    template’s code to learn how different components and features work.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Rapid development**: When time is limited, using the template can help you
    accelerate development. You can leverage pre-built components and functionalities
    to get your application off the ground faster.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Consistency across projects**: If you work on multiple projects or within
    a team, using templates can ensure consistency in design and structure. This is
    particularly valuable when maintaining a portfolio of applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Focus on unique features**: Templates handle common tasks and functionalities,
    allowing you to focus on implementing unique features or solving specific problems
    relevant to your project.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To summarize, the web application template/skeleton is a valuable tool for development,
    offering a structured and efficient approach to building web applications. Use
    it when you want to save time, ensure consistency, prototype ideas, or accelerate
    development. Also, customize it to meet your specific project requirements. The
    template is particularly beneficial when it aligns with your project goals and
    reduces the need to reinvent common components and functionalities.
  prefs: []
  type: TYPE_NORMAL
- en: The template is a fundamental way of staying organized and speeding up our work.
    Another extremely important feature is saving information in a database.
  prefs: []
  type: TYPE_NORMAL
- en: How and when to use databases and advanced skills
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [*Chapter 13*](B21147_13.xhtml#_idTextAnchor138), when we talked about login
    and signup, we explained how to deal with databases in Streamlit, while in *Chapters
    14* and *15*, we covered topics such as customized pages, multi-pages, themes,
    forms, subdomains, and Session State.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, it may sound trivial, but you should consider using databases in Streamlit
    when you need to store and manage data for your web application. Databases are
    useful when you want to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Persist data**: Save information (such as user profiles, user-generated content,
    or application settings) so that it’s available even after closing the web app.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Access large amounts of data**: Handle and retrieve a lot of data efficiently,
    such as records in a sales database or user comments on a website.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Collaborate**: Share and update data across multiple users or devices. Databases
    help you keep information consistent and up to date.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When working with databases in Streamlit, or any web application, it’s important
    to follow the best security practices, which include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`sqlite3` that allows you to work with databases.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Secure database credentials**: Store your database credentials (such as usernames
    and passwords) in a secure environment, such as environment variables or a configuration
    file. Never hardcode them in your code.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Implement authentication**: If your application allows users to access or
    modify data, implement user authentication and authorization to control who can
    do what in your app.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Regularly update and patch**: Keep your database software and libraries up
    to date to fix security vulnerabilities. This is important for both your application
    and the database system itself.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data encryption**: If sensitive data is stored in the database, ensure it’s
    encrypted both at rest (when stored on the server) and in transit (when data is
    transmitted between your app and the database).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In simple terms, databases are like organized storage spaces for your app’s
    data. They’re useful for saving, accessing, and managing information securely.
    To use them safely in Streamlit, follow the best practices to protect your data
    and ensure your app runs smoothly. Avoid common mistakes such as not handling
    errors, exposing sensitive data, or overloading the database.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a brief recap of some advanced Streamlit features:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Customized pages**: Streamlit allows you to create customized pages within
    your web application. Each page can have unique content, layout, and functionality.
    This feature is beneficial when you want to organize your application into different
    sections, such as a homepage, a dashboard, and a settings page. You can use Streamlit’s
    layout components to design and structure each page as you like.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multiple pages**: Streamlit offers the ability to create web applications
    with multiple interconnected pages. This allows you to build complex applications
    with different views, navigation, and interactions. You can use Streamlit’s built-in
    navigation elements, such as buttons or links, to move between pages within your
    app. Multi-page applications are useful for creating applications with a hierarchical
    structure or when you need to guide users through different steps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Themes**: Streamlit provides the ability to customize the visual appearance
    of your application with themes. Themes are collections of predefined styles and
    colors that you can apply to your app. This feature lets you create a consistent
    and visually appealing design that matches your branding or personal preferences.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Forms**: Streamlit allows you to create interactive forms within your web
    application. Forms are a way to gather user input through widgets such as text
    inputs, sliders, and checkboxes. You can use forms to collect data, settings,
    or preferences from users and process that information in your application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Subdomains**: Subdomains in Streamlit enable you to serve different applications
    or sections of your app from distinct subdomains of your website. This is especially
    useful when you want to host multiple Streamlit apps under different URLs, each
    with its own functionality or content. Subdomains help in creating a modular and
    organized structure for your web application, allowing for efficient navigation
    and scalability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Session State**: Session State in Streamlit lets you store and manage data
    across different interactions and pages during a user’s session. It’s a way of
    maintaining variables or user-specific data that persists as the user interacts
    with your app. This feature is useful if you want the application to remember
    user settings, selections, or other information gained during users’ visits. This
    can provide a more personalized and dynamic user experience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To recap, Streamlit offers a variety of features to enhance the functionality
    and appearance of your web applications. You can create customized pages for different
    sections, design multi-page applications with navigation, style your app with
    themes, collect user input using forms, use subdomains for modularity, and maintain
    session-specific data with Session State. These features provide you with the
    flexibility and tools needed to build interactive and user-friendly web applications
    using Streamlit.
  prefs: []
  type: TYPE_NORMAL
- en: After developing our web application, which uses a database to save information,
    it’s time to deploy it.
  prefs: []
  type: TYPE_NORMAL
- en: How to deploy web applications on the cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A web application lives on the web, and after the implementation of both the
    NLP app and the COVID-19 detection tool, we completed the deployment of both web
    apps on Streamlit Cloud.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s recall why deploying web applications on the cloud is so important.
  prefs: []
  type: TYPE_NORMAL
- en: 'Deploying web applications on the cloud offers several significant advantages:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Global accessibility**: Cloud-hosted applications are accessible from anywhere
    with an internet connection, enabling a broad user reach. Users can access your
    app without needing to install it locally.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scalability**: Cloud platforms can easily scale your application to handle
    increased traffic or demand. This means your app remains responsive even during
    traffic spikes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reliability and redundancy**: Cloud providers offer high availability and
    redundancy, reducing the risk of downtime. Data is often backed up and replicated
    across multiple data centers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security**: Cloud providers invest heavily in security measures, including
    data encryption, firewalls, and identity management. Your application can benefit
    from these robust security features.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Simplified maintenance**: Cloud providers handle infrastructure management,
    such as server maintenance and updates. This allows developers to focus on app
    development rather than server administration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Streamlit Cloud is a cloud-based platform specifically designed for deploying
    and sharing Streamlit applications. Streamlit Cloud is tailored to streamline
    the deployment process for these applications.
  prefs: []
  type: TYPE_NORMAL
- en: 'Besides the common advantages of deploying on a generic cloud, Streamlit’s
    cloud service offers some more specific features:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Seamless deployment**: Streamlit Cloud simplifies the deployment process,
    removing the need for complex server configurations. Developers can deploy their
    Streamlit applications with minimal effort.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Real-time updates**: Streamlit Cloud automatically updates your app when
    you push changes to your code repository. Users always see the latest version
    without manual intervention.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Collaboration**: Developers can easily share their applications with specific
    collaborators or keep them private. This is valuable for both public-facing and
    internal projects.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Analytics and monitoring**: Streamlit Cloud provides tools to track usage,
    performance, and errors in your application. This data is valuable for optimizing
    and improving your app over time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In conclusion, deploying web applications on the cloud, particularly with Streamlit
    Cloud, offers a streamlined and user-friendly approach to sharing Streamlit applications
    with a global audience. The advantages of global accessibility, scalability, cost
    efficiency, and simplified maintenance make cloud hosting a popular choice for
    web app deployment. Streamlit Cloud, tailored to Streamlit applications, simplifies
    the deployment process and enhances the accessibility and usability of your data-driven
    web applications.
  prefs: []
  type: TYPE_NORMAL
- en: Farewell!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In closing, as we reach the end of the final chapter of this book, I want to
    express my sincere appreciation to you for embarking on this journey of exploring
    Streamlit. We’ve come a long way together, delving into the world of web application
    development with this incredible Python library. Your dedication to mastering
    Streamlit and its many functionalities is truly commendable.
  prefs: []
  type: TYPE_NORMAL
- en: Remember that technology is ever-evolving and new features and improvements
    are continually being introduced. To stay at the forefront of web application
    development, I encourage you to periodically visit Streamlit’s official website.
    There, you’ll find the latest updates and features and resources that will help
    you stay informed and empowered in your web application projects.
  prefs: []
  type: TYPE_NORMAL
- en: As we bid farewell, I want to extend my best wishes to you, dear readers. I
    thank you for your time, your passion for learning, and your determination to
    explore the world of Streamlit. May your future endeavors in web application development
    be filled with creativity and success. Good luck on your coding journey, and thank
    you for being a part of this exciting exploration of Streamlit. Farewell!
  prefs: []
  type: TYPE_NORMAL
