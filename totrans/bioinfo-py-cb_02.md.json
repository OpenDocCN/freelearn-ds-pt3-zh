["```py\n    conda create -n bioinformatics_base python=3.10\n    ```", "```py\n    conda activate bioinformatics_base\n    ```", "```py\n    conda config --add channels bioconda\n    conda config --add channels conda-forge\n    ```", "```py\n    conda install \\\n    biopython==1.79 \\\n    jupyterlab==3.2.1 \\\n    jupytext==1.13 \\\n    matplotlib==3.4.3 \\\n    numpy==1.21.3 \\\n    pandas==1.3.4 \\\n    scipy==1.7.1\n    ```", "```py\n    conda list –explicit > bioinformatics_base.txt\n    ```", "```py\n    conda install rpy2 r-essentials r-gridextra\n    ```", "```py\n    conda create -n scikit-learn --clone bioinformatics_base\n    ```", "```py\n    conda activate scikit-learn\n    conda install scikit-learn\n    ```", "```py\n    docker build -t bio https://raw.githubusercontent.com/PacktPublishing/Bioinformatics-with-Python-Cookbook-third-edition/main/docker/main/Dockerfile\n    ```", "```py\n    docker run -ti -p 9875:9875 -v YOUR_DIRECTORY:/data bio\n    ```", "```py\nconda create -n bioinformatics_r --clone bioinformatics_base\nconda activate bioinformatics_r\nconda install r-ggplot2=3.3.5 r-lazyeval r-gridextra rpy2\n```", "```py\ndocker run -ti -p 9875:9875 -v YOUR_DIRECTORY:/data tiagoantao/bioinformatics_r\n```", "```py\n    import os\n    from IPython.display import Image\n    import rpy2.robjects as robjects\n    import rpy2.robjects.lib.ggplot2 as ggplot2\n    from rpy2.robjects.functions import SignatureTranslatedFunction\n    import pandas as pd\n    import rpy2.robjects as ro\n    from rpy2.robjects import pandas2ri\n    from rpy2.robjects import local_converter\n    ```", "```py\n    read_delim = robjects.r('read.delim')\n    seq_data = read_delim('sequence.index', header=True, stringsAsFactors=False)\n    #In R:\n    # seq.data <- read.delim('sequence.index', header=TRUE, stringsAsFactors=FALSE)\n    ```", "```py\n    print('This dataframe has %d columns and %d rows' %\n    (seq_data.ncol, seq_data.nrow))\n    print(seq_data.colnames)\n    #In R:\n    # print(colnames(seq.data))\n    # print(nrow(seq.data))\n    # print(ncol(seq.data))\n    ```", "```py\n    my_cols = robjects.r.ncol(seq_data)\n    print(my_cols)\n    ```", "```py\n    as_integer = robjects.r('as.integer')\n    match = robjects.r.match\n    my_col = match('READ_COUNT', seq_data.colnames)[0] # vector returned\n    print('Type of read count before as.integer: %s' % seq_data[my_col - 1].rclass[0])\n    seq_data[my_col - 1] = as_integer(seq_data[my_col - 1])\n    print('Type of read count after as.integer: %s' % seq_data[my_col - 1].rclass[0])\n    ```", "```py\n    robjects.r.assign('seq.data', seq_data)\n    ```", "```py\n    from rpy2.robjects.functions import SignatureTranslatedFunction\n    ggplot2.theme = SignatureTranslatedFunction(ggplot2.theme, init_prm_translate = {'axis_text_x': 'axis.text.x'})\n    bar = ggplot2.ggplot(seq_data) + ggplot2.geom_bar() + ggplot2.aes_string(x='CENTER_NAME') + ggplot2.theme(axis_text_x=ggplot2.element_text(angle=90, hjust=1))\n    robjects.r.png('out.png', type='cairo-png')\n    bar.plot()\n    dev_off = robjects.r('dev.off')\n    dev_off()\n    ```", "```py\n    Image(filename='out.png')\n    ```", "```py\n    robjects.r('yri_ceu <- seq.data[seq.data$POPULATION %in% c(\"YRI\", \"CEU\") & seq.data$BASE_COUNT < 2E9 & seq.data$READ_COUNT < 3E7, ]')\n    yri_ceu = robjects.r('yri_ceu')\n    ```", "```py\n    scatter = ggplot2.ggplot(yri_ceu) + ggplot2.aes_string(x='BASE_COUNT', y='READ_COUNT', shape='factor(POPULATION)', col='factor(ANALYSIS_GROUP)') + ggplot2.geom_point()\n    robjects.r.png('out.png')\n    scatter.plot()\n    ```", "```py\n    import rpy2.robjects as ro\n    from rpy2.robjects import pandas2ri\n    from rpy2.robjects.conversion import localconverter \n    with localconverter(ro.default_converter + pandas2ri.converter):\n      pd_yri_ceu = ro.conversion.rpy2py(yri_ceu)\n    del pd_yri_ceu['PAIRED_FASTQ']\n    with localconverter(ro.default_converter + pandas2ri.converter):\n      no_paired = ro.conversion.py2rpy(pd_yri_ceu)\n    robjects.r.assign('no.paired', no_paired)\n    robjects.r(\"print(colnames(no.paired))\")\n    ```", "```py\ndocker run -ti -p 9875:9875 -v YOUR_DIRECTORY:/data tiagoantao/bioinformatics_r\n```", "```py\n    import rpy2.robjects as robjects\n    import rpy2.robjects.lib.ggplot2 as ggplot2\n    %load_ext rpy2.ipython\n    ```", "```py\n    %%R\n    seq.data <- read.delim('sequence.index', header=TRUE, stringsAsFactors=FALSE)\n    seq.data$READ_COUNT <- as.integer(seq.data$READ_COUNT)\n    seq.data$BASE_COUNT <- as.integer(seq.data$BASE_COUNT)\n    ```", "```py\n    seq_data = %R seq.data\n    print(type(seq_data))  # pandas dataframe!\n    ```", "```py\n    my_col = list(seq_data.columns).index(\"CENTER_NAME\")\n    seq_data['CENTER_NAME'] = seq_data['CENTER_NAME'].apply(lambda` x: x.upper())\n    ```", "```py\n    %R -i seq_data\n    %R print(colnames(seq_data))\n    ```", "```py\n    %%R\n    bar <- ggplot(seq_data) +  aes(factor(CENTER_NAME)) + geom_bar() + theme(axis.text.x = element_text(angle = 90, hjust = 1))\n    print(bar)\n    ```"]