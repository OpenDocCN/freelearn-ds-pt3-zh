["```py\n    import pandas as pd\n    coviddaily = pd.read_csv(\"data/coviddaily.csv\", parse_dates=[\"casedate\"])\n    ltbrazil = pd.read_csv(\"data/ltbrazil.csv\") \n    ```", "```py\n    coviddaily = coviddaily.sort_values(['location','casedate']) \n    ```", "```py\nprevloc = 'ZZZ'\nrowlist = []\ncasecnt = 0\nfor row in coviddaily.itertuples():\n...   if (prevloc!=row.location):\n...     if (prevloc!='ZZZ'):\n...       rowlist.append({'location':prevloc, 'casecnt':casecnt})\n...     casecnt = 0\n...     prevloc = row.location\n...   casecnt += row.new_cases\n...\nrowlist.append({'location':prevloc, 'casecnt':casecnt})\nlen(rowlist) \n```", "```py\n231 \n```", "```py\nrowlist[0:4] \n```", "```py\n[{'location': 'Afghanistan', 'casecnt': 231539.0},\n {'location': 'Albania', 'casecnt': 334863.0},\n {'location': 'Algeria', 'casecnt': 272010.0},\n {'location': 'American Samoa', 'casecnt': 8359.0}] \n```", "```py\ncovidtotals = pd.DataFrame(rowlist)\ncovidtotals.head() \n```", "```py\n location      casecnt\n0         Afghanistan      231,539\n1             Albania      334,863\n2             Algeria      272,010\n3      American Samoa        8,359\n4             Andorra       48,015 \n```", "```py\nltbrazil = ltbrazil.sort_values(['station','month'])\nltbrazil = ltbrazil.dropna(subset=['temperature']) \n```", "```py\nprevstation = 'ZZZ'\nprevtemp = 0\nrowlist = []\ntempcnt = 0\nstationcnt = 0\nfor row in ltbrazil.itertuples():\n...   if (prevstation!=row.station):\n...     if (prevstation!='ZZZ'):\n...       rowlist.append({'station':prevstation, 'avgtemp':tempcnt/stationcnt, 'stationcnt':stationcnt})\n...     tempcnt = 0\n...     stationcnt = 0\n...     prevstation = row.station\n...   # choose only rows that are within 3 degrees of the previous temperature \n...   if ((0 <= abs(row.temperature-prevtemp) <= 3) or (stationcnt==0)):\n...     tempcnt += row.temperature\n...     stationcnt += 1\n...   prevtemp = row.temperature\n...\nrowlist.append({'station':prevstation, 'avgtemp':tempcnt/stationcnt, 'stationcnt':stationcnt})\nrowlist[0:5] \n```", "```py\n[{'station': 'ALTAMIRA', 'avgtemp': 27.729166666666668, 'stationcnt': 12},\n {'station': 'ALTA_FLORESTA_AERO',\n  'avgtemp': 32.49333333333333,\n  'stationcnt': 9},\n {'station': 'ARAXA', 'avgtemp': 21.52142857142857, 'stationcnt': 7},\n {'station': 'BACABAL', 'avgtemp': 28.59166666666667, 'stationcnt': 6},\n {'station': 'BAGE', 'avgtemp': 19.615000000000002, 'stationcnt': 10}] \n```", "```py\nltbrazilavgs = pd.DataFrame(rowlist)\nltbrazilavgs.head() \n```", "```py\n station      avgtemp      stationcnt\n0                ALTAMIRA           28              12\n1      ALTA_FLORESTA_AERO           32               9\n2                   ARAXA           22               7\n3                 BACABAL           29               6\n4                    BAGE           20              10 \n```", "```py\n    import pandas as pd\n    coviddaily = pd.read_csv(\"data/coviddaily.csv\", parse_dates=[\"casedate\"])\n    ltbrazil = pd.read_csv(\"data/ltbrazil.csv\") \n    ```", "```py\n    loclist = coviddaily.location.unique().tolist() \n    ```", "```py\nrowlist = []\ncasevalues = coviddaily[['location','new_cases']].to_numpy()\nfor locitem in loclist:\n...   cases = [casevalues[j][1] for j in range(len(casevalues))\\\n...     if casevalues[j][0]==locitem]\n...   rowlist.append(sum(cases))\n...\nlen(rowlist) \n```", "```py\n231 \n```", "```py\nlen(loclist) \n```", "```py\n231 \n```", "```py\nrowlist[0:5] \n```", "```py\n[231539.0, 334863.0, 272010.0, 8359.0, 48015.0] \n```", "```py\ncasetotals = pd.DataFrame(zip(loclist,rowlist), columns=(['location','casetotals']))\ncasetotals.head() \n```", "```py\n location      casetotals\n0         Afghanistan         231,539\n1             Albania         334,863\n2             Algeria         272,010\n3      American Samoa           8,359\n4             Andorra          48,015 \n```", "```py\n    ltbrazil = ltbrazil.sort_values(['station','month'])\n    ltbrazil = ltbrazil.dropna(subset=['temperature']) \n    ```", "```py\nprevstation = 'ZZZ'\nprevtemp = 0\nrowlist = []\ntempvalues = ltbrazil[['station','temperature']].to_numpy()\ntempcnt = 0\nstationcnt = 0\nfor j in range(len(tempvalues)):\n...   station = tempvalues[j][0]\n...   temperature = tempvalues[j][1]\n...   if (prevstation!=station):\n...     if (prevstation!='ZZZ'):\n...       rowlist.append({'station':prevstation, 'avgtemp':tempcnt/stationcnt, 'stationcnt':stationcnt})\n...     tempcnt = 0\n...     stationcnt = 0\n...     prevstation = station\n...   if ((0 <= abs(temperature-prevtemp) <= 3) or (stationcnt==0)):\n...     tempcnt += temperature\n...     stationcnt += 1\n...   prevtemp = temperature\n...\nrowlist.append({'station':prevstation, 'avgtemp':tempcnt/stationcnt, 'stationcnt':stationcnt})\nrowlist[0:5] \n```", "```py\n[{'station': 'ALTAMIRA', 'avgtemp': 27.729166666666668, 'stationcnt': 12},\n {'station': 'ALTA_FLORESTA_AERO',\n  'avgtemp': 32.49333333333333,\n  'stationcnt': 9},\n {'station': 'ARAXA', 'avgtemp': 21.52142857142857, 'stationcnt': 7},\n {'station': 'BACABAL', 'avgtemp': 28.59166666666667, 'stationcnt': 6},\n {'station': 'BAGE', 'avgtemp': 19.615000000000002, 'stationcnt': 10}] \n```", "```py\n    ltbrazilavgs = pd.DataFrame(rowlist)\n    ltbrazilavgs.head() \n    ```", "```py\n     station      avgtemp      stationcnt\n    0                ALTAMIRA           28              12\n    1      ALTA_FLORESTA_AERO           32               9\n    2                   ARAXA           22               7\n    3                 BACABAL           29               6\n    4                    BAGE           20              10 \n    ```", "```py\n    import pandas as pd\n    coviddaily = pd.read_csv(\"data/coviddaily.csv\", parse_dates=[\"casedate\"]) \n    ```", "```py\n    countrytots = coviddaily.groupby(['location'])\n    type(countrytots) \n    ```", "```py\n    <class 'pandas.core.groupby.generic.DataFrameGroupBy'> \n    ```", "```py\ncountrytots.first().iloc[0:5, 0:5] \n```", "```py\n iso_code     casedate     continent      new_cases  \\\nlocation                                                 \nAfghanistan        AFG   2020-03-01          Asia              1  \nAlbania            ALB   2020-03-15        Europe             33  \nAlgeria            DZA   2020-03-01        Africa              1  \nAmerican Samoa     ASM   2021-09-19       Oceania              1  \nAndorra            AND   2020-03-08        Europe              1  \n                    new_deaths \nlocation                   \nAfghanistan                  0 \nAlbania                      1 \nAlgeria                      0 \nAmerican Samoa               0 \nAndorra                      0 \n```", "```py\n    countrytots.last().iloc[0:5, 0:5] \n    ```", "```py\n     iso_code       casedate     continent      new_cases  \\\n    location                                                 \n    Afghanistan         AFG     2024-02-04          Asia            210  \n    Albania             ALB     2024-01-28        Europe             45  \n    Algeria             DZA     2023-12-03        Africa             19  \n    American Samoa      ASM     2023-09-17       Oceania             18  \n    Andorra             AND     2023-05-07        Europe             41  \n                        new_deaths \n    location                   \n    Afghanistan                  0 \n    Albania                      0 \n    Algeria                      0 \n    American Samoa               0 \n    Andorra                      0 \n    ```", "```py\n    type(countrytots.last()) \n    ```", "```py\n    <class 'pandas.core.frame.DataFrame'> \n    ```", "```py\n    countrytots.get_group(('Zimbabwe')).iloc[0:5, 0:5] \n    ```", "```py\n     iso_code       casedate      location     continent      new_cases\n    36305 ZWE     2020-03-22      Zimbabwe        Africa              2\n    36306 ZWE     2020-03-29      Zimbabwe        Africa              5\n    36307 ZWE     2020-04-05      Zimbabwe        Africa              2\n    36308 ZWE     2020-04-12      Zimbabwe        Africa              7\n    36309 ZWE     2020-04-19      Zimbabwe        Africa             10 \n    ```", "```py\nfor name, group in countrytots:\n...   if (name[0] in ['Malta','Kuwait']):\n...     print(group.iloc[0:5, 0:5])\n... \n```", "```py\n iso_code       casedate     location     continent      new_cases\n17818   KWT     2020-03-01       Kuwait          Asia             45\n17819   KWT     2020-03-08       Kuwait          Asia             16\n17820   KWT     2020-03-15       Kuwait          Asia             43\n17821   KWT     2020-03-22       Kuwait          Asia             72\n17822   KWT     2020-03-29       Kuwait          Asia             59\n   iso_code       casedate     location     continent      new_cases\n20621   MLT     2020-03-08        Malta        Europe              3\n20622   MLT     2020-03-15        Malta        Europe             28\n20623   MLT     2020-03-22        Malta        Europe             78\n20624   MLT     2020-03-29        Malta        Europe             50\n20625   MLT     2020-04-05        Malta        Europe             79 \n```", "```py\n    countrytots.size() \n    ```", "```py\n    location\n    Afghanistan              205\n    Albania                  175\n    Algeria                  189\n    American Samoa            58\n    Andorra                  158\n    Vietnam                  192\n    Wallis and Futuna         23\n    Yemen                    122\n    Zambia                   173\n    Zimbabwe                 196\n    Length: 231, dtype: int64 \n    ```", "```py\n    countrytots.new_cases.describe().head(3).T \n    ```", "```py\n    location      Afghanistan      Albania      Algeria\n    count                 205          175          189\n    mean                1,129        1,914        1,439\n    std                 1,957        2,637        2,205\n    min                     1           20            1\n    25%                   242          113           30\n    50%                   432          522          723\n    75%                 1,106        3,280        1,754\n    max                12,314       15,405       14,774 \n    ```", "```py\n    countrytots.new_cases.sum().head() \n    ```", "```py\n    location\n    Afghanistan          231,539\n    Albania              334,863\n    Algeria              272,010\n    American Samoa         8,359\n    Andorra               48,015\n    Name: new_cases, dtype: float64 \n    ```", "```py\n    import pandas as pd\n    nls97 = pd.read_csv(\"data/nls97g.csv\", low_memory=False)\n    nls97.set_index(\"personid\", inplace=True) \n    ```", "```py\n    nls97.iloc[:,0:7].info() \n    ```", "```py\n    <class 'pandas.core.frame.DataFrame'>\n    Index: 8984 entries, 135335 to 713757\n    Data columns (total 7 columns):\n     #   Column                 Non-Null Count  Dtype \n    ---  ------                 --------------  ----- \n     0   gender                 8984 non-null   object\n     1   birthmonth             8984 non-null   int64 \n     2   birthyear              8984 non-null   int64 \n     3   sampletype             8984 non-null   object\n     4   ethnicity              8984 non-null   object\n     5   highestgradecompleted  6663 non-null   float64\n     6   maritalstatus          6675 non-null   object\n    dtypes: float64(1), int64(2), object(4)\n    memory usage: 561.5+ KB \n    ```", "```py\n    catvars = ['gender','maritalstatus','highestdegree']\n    for col in catvars:\n    ...   print(col, nls97[col].value_counts().\\\n    ...     sort_index(), sep=\"\\n\\n\", end=\"\\n\\n\\n\")\n    ... \n    ```", "```py\n    gender\n    Female    4385\n    Male      4599\n    Name: count, dtype: int64\n    maritalstatus\n    Divorced          669\n    Married          3068\n    Never-married    2767\n    Separated         148\n    Widowed            23\n    Name: count, dtype: int64\n    highestdegree\n    0\\. None             877\n    1\\. GED             1167\n    2\\. High School     3531\n    3\\. Associates       766\n    4\\. Bachelors       1713\n    5\\. Masters          704\n    6\\. PhD               64\n    7\\. Professional     130\n    Name: count, dtype: int64 \n    ```", "```py\n    contvars = ['satmath','satverbal',\n    ...   'weeksworked06','gpaoverall','childathome']\n    nls97[contvars].describe() \n    ```", "```py\n     satmath   satverbal   weeksworked06   gpaoverall    childathome\n    count     1,407       1,406           8,419        6,004          4,791\n    mean        501         500              38          282              2\n    std         115         112              19           62              1\n    min           7          14               0           10              0\n    25%         430         430              27          243              1\n    50%         500         500              51          286              2\n    75%         580         570              52          326              3\n    max         800         800              52          417              9 \n    ```", "```py\nnls97.groupby('gender')['satmath'].mean() \n```", "```py\ngender\nFemale\t487\nMale\t517\nName: satmath, dtype: float64 \n```", "```py\nnls97.groupby(['gender','highestdegree'])['satmath'].\\\n  mean() \n```", "```py\ngender  highestdegree \nFemale  0\\. None           414\n        1\\. GED            405\n        2\\. High School    426\n        3\\. Associates     448\n        4\\. Bachelors      503\n        5\\. Masters        504\n        6\\. PhD            569\n        7\\. Professional   593\nMale    0\\. None           545\n        1\\. GED            320\n        2\\. High School    465\n        3\\. Associates     490\n        4\\. Bachelors      536\n        5\\. Masters        568\n        6\\. PhD            624\n        7\\. Professional   594\nName: satmath, dtype: float64 \n```", "```py\nnls97.groupby(['gender','highestdegree'])[['satmath','satverbal']].mean() \n```", "```py\n satmath  satverbal\ngender highestdegree                     \nFemale 0\\. None              414        408\n       1\\. GED               405        390\n       2\\. High School       426        440\n       3\\. Associates        448        453\n       4\\. Bachelors         503        508\n       5\\. Masters           504        529\n       6\\. PhD               569        561\n       7\\. Professional      593        584\nMale   0\\. None              545        515\n       1\\. GED               320        360\n       2\\. High School       465        455\n       3\\. Associates        490        469\n       4\\. Bachelors         536        521\n       5\\. Masters           568        540\n       6\\. PhD               624        627\n       7\\. Professional      594        599 \n```", "```py\nnls97.groupby(['gender','highestdegree'])\\\n  ['gpaoverall'].agg(['count','mean','max','std']) \n```", "```py\n count    mean    max    std\ngender highestdegree                        \nFemale 0\\. None              134     243    400     66\n       1\\. GED               231     230    391     66\n       2\\. High School      1152     277    402     53\n       3\\. Associates        294     291    400     50\n       4\\. Bachelors         742     322    407     48\n       5\\. Masters           364     329    417     43\n       6\\. PhD                26     345    400     44\n       7\\. Professional       55     353    411     41\nMale   0\\. None              180     222    400     65\n       1\\. GED               346     223    380     63\n       2\\. High School      1391     263    396     49\n       3\\. Associates        243     272    383     49\n       4\\. Bachelors         575     309    405     49\n       5\\. Masters           199     324    404     50\n       6\\. PhD                23     342    401     55\n       7\\. Professional       41     345    410     35 \n```", "```py\n    pd.options.display.float_format = '{:,.1f}'.format\n    aggdict = {'weeksworked06':['count', 'mean',\n    ...  'max','std'], 'childathome':['count', 'mean',\n    ...  'max', 'std']}\n    nls97.groupby(['highestdegree']).agg(aggdict) \n    ```", "```py\n     weeksworked06                 \\\n                            count  mean   max    std  \n    highestdegree                                 \n    0\\. None                   666  29.7   52.0   21.6  \n    1\\. GED                   1129  32.9   52.0   20.7  \n    2\\. High School           3262  39.4   52.0   18.6  \n    3\\. Associates             755  40.2   52.0   18.0  \n    4\\. Bachelors             1683  42.3   52.0   16.2  \n    5\\. Masters                703  41.8   52.0   16.6   \n    6\\. PhD                     63  38.5   52.0   18.4  \n    7\\. Professional           127  27.8   52.0   20.4  \n                    childathome              \n                          count   mean   max   std \n    highestdegree                            \n    0\\. None                 408    1.8   8.0   1.6 \n    1\\. GED                  702    1.7   9.0   1.5 \n    2\\. High School         1881    1.9   7.0   1.3 \n    3\\. Associates           448    1.9   6.0   1.1 \n    4\\. Bachelors            859    1.9   8.0   1.1 \n    5\\. Masters              379    1.9   6.0   0.9 \n    6\\. PhD                   33    1.9   3.0   0.8 \n    7\\. Professional          60    1.8   4.0   0.8 \n    ```", "```py\n    nls97.groupby(['maritalstatus']).agg(aggdict) \n    ```", "```py\n     weeksworked06                 \\\n                          count   mean    max    std  \n    maritalstatus                               \n    Divorced                666   37.5   52.0   19.0  \n    Married                3035   40.3   52.0   17.9  \n    Never-married          2735   37.2   52.0   19.1  \n    Separated               147   33.6   52.0   20.3  \n    Widowed                  23   37.1   52.0   19.3  \n                  childathome              \n                          count   mean    max    std \n    maritalstatus                          \n    Divorced                530   1.5     5.0    1.2 \n    Married                2565   2.1     8.0    1.1 \n    Never-married          1501   1.6     9.0    1.3 \n    Separated               132   1.5     8.0    1.4 \n    Widowed                  18   1.8     5.0    1.4 \n    ```", "```py\n    import pandas as pd\n    nls97 = pd.read_csv(\"data/nls97g.csv\", low_memory=False)\n    nls97.set_index(\"personid\", inplace=True) \n    ```", "```py\n    def iqr(x):\n    ...   return x.quantile(0.75) - x.quantile(0.25) \n    ```", "```py\naggdict = {'weeksworked06':['count', 'mean', iqr], 'childathome':['count', 'mean', iqr]}\nnls97.groupby(['highestdegree']).agg(aggdict) \n```", "```py\n weeksworked06           childathome\n                      count   mean    iqr       count   mean    iqr  \nhighestdegree                            \n0\\. None                 666   29.7    47.0        408    1.8   3.0\n1\\. GED                 1129   32.9    40.0        702    1.7   3.0\n2\\. High School         3262   39.4    21.0       1881    1.9   2.0\n3\\. Associates           755   40.2    19.0        448    1.9   2.0\n4\\. Bachelors           1683   42.3    13.5        859    1.9   1.0\n5\\. Masters              703   41.8    13.5        379    1.9   1.0\n6\\. PhD                   63   38.5    22.0         33    1.9   2.0\n7\\. Professional         127   27.8    43.0         60    1.8   1.0 \n```", "```py\n    def gettots(x):\n    ...   out = {}\n    ...   out['qr1'] = x.quantile(0.25)\n    ...   out['med'] = x.median()\n    ...   out['qr3'] = x.quantile(0.75)\n    ...   out['count'] = x.count()\n    ...   return out \n    ```", "```py\nnls97.groupby(['highestdegree'])['weeksworked06'].\\\n  apply(gettots) \n```", "```py\nhighestdegree        \n0\\. None          qr1         5\n                 med        35\n                 qr3        52\n                 count     666\n1\\. GED           qr1        12\n                 med        42\n                 qr3        52\n                 count   1,129\n2\\. High School   qr1        31\n                 med        52\n                 qr3        52\n                 count   3,262\n3\\. Associates    qr1        33\n                 med        52\n                 qr3        52\n                 count     755\n4\\. Bachelors     qr1        38\n                 med        52\n                 qr3        52\n                 count   1,683\n5\\. Masters       qr1        38\n                 med        52\n                 qr3        52\n                 count     703\n6\\. PhD           qr1        30\n                 med        50\n                 qr3        52\n                 count      63\n7\\. Professional  qr1         6\n                 med        30\n                 qr3        49\n                 count     127\nName: weeksworked06, dtype: float64 \n```", "```py\n    nls97.groupby(['highestdegree'])['weeksworked06'].\\\n      apply(gettots).reset_index() \n    ```", "```py\n     highestdegree   level_1    weeksworked06\n    0           0\\. None       qr1                5\n    1           0\\. None       med               35\n    2           0\\. None       qr3               52\n    3           0\\. None     count              666\n    4            1\\. GED       qr1               12\n    5            1\\. GED       med               42\n    6            1\\. GED       qr3               52\n    7            1\\. GED     count            1,129\n    8    2\\. High School       qr1               31\n    9    2\\. High School       med               52\n    10   2\\. High School       qr3               52\n    11   2\\. High School     count            3,262\n    12    3\\. Associates       qr1               33\n    13    3\\. Associates       med               52\n    14    3\\. Associates       qr3               52\n    15    3\\. Associates     count              755\n    16     4\\. Bachelors       qr1               38\n    17     4\\. Bachelors       med               52\n    18     4\\. Bachelors       qr3               52\n    19     4\\. Bachelors     count            1,683\n    20       5\\. Masters       qr1               38\n    21       5\\. Masters       med               52\n    22       5\\. Masters       qr3               52\n    23       5\\. Masters     count              703\n    24           6\\. PhD       qr1               30\n    25           6\\. PhD       med               50\n    26           6\\. PhD       qr3               52\n    27           6\\. PhD     count               63\n    28  7\\. Professional       qr1                6\n    29  7\\. Professional       med               30\n    30  7\\. Professional       qr3               49\n    31  7\\. Professional     count              127 \n    ```", "```py\nnlssums = nls97.groupby(['highestdegree'])\\\n  ['weeksworked06'].apply(gettots).unstack()\nnlssums \n```", "```py\n qr1   med   qr3   count\nhighestdegree                       \n0\\. None            5    35    52     666\n1\\. GED            12    42    52   1,129\n2\\. High School    31    52    52   3,262\n3\\. Associates     33    52    52     755\n4\\. Bachelors      38    52    52   1,683\n5\\. Masters        38    52    52     703\n6\\. PhD            30    50    52      63\n7\\. Professional    6    30    49     127 \n```", "```py\nnlssums.info() \n```", "```py\n<class 'pandas.core.frame.DataFrame'>\nIndex: 8 entries, 0\\. None to 7\\. Professional\nData columns (total 4 columns):\n #   Column  Non-Null Count  Dtype \n---  ------  --------------  ----- \n 0   qr1     8 non-null      float64\n 1   med     8 non-null      float64\n 2   qr3     8 non-null      float64\n 3   count   8 non-null      float64\ndtypes: float64(4)\nmemory usage: 320.0+ bytes \n```", "```py\n    import pandas as pd\n    coviddaily = pd.read_csv(\"data/coviddaily.csv\", parse_dates=[\"casedate\"])\n    ltbrazil = pd.read_csv(\"data/ltbrazil.csv\") \n    ```", "```py\n    coviddaily[['location','casedate',\n      'new_cases','new_deaths']]. \\\n      set_index(['location','casedate']). \\\n      sample(10, random_state=1) \n    ```", "```py\n     new_cases  \\\n    location                 casedate               \n    Andorra                  2020-03-15           1  \n    Portugal                 2022-12-04       3,963  \n    Eswatini                 2022-08-07          22  \n    Singapore                2020-08-30         451  \n    Georgia                  2020-08-02          46  \n    British Virgin Islands   2020-08-30          14  \n    Thailand                 2023-01-29         472  \n    Bolivia                  2023-12-17         280  \n    Montenegro               2021-08-15       2,560  \n    Eswatini                 2022-04-17         132  \n                                         new_deaths \n    location                 casedate               \n    Andorra                  2020-03-15           0 \n    Portugal                 2022-12-04          69 \n    Eswatini                 2022-08-07           2 \n    Singapore                2020-08-30           0 \n    Georgia                  2020-08-02           1 \n    British Virgin Islands   2020-08-30           0 \n    Thailand                 2023-01-29          29 \n    Bolivia                  2023-12-17           0 \n    Montenegro               2021-08-15           9 \n    Eswatini                 2022-04-17           0 \n    ```", "```py\n    coviddailytotals = coviddaily.loc[coviddaily.\\\n      casedate.between('2023-02-01','2024-01-31')].\\\n      groupby(['casedate'], as_index=False)\\\n      [['new_cases','new_deaths']].\\\n      sum()\n    coviddailytotals.head(10) \n    ```", "```py\n     casedate  new_cases  new_deaths\n    0 2023-02-05  1,385,583      69,679\n    1 2023-02-12  1,247,389      10,105\n    2 2023-02-19  1,145,666       8,539\n    3 2023-02-26  1,072,712       7,771\n    4 2023-03-05  1,028,278       7,001\n    5 2023-03-12    894,678       6,340\n    6 2023-03-19    879,074       6,623\n    7 2023-03-26    833,043       6,711\n    8 2023-04-02    799,453       5,969\n    9 2023-04-09    701,000       5,538 \n    ```", "```py\n    ltbrazil.head(2).T \n    ```", "```py\n     0                1\n    locationid           BR000082400      BR000082704\n    year                        2023             2023\n    month                          1                1\n    temperature                   27               27\n    latitude                      -4               -8\n    longitude                    -32              -73\n    elevation                     59              194\n    station      FERNANDO_DE_NORONHA  CRUZEIRO_DO_SUL\n    countryid                     BR               BR\n    country                   Brazil           Brazil\n    latabs                         4                8 \n    ```", "```py\nltbrazil = ltbrazil.dropna(subset=['temperature'])\nltbrazilavgs = ltbrazil.groupby(['station'],\n...   as_index=False).\\\n...   agg({'latabs':'first','elevation':'first',\n...   'temperature':'mean'})\nltbrazilavgs.head(10) \n```", "```py\n station  latabs  elevation  temperature\n0             ALTAMIRA       3        112           28\n1   ALTA_FLORESTA_AERO      10        289           32\n2                ARAXA      20      1,004           22\n3              BACABAL       4         25           29\n4                 BAGE      31        242           20\n5       BARRA_DO_CORDA       6        153           28\n6            BARREIRAS      12        439           27\n7  BARTOLOMEU_LISANDRO      22         17           26\n8                BAURU      22        617           25\n9                BELEM       1         10           28 \n```", "```py\n    import pandas as pd\n    coviddaily = pd.read_csv(\"data/coviddaily.csv\", parse_dates=[\"casedate\"])\n    ltbrazil = pd.read_csv(\"data/ltbrazil.csv\") \n    ```", "```py\n    coviddailytotals = \\\n      pd.pivot_table(coviddaily.loc[coviddaily.casedate. \\\n      between('2023-02-01','2024-01-31')],\n      values=['new_cases','new_deaths'], index='casedate',\n      aggfunc='sum')\n    coviddailytotals.head(10) \n    ```", "```py\n     new_cases  new_deaths\n    casedate                        \n    2023-02-05  1,385,583      69,679\n    2023-02-12  1,247,389      10,105\n    2023-02-19  1,145,666       8,539\n    2023-02-26  1,072,712       7,771\n    2023-03-05  1,028,278       7,001\n    2023-03-12    894,678       6,340\n    2023-03-19    879,074       6,623\n    2023-03-26    833,043       6,711\n    2023-04-02    799,453       5,969\n    2023-04-09    701,000       5,538 \n    ```", "```py\n    ltbrazil = ltbrazil.dropna(subset=['temperature'])\n    ltbrazilavgs = \\\n      pd.pivot_table(ltbrazil, index=['station'],\n      aggfunc={'latabs':'first','elevation':'first',\n      'temperature':'mean'})\n    ltbrazilavgs.head(10) \n    ```", "```py\n     elevation  latabs  temperature\n    station                                           \n    ALTAMIRA                   112       3           28\n    ALTA_FLORESTA_AERO         289      10           32\n    ARAXA                    1,004      20           22\n    BACABAL                     25       4           29\n    BAGE                       242      31           20\n    BARRA_DO_CORDA             153       6           28\n    BARREIRAS                  439      12           27\n    BARTOLOMEU_LISANDRO         17      22           26\n    BAURU                      617      22           25\n    BELEM                       10       1           28 \n    ```"]