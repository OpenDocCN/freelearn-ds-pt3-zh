["```py\n$ sudo apt-get install ipython-notebook\n\n```", "```py\n$ sudo yum install python-ipython-notebook\n\n```", "```py\n$ easy_install ipython\n\n```", "```py\n$ pip install ipython\n\n```", "```py\n$ easy_install ipython[zmq,qtconsole,notebook]\n\n```", "```py\n$ git clone https://github.com/ipython/ipython.git\n$ cd ipython\n$ python setup.py install\n\n```", "```py\n$ python setupegg.py develop\n\n```", "```py\nIn [1]: super?\nTypical use to call a cooperative superclass method:\nclass C(B):\n def meth(self, arg):\n super(C, self).meth(arg)\n\n```", "```py\nIn [1]: pwd\nOut[1]: u'C:\\\\'\nIn [2]: cd windows\nC:\\windows\n\n```", "```py\nIn [4]: a = 12\nIn [5]: a ** 2\nOut[5]: 144\nIn [6]: print(\"The result is {0:d}.\".format(_))\nThe result is 144.\n\n```", "```py\nIn [1]: import os\nIn [2]: os.path.split<TAB>\nos.path.split os.path.splitdrive os.path.splitext os.path.splitunc\n\n```", "```py\nprint(\"Running script.\")\nx = 12\nprint(\"'x' is now equal to {0:d}.\".format(x))\n```", "```py\nIn [1]: %run script.py\nRunning script.\n'x' is now equal to 12.\nIn [2]: x\nOut[2]: 12\n\n```", "```py\nIn[1]: %timeit [x*x for x in range(100000)]\n10 loops, best of 3: 26.1 ms per loop\n\n```", "```py\nIn [1]: %pylab\nWelcome to pylab, a matplotlib-based Python environment [backend: TkAgg].\nFor more information, type 'help(pylab)'.\nIn [2]: x = linspace(-10., 10., 1000)\nIn [3]: plot(x, sin(x))\n\n```"]