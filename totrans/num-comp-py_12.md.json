["```py\n>>> college = pd.read_csv('data/college.csv')\n>>> columns = college.columns\n>>> columns\nIndex(['INSTNM', 'CITY', 'STABBR', 'HBCU', ...], dtype='object')\n```", "```py\n>>> columns.values\narray(['INSTNM', 'CITY', 'STABBR', 'HBCU', ...], dtype=object)\n```", "```py\n>>> columns[5]\n'WOMENONLY'\n\n>>> columns[[1,8,10]]\nIndex(['CITY', 'SATMTMID', 'UGDS'], dtype='object')\n\n>>> columns[-7:-4]\nIndex(['PPTUG_EF', 'CURROPER', 'PCTPELL'], dtype='object')\n```", "```py\n>>> columns.min(), columns.max(), columns.isnull().sum()\n('CITY', 'WOMENONLY', 0)\n```", "```py\n>>> columns + '_A'\nIndex(['INSTNM_A', 'CITY_A', 'STABBR_A', 'HBCU_A', ...], dtype='object')\n\n>>> columns > 'G'\narray([ True, False,  True,  True, ...], dtype=bool)\n```", "```py\n>>> columns[1] = 'city'\nTypeError: Index does not support mutable operations\n```", "```py\n>>> c1 = columns[:4]\n>>> c1\nIndex(['INSTNM', 'CITY', 'STABBR', 'HBCU'], dtype='object')\n\n>>> c2 = columns[2:6]\n>>> c2\nIndex(['STABBR', 'HBCU', 'MENONLY'], dtype='object')\n\n>>> c1.union(c2) # or `c1 | c2`\nIndex(['CITY', 'HBCU', 'INSTNM', 'MENONLY', 'RELAFFIL', 'STABBR'], dtype='object')\n\n>>> c1.symmetric_difference(c2) # or `c1 ^ c2`\nIndex(['CITY', 'INSTNM', 'MENONLY'], dtype='object')\n```", "```py\n>>> s1 = pd.Series(index=list('aaab'), data=np.arange(4))\n>>> s1\na    0\na    1\na    2\nb    3\ndtype: int64\n\n>>> s2 = pd.Series(index=list('cababb'), data=np.arange(6))\n>>> s2\nc    0\na    1\nb    2\na    3\nb    4\nb    5\ndtype: int64\n```", "```py\n>>> s1 + s2\na    1.0\na    3.0\na    2.0\na    4.0\na    3.0\na    5.0\nb    5.0\nb    7.0\nb    8.0\nc    NaN\ndtype: float64\n```", "```py\n>>> s1 = pd.Series(index=list('aaabb'), data=np.arange(5))\n>>> s2 = pd.Series(index=list('aaabb'), data=np.arange(5))\n>>> s1 + s2\na    0\na    2\na    4\nb    6\nb    8\ndtype: int64\n```", "```py\n>>> s1 = pd.Series(index=list('aaabb'), data=np.arange(5))\n>>> s2 = pd.Series(index=list('bbaaa'), data=np.arange(5))\n>>> s1 + s2\na    2\na    3\na    4\na    3\na    4\na    5\na    4\na    5\na    6\nb    3\nb    4\nb    4\nb    5\ndtype: int64\n```", "```py\n>>> employee = pd.read_csv('data/employee.csv', index_col='RACE')\n>>> employee.head()\n```", "```py\n>>> salary1 = employee['BASE_SALARY']\n>>> salary2 = employee['BASE_SALARY']\n>>> salary1 is salary2\nTrue\n```", "```py\n>>> salary1 = employee['BASE_SALARY'].copy()\n>>> salary2 = employee['BASE_SALARY'].copy()\n>>> salary1 is salary2\nFalse\n```", "```py\n>>> salary1 = salary1.sort_index()\n>>> salary1.head()\nRACE\nAmerican Indian or Alaskan Native    78355.0\nAmerican Indian or Alaskan Native    81239.0\nAmerican Indian or Alaskan Native    60347.0\nAmerican Indian or Alaskan Native    68299.0\nAmerican Indian or Alaskan Native    26125.0\nName: BASE_SALARY, dtype: float64\n\n>>> salary2.head()\nRACE\nHispanic/Latino    121862.0\nHispanic/Latino     26125.0\nWhite               45279.0\nWhite               63166.0\nWhite               56347.0\nName: BASE_SALARY, dtype: float64\n```", "```py\n>>> salary_add = salary1 + salary2\n>>> salary_add.head()\nRACE\nAmerican Indian or Alaskan Native    138702.0\nAmerican Indian or Alaskan Native    156710.0\nAmerican Indian or Alaskan Native    176891.0\nAmerican Indian or Alaskan Native    159594.0\nAmerican Indian or Alaskan Native    127734.0\nName: BASE_SALARY, dtype: float64\n```", "```py\n>>> salary_add1 = salary1 + salary1\n>>> len(salary1), len(salary2), len(salary_add), len(salary_add1)\n(2000, 2000, 1175424, 2000)\n```", "```py\n>>> index_vc = salary1.index.value_counts(dropna=False)\n>>> index_vc\nBlack or African American            700\nWhite                                665\nHispanic/Latino                      480\nAsian/Pacific Islander               107\nNaN                                   35\nAmerican Indian or Alaskan Native     11\nOthers                                 2\nName: RACE, dtype: int64\n\n>>> index_vc.pow(2).sum()\n1175424\n```", "```py\n>>> baseball_14 = pd.read_csv('data/baseball14.csv',\n                              index_col='playerID')\n>>> baseball_15 = pd.read_csv('data/baseball15.csv',\n                              index_col='playerID')\n>>> baseball_16 = pd.read_csv('data/baseball16.csv',\n                              index_col='playerID')\n>>> baseball_14.head()\n```", "```py\n>>> baseball_14.index.difference(baseball_15.index)\nIndex(['corpoca01', 'dominma01', 'fowlede01', 'grossro01',\n       'guzmaje01', 'hoeslj01', 'krausma01', 'preslal01',\n       'singljo02'], dtype='object', name='playerID')\n\n>>> baseball_14.index.difference(baseball_16.index)\nIndex(['congeha01', 'correca01', 'gattiev01', 'gomezca01',\n       'lowrije01', 'rasmuco01', 'tuckepr01', 'valbulu01'],\n       dtype='object', name='playerID')\n```", "```py\n>>> hits_14 = baseball_14['H']\n>>> hits_15 = baseball_15['H']\n>>> hits_16 = baseball_16['H']\n>>> hits_14.head()\nplayerID\naltuvjo01    225\ncartech02    115\ncastrja01    103\ncorpoca01     40\ndominma01    121\nName: H, dtype: int64\n```", "```py\n>>> (hits_14 + hits_15).head()\nplayerID\naltuvjo01    425.0\ncartech02    193.0\ncastrja01    174.0\ncongeha01      NaN\ncorpoca01      NaN\nName: H, dtype: float64\n```", "```py\n>>> hits_14.add(hits_15, fill_value=0).head()\nplayerID\naltuvjo01    425.0\ncartech02    193.0\ncastrja01    174.0\ncongeha01     46.0\ncorpoca01     40.0\nName: H, dtype: float64\n```", "```py\n>>> hits_total = hits_14.add(hits_15, fill_value=0) \\\n                        .add(hits_16, fill_value=0)\n>>> hits_total.head()\nplayerID\naltuvjo01    641.0\nbregmal01     53.0\ncartech02    193.0\ncastrja01    243.0\ncongeha01     46.0\nName: H, dtype: float64\n```", "```py\n>>> hits_total.hasnans\nFalse\n```", "```py\n>>> s = pd.Series(index=['a', 'b', 'c', 'd'],\n                  data=[np.nan, 3, np.nan, 1])\n>>> s\na    NaN\nb    3.0\nc    NaN\nd    1.0\ndtype: float64\n\n>>> s1 = pd.Series(index=['a', 'b', 'c'], data=[np.nan, 6, 10])\n>>> s1\na    NaN \nb    6.0\nc   10.0 \ndtype: float64\n\n>>> s.add(s1, fill_value=5)\na     NaN\nb     9.0\nc    15.0\nd     6.0\ndtype: float64\n```", "```py\n>>> df_14 = baseball_14[['G','AB', 'R', 'H']]\n>>> df_14.head()\n```", "```py\n>>> df_15 = baseball_15[['AB', 'R', 'H', 'HR']]\n>>> df_15.head()\n```", "```py\n>>> (df_14 + df_15).head(10).style.highlight_null('yellow')\n```", "```py\n>>> df_14.add(df_15, fill_value=0).head(10) \\\n         .style.highlight_null('yellow')\n```", "```py\n>>> employee = pd.read_csv('data/employee.csv')\n>>> dept_sal = employee[['DEPARTMENT', 'BASE_SALARY']]\n```", "```py\n>>> dept_sal = dept_sal.sort_values(['DEPARTMENT', 'BASE_SALARY'], \n                                      ascending=[True, False])\n```", "```py\n>>> max_dept_sal = dept_sal.drop_duplicates(subset='DEPARTMENT')\n>>> max_dept_sal.head()\n```", "```py\n>>> max_dept_sal = max_dept_sal.set_index('DEPARTMENT')\n>>> employee = employee.set_index('DEPARTMENT')\n```", "```py\n>>> employee['MAX_DEPT_SALARY'] = max_dept_sal['BASE_SALARY']\n>>> employee.head()\n```", "```py\n>>> employee.query('BASE_SALARY > MAX_DEPT_SALARY')\n```", "```py\n>>> np.random.seed(1234)\n>>> random_salary = dept_sal.sample(n=10).set_index('DEPARTMENT')\n>>> random_salary\n```", "```py\n>>> employee['RANDOM_SALARY'] = random_salary['BASE_SALARY']\nValueError: cannot reindex from a duplicate axis\n```", "```py\n>>> employee['MAX_SALARY2'] = max_dept_sal['BASE_SALARY'].head(3)\n>>> employee.MAX_SALARY2.value_counts()\n140416.0    29\n100000.0    11\n64251.0      5\nName: MAX_SALARY2, dtype: int64\n\n>>> employee.MAX_SALARY2.isnull().mean()\n.9775\n```", "```py\n>>> college = pd.read_csv('data/college.csv', index_col='INSTNM')\n>>> college.dtypes\nCITY                   object\nSTABBR                 object\nHBCU                  float64\nMENONLY               float64\n                       ...   \nPCTFLOAN              float64\nUG25ABV               float64\nMD_EARN_WNE_P10        object\nGRAD_DEBT_MDN_SUPP     object\nLength: 26, dtype: object\n```", "```py\n>>> college.MD_EARN_WNE_P10.iloc[0]\n'30300'\n\n>>> college.GRAD_DEBT_MDN_SUPP.iloc[0]\n'33888'\n```", "```py\n>>> college.MD_EARN_WNE_P10.sort_values(ascending=False).head()\nINSTNM\nSharon Regional Health System School of Nursing    PrivacySuppressed\nNorthcoast Medical Training Academy                PrivacySuppressed\nSuccess Schools                                    PrivacySuppressed\nLouisiana Culinary Institute                       PrivacySuppressed\nBais Medrash Toras Chesed                          PrivacySuppressed\nName: MD_EARN_WNE_P10, dtype: object\n```", "```py\n>>> cols = ['MD_EARN_WNE_P10', 'GRAD_DEBT_MDN_SUPP']\n>>> for col in cols:\n        college[col] = pd.to_numeric(college[col], errors='coerce')\n\n>>> college.dtypes.loc[cols]\nMD_EARN_WNE_P10       float64\nGRAD_DEBT_MDN_SUPP    float64\ndtype: object\n```", "```py\n>>> college_n = college.select_dtypes(include=[np.number])\n>>> college_n.head()\n```", "```py\n>>> criteria = college_n.nunique() == 2\n>>> criteria.head()\nHBCU          True\nMENONLY       True\nWOMENONLY     True\nRELAFFIL      True\nSATVRMID     False\ndtype: bool\n```", "```py\n>>> binary_cols = college_n.columns[criteria].tolist()\n>>> binary_cols\n['HBCU', 'MENONLY', 'WOMENONLY', 'RELAFFIL', 'DISTANCEONLY', 'CURROPER']\n```", "```py\n>>> college_n2 = college_n.drop(labels=binary_cols, axis='columns')\n>>> college_n2.head()\n```", "```py\n>>> max_cols = college_n2.idxmax()\n>>> max_cols\nSATVRMID                      California Institute of Technology\nSATMTMID                      California Institute of Technology\nUGDS                               University of Phoenix-Arizona\nUGDS_WHITE                Mr Leon's School of Hair Design-Moscow\n                                         ...                    \nPCTFLOAN                                  ABC Beauty College Inc\nUG25ABV                           Dongguk University-Los Angeles\nMD_EARN_WNE_P10                     Medical College of Wisconsin\nGRAD_DEBT_MDN_SUPP    Southwest University of Visual Arts-Tucson\nLength: 18, dtype: object\n```", "```py\n>>> unique_max_cols = max_cols.unique()\n>>> unique_max_cols[:5]\narray(['California Institute of Technology',\n       'University of Phoenix-Arizona',\n       \"Mr Leon's School of Hair Design-Moscow\",\n       'Velvatex College of Beauty Culture',\n       'Thunderbird School of Global Management'], dtype=object)\n```", "```py\n>>> college_n2.loc[unique_max_cols].style.highlight_max()\n```", "```py\n>>> college = pd.read_csv('data/college.csv', index_col='INSTNM')\n>>> college_ugds = college.filter(like='UGDS_').head()\n>>> college_ugds.style.highlight_max(axis='columns')\n```", "```py\n>>> college = pd.read_csv('data/college.csv', index_col='INSTNM')\n>>> cols = ['MD_EARN_WNE_P10', 'GRAD_DEBT_MDN_SUPP']\n\n>>> for col in cols:\n        college[col] = pd.to_numeric(college[col], errors='coerce')\n\n>>> college_n = college.select_dtypes(include=[np.number])\n>>> criteria = college_n.nunique() == 2\n>>> binary_cols = college_n.columns[criteria].tolist()\n>>> college_n = college_n.drop(labels=binary_cols, axis='columns')\n```", "```py\n>>> college_n.max().head()\nSATVRMID         765.0\nSATMTMID         785.0\nUGDS          151558.0\nUGDS_WHITE         1.0\nUGDS_BLACK         1.0\ndtype: float64\n```", "```py\n>>> college_n.eq(college_n.max()).head()\n```", "```py\n>>> has_row_max = college_n.eq(college_n.max()).any(axis='columns')\n>>> has_row_max.head()\nINSTNM\nAlabama A & M University               False\nUniversity of Alabama at Birmingham    False\nAmridge University                     False\nUniversity of Alabama in Huntsville    False\nAlabama State University               False\ndtype: bool\n```", "```py\n>>> college_n.shape\n(7535, 18)\n\n>>> has_row_max.sum()\n401\n```", "```py\n>>> college_n.eq(college_n.max()).cumsum()\n```", "```py\n>>> college_n.eq(college_n.max()).cumsum().cumsum()\n```", "```py\n>>> has_row_max2 = college_n.eq(college_n.max()) \\\n                             .cumsum() \\\n                             .cumsum() \\\n                             .eq(1) \\\n                             .any(axis='columns')\n>>> has_row_max2.head()\nINSTNM\nAlabama A & M University               False\nUniversity of Alabama at Birmingham    False\nAmridge University                     False\nUniversity of Alabama in Huntsville    False\nAlabama State University               False\ndtype: bool\n```", "```py\n>>> has_row_max2.sum()\n16\n```", "```py\n>>> idxmax_cols = has_row_max2[has_row_max2].index\n>>> idxmax_cols\nIndex(['Thunderbird School of Global Management',\n       'Southwest University of Visual Arts-Tucson',\n       'ABC Beauty College Inc',\n       'Velvatex College of Beauty Culture',\n       'California Institute of Technology',\n       'Le Cordon Bleu College of Culinary Arts-San Francisco',\n       'MTI Business College Inc', 'Dongguk University-Los Angeles',\n       'Mr Leon's School of Hair Design-Moscow',\n       'Haskell Indian Nations University', 'LIU Brentwood',\n       'Medical College of Wisconsin', 'Palau Community College',\n       'California University of Management and Sciences',\n       'Cosmopolitan Beauty and Tech School',\n       'University of Phoenix-Arizona'], dtype='object', name='INSTNM')\n```", "```py\n>>> set(college_n.idxmax().unique()) == set(idxmax_cols)\nTrue\n```", "```py\n>>> %timeit college_n.idxmax().values\n1.12 ms ± 28.4 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)\n\n>>> %timeit college_n.eq(college_n.max()) \\\n                                  .cumsum() \\\n                                  .cumsum() \\\n                                  .eq(1) \\\n                                  .any(axis='columns') \\\n                                  [lambda x: x].index\n5.35 ms ± 55.2 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n```", "```py\n>>> college = pd.read_csv('data/college.csv', index_col='INSTNM')\n>>> college_ugds = college.filter(like='UGDS_')\n>>> college_ugds.head()\n```", "```py\n>>> highest_percentage_race = college_ugds.idxmax(axis='columns')\n>>> highest_percentage_race.head()\nINSTNM\nAlabama A & M University               UGDS_BLACK\nUniversity of Alabama at Birmingham    UGDS_WHITE\nAmridge University                     UGDS_BLACK\nUniversity of Alabama in Huntsville    UGDS_WHITE\nAlabama State University               UGDS_BLACK\ndtype: object\n```", "```py\n>>> highest_percentage_race.value_counts(normalize=True)\nUGDS_WHITE    0.670352\nUGDS_BLACK    0.151586\nUGDS_HISP     0.129473\nUGDS_UNKN     0.023422\nUGDS_ASIAN    0.012074\nUGDS_AIAN     0.006110\nUGDS_NRA      0.004073\nUGDS_NHPI     0.001746\nUGDS_2MOR     0.001164\ndtype: float64\n```", "```py\n>>> college_black = college_ugds[highest_percentage_race == 'UGDS_BLACK']\n>>> college_black = college_black.drop('UGDS_BLACK', axis='columns')\n>>> college_black.idxmax(axis='columns').value_counts(normalize=True)\nUGDS_WHITE    0.661228\nUGDS_HISP     0.230326\nUGDS_UNKN     0.071977\nUGDS_NRA      0.018234\nUGDS_ASIAN    0.009597\nUGDS_2MOR     0.006718\nUGDS_AIAN     0.000960\nUGDS_NHPI     0.000960\ndtype: float64\n```"]