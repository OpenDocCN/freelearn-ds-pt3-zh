["```py\n    from arcgis.gis import GIS\n    gis = GIS()\n    map1 = gis.map(\"Oakland, California\")\n    map1\n    ```", "```py\ngis = GIS(‘home’)\n```", "```py\ngis = GIS(‘pro)\n```", "```py\n    from arcgis.gis import GIS\n    from IPython.display import display\n    gis = GIS()\n    ```", "```py\n    oaklandResults = gis.content.search(query=\"Oakland\",item_type=\"Feature Layer\",max_items=5)\n    for item in oaklandResults:\n        print(item)\n    for result in oaklandResults:\n        display(result)\n    ```", "```py\n    oaklandResults2 = gis.content.search(query=\"title:Oakland\",item_type=\"Feature *\",\n                                         sort_field=\"numViews\",sort_order=\"desc\",max_items=5)\n    for item in oaklandResults2:\n        print(item)\n    for result in oaklandResults2:\n        display(result)\n    ```", "```py\n    oaklandResults3 = gis.content.search(query=\"owner:antievictionmapdev\",item_type=\"Feature *\")\n    print(len(oaklandResults3))\n    ```", "```py\n    for result in oaklandResults3:\n        display(result)\n    ```", "```py\n    gis2 = GIS(‘home’)\n    ```", "```py\n    gis2 = GIS(“https://portal/domain.com/webadapter”,”username”,”password”)\n    ```", "```py\n    gis2.properties.user\n    ```", "```py\n    firstName = gis2.properties.user.firstName\n    firstName\n    ```", "```py\n    searchResults = gis2.content.search(query=\"*\",item_type=\"Feature Layer\")\n    for result in searchResults:\n        display(result)\n    ```", "```py\n    searchResults = gis2.content.search(query=\"owner:\"+gis2.users.me.username,item_type=\"Feature Layer\")\n    for result in searchResults:\n        display(result)\n    ```", "```py\n    oaklandResultsHome = gis2.content.search(query=\"title:Oakland\",item_type=\"Feature *\",\n                                         sort_field=\"numViews\",sort_order=\"desc\",max_items=5,outside_org=True)\n    for result in oaklandResultsHome:\n        display(result)\n    ```", "```py\n    from arcgis.gis import GIS\n    from IPython.display import display\n    gis = GIS(‘home’)\n    ```", "```py\n    csvFM = r\"C:\\PythonBook\\Chapter3\\AlamedaCountyFarmersMarket.csv\"\n    ```", "```py\n    csvProperties = {\n        \"title\":\"Farmers Markets in Alameda County\",\n        \"descrption\":\"Location, days, and hours of Farmers Markets in Alameda County\",\n        \"tags\":\"Farmers Market, Alameda County, ArcGIS API for Python\"\n    }\n    ```", "```py\n    addCsvFM = gis.content.add(item_properties=csvProperties,data=csvFM)\n    ```", "```py\n    farmersMarketFL = addCsvFM.publish()\n    farmersMarketFL\n    ```", "```py\n    map1 = gis.map(\"Oakland, California\")\n    map1.add_layer(farmersMarketFL)\n    map1\n    ```", "```py\n    publishParam = {\n        \"locationType\":\"coordinates\",\n        \"latitudeFieldName\":\"LatX\",\n        \"longitudeFieldName\":\"LongY\"\n    }\n    ```", "```py\n    publishParam = {\n        \"locationType\":\"address\",\n        “addressTemplate”:”{address},{city},{state},{zip}”\n    }\n    ```", "```py\n    from arcgis.gis import GIS\n    from IPython.display import display\n    gis = GIS(‘home’)\n    ```", "```py\n    gis.content.create_folder(folder=\"AlamedaFarmersMarkets\")\n    ```", "```py\n    alamedaFM = gis.content.search(query=\"title:Farmers Markets in Alameda County”)\n    ```", "```py\n    alamedaFM = gis.content.search(query=\"title:Farmers Markets in Alameda County\")\n    for item in alamedaFM:\n        display(item)\n    ```", "```py\n    for item in alamedaFM:\n        item.move(folder=\"AlamedaFarmersMarkets\")\n         print(item)\n    ```", "```py\n    from arcgis.gis import GIS\n    from IPython.display import display\n    gis = GIS()\n    ```", "```py\n    oaklandGroups = gis.groups.search('title:Oakland',max_groups=5)\n    for group in oaklandGroups:\n        display(group)\n    ```", "```py\n    oaklandGroups2 = gis.groups.search('owner:DebusB@oakgov.com_oakgov',max_groups=5)\n    for group in oaklandGroups2:\n        display(group)\n    ```", "```py\n    oaklandGroup1 = oaklandGroups[0]\n    oaklandGroup1\n    ```", "```py\n    print(\"Group Access is : {}\".format(oaklandGroup1.access))\n    print(\"Group id is: {}\".format(oaklandGroup1.id))\n    print(\"Group Tags are : {}\".format(\", \".join(oaklandGroup1.tags)))\n    print(\"Group is Invitation only: {}\".format(oaklandGroup1.isInvitationOnly))\n    ```", "```py\n    gis2 = GIS('home')\n    ```", "```py\n    myGroups = gis2.groups.search(query=\"*\",max_groups=5)\n    for group in myGroups:\n        display(group)\n    ```", "```py\n    from arcgis.gis import GIS\n    from IPython.display import display\n    gis = GIS(\"home\")\n    ```", "```py\n    farmerMarketGroup = gis.groups.create(title=\"Alameda County Farmers Markets\",\n                                          tags=\"Alameda County, Farmers Market\",\n                                          description = \"Group with data for Alameda County Farmers Markets.\",\n                                          access = \"public\",\n                                          is_invitation_only = \"False\"\n                                         )\n    ```", "```py\nfarmerMarketGroup.access\n```", "```py\nfarmerMarketGroup.update(access = \"private\")\n```", "```py\n    alamedaFM = gis.content.search(query=\"title:Farmers Markets in Alameda County\")[0]\n    alamedaFM\n    ```", "```py\n    alamedaFM.access\n    ```", "```py\n    alamedaFM.share(org=False,groups=farmerMarketGroup.id)\n    ```", "```py\n    alamedaFM.shared_with\n    ```", "```py\n    from arcgis.gis import GIS\n    from IPython.display import display\n    gis = GIS('home')\n    ```", "```py\n    me = gis.users.me\n    me\n    ```", "```py\n    import time\n    firstName = me.firstName\n    lastName = me.lastName\n    email = me.email\n    accessedLast = time.localtime(me.lastLogin/1000)\n    groups = me.groups\n    myGroupsList =[]\n    for group in groups:\n        groupName = group[\"title\"]\n        myGroupsList.append(groupName)\n    groupsName = \", \".join(myGroupsList)\n    storageAssigned = me.storageQuota\n    storageUsed = me.storageUsage\n    prctStorage = round((storageUsed/storageAssigned)*100,4)\n    print(\"First Name:           {0}\".format(firstName))\n    print(\"Last Name:            {0}\".format(lastName))\n    print(\"email:                {0}\".format(email))\n    print(\"Last Accessed:        {0}/{1}/{2}\".format(accessedLast[1],accessedLast[2],accessedLast[0]))\n    print(\"Groups:               {0}\".format(groupsName))\n    print(\"Storage Assigned:     {0}.\".format(storageAssigned))\n    print(\"Storage Used:         {0}.\".format(storageUsed))\n    print(\"Percent Storage Used: {0}\".format(prctStorage))\n    ```", "```py\n    from arcgis.gis import GIS\n    from IPython.display import display\n    gis = GIS('home')\n    ```", "```py\n    userNameSearch = gis.users.search(query=\"username:{userNameSearch}\")\n    len(userNameSearch)\n    ```", "```py\n    userNameSelect = userNameSearch[0]\n    userNameSelect\n    ```", "```py\n    emailSearch = gis.users.search(query=\"email: *{@email.com}\")\n    len(emailSearch) \n    ```", "```py\n    import time\n    for user in emailSearch:\n        firstName = user.firstName\n        lastName = user.lastName\n        email = user.email\n        accessedLast = time.localtime(user.lastLogin/1000)\n        groups = user.groups\n        myGroupsList =[]\n        for group in groups:\n            groupName = group[\"title\"]\n            myGroupsList.append(groupName)\n        groupsName = \", \".join(myGroupsList)\n        storageAssigned = user.storageQuota\n        storageUsed = user.storageUsage\n        prctStorage = round((storageUsed/storageAssigned)*100,4)\n        print(\"--------------------------------------------\")\n        print(\"First Name:           {0}\".format(firstName))\n        print(\"Last Name:            {0}\".format(lastName))\n        print(\"email:                {0}\".format(email))\n        print(\"Last Accessed:        {0}/{1}/{2}\".format(accessedLast[1],accessedLast[2],accessedLast[0]))\n        print(\"Groups:               {0}\".format(groupsName))\n        print(\"Storage Assigned:     {0}.\".format(storageAssigned))\n        print(\"Storage Used:         {0}.\".format(storageUsed))\n        print(\"Percent Storage Used: {0}\".format(prctStorage))\n    ```", "```py\n    from arcgis.gis import GIS\n    from IPython.display import display\n    gis = GIS('home')\n    ```", "```py\n    newUser = gis.users.create(username = \"newUser1\",\n                               password = \"1234PleaseChange\",\n                               firstname = \"New\",\n                               lastname = \"User\",\n                               email = \"newUser@company.com\",\n                               description  = \"Creating a new user\",\n                               role = \"org_publisher\",\n                               user_type = \"GISProfessionalAdvUT\",\n                               provider = \"arcgis\"                          \n                              )\n    ```", "```py\n    items = gis.content.search(query=\"owner: newUser1\")\n    ```", "```py\n    for item in items:\n        item.reassign_to(target_owner = \"{yourUserName}\")\n    ```", "```py\n    newUser1.delete()\n    ```", "```py\n    license = gis.admin.license.all()\n    for l in license:\n        print(l)\n    ```", "```py\n    proLic = gis.admin.license.get(\"ArcGIS Pro\")\n    ```", "```py\n    proLic.report\n    ```", "```py\n    proLic.assign(username = me.username,entitlements=\"spatialAnalystN\")\n    ```", "```py\n    proLic.user_entitlement(\"{yourUserName}\")\n    ```", "```py\n    proLic.revoke(username = me.username,entitlements=\"*\")\n    ```", "```py\n    proLic.user_entitlement(\"{yourUserName}\")\n    ```", "```py\n    gis.admin.credits.credits\n    ```", "```py\n    gis.admin.credits.enable()\n    ```", "```py\n    gis.admin.credits.allocate(username=me.username, credits=api_acc_credits)\n    ```", "```py\n    me.availableCredits\n    ```"]