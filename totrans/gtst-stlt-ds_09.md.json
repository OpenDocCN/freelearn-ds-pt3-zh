["```py\n    pip install streamlit-embedcode\n    ```", "```py\n    pip install streamlit-lottie\n    ```", "```py\n    pip install streamlit-pandas-profiling\n    ```", "```py\n    mkdir component_example \n    cd component_example \n    touch gist_example.py\n    ```", "```py\n    import streamlit as st \n    import pandas as pd \n    import matplotlib.pyplot as plt \n    import seaborn as sns \n\n    st.title(\"Palmer's Penguins\") \n    st.markdown('Use this Streamlit app to make your own scatterplot about penguins!') \n\n    selected_x_var = st.selectbox('What do want the x variable to be?', \n      ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g']) \n    selected_y_var = st.selectbox('What about the y?', \n      ['bill_depth_mm', 'bill_length_mm', 'flipper_length_mm', 'body_mass_g']) \n\n    penguin_file = st.file_uploader('Select Your Local Penguins CSV') \n    if penguin_file is not None: \n         penguins_df = pd.read_csv(penguin_file) \n    else: \n         st.stop()\n    ```", "```py\n    sns.set_style('darkgrid')\n    markers = {\"Adelie\": \"X\", \"Gentoo\": \"s\", \"Chinstrap\":'o'}\n    fig, ax = plt.subplots() \n    ax = sns.scatterplot(data = penguins_df, x = selected_x_var, \n      y = selected_y_var, hue = 'species', markers = markers,\n      style = 'species') \n    plt.xlabel(selected_x_var) \n    plt.ylabel(selected_y_var) \n    plt.title(\"Scatterplot of Palmer's Penguins\") \n    st.pyplot(fig)\n    ```", "```py\n    import streamlit as st \n    from streamlit_embedcode import github_gist\n    st.title(\"Github Gist Example\") \n    st.write(\"Code from Palmer's Penguin Streamlit app.\")\n    github_gist('https://gist.github.com/tylerjrichards/9dcf6df0c17ccb7b91baafbe3cdf7654')\n    ```", "```py\ntouch penguin_animated.py\n```", "```py\nimport streamlit as st \nfrom streamlit_lottie import st_lottie\nimport requests\nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns \ndef load_lottieurl(url: str):\n    r = requests.get(url)\n    if r.status_code != 200:\n        return None\n    return r.json()\nlottie_penguin = load_lottieurl('https://assets9.lottiefiles.com/private_files/lf30_lntyk83o.json')\nst_lottie(lottie_penguin, height=200)\n```", "```py\n\nst.title(\"Palmer's Penguins\") \nst.markdown('Use this Streamlit app to make your own scatterplot about penguins!') \n\nselected_x_var = st.selectbox('What do want the x variable to be?', \n  ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g']) \nselected_y_var = st.selectbox('What about the y?', \n  ['bill_depth_mm', 'bill_length_mm', 'flipper_length_mm', 'body_mass_g']) \n\npenguin_file = st.file_uploader('Select Your Local Penguins CSV') \nif penguin_file is not None: \n     penguins_df = pd.read_csv(penguin_file) \nelse:\n     penguins_df = pd.read_csv('penguins.csv')\nsns.set_style('darkgrid')\nmarkers = {\"Adelie\": \"X\", \"Gentoo\": \"s\", \"Chinstrap\":'o'}\nfig, ax = plt.subplots() \nax = sns.scatterplot(data = penguins_df, x = selected_x_var, \n  y = selected_y_var, hue = 'species', markers = markers,\n  style = 'species') \nplt.xlabel(selected_x_var) \nplt.ylabel(selected_y_var) \nplt.title(\"Scatterplot of Palmer's Penguins\") \nst.pyplot(fig)\n```", "```py\nimport streamlit as st \nfrom streamlit_lottie import st_lottie\nimport requests\nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns \ndef load_lottieurl(url: str):\n    r = requests.get(url)\n    if r.status_code != 200:\n        return None\n    return r.json()\nlottie_penguin = load_lottieurl('https://assets9.lottiefiles.com/private_files/lf30_lntyk83o.json')\nst_lottie(lottie_penguin, speed=1.5, width=800, height=400)\n```", "```py\n\nst.title(\"Palmer's Penguins\") \nst.markdown('Use this Streamlit app to make your own scatterplot about penguins!') \n\nselected_x_var = st.selectbox('What do want the x variable to be?', \n  ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g']) \nselected_y_var = st.selectbox('What about the y?', \n  ['bill_depth_mm', 'bill_length_mm', 'flipper_length_mm', 'body_mass_g']) \n\npenguin_file = st.file_uploader('Select Your Local Penguins CSV') \nif penguin_file is not None: \n     penguins_df = pd.read_csv(penguin_file) \nelse:\n     penguins_df = pd.read_csv('penguins.csv')\nsns.set_style('darkgrid')\nmarkers = {\"Adelie\": \"X\", \"Gentoo\": \"s\", \"Chinstrap\":'o'}\nfig, ax = plt.subplots() \nax = sns.scatterplot(data = penguins_df, x = selected_x_var, \n  y = selected_y_var, hue = 'species', markers = markers,\n  style = 'species') \nplt.xlabel(selected_x_var) \nplt.ylabel(selected_y_var) \nplt.title(\"Scatterplot of Palmer's Penguins\") \nst.pyplot(fig)\n```", "```py\nimport streamlit as st \nfrom streamlit_lottie import st_lottie\nimport requests\nimport pandas as pd \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nfrom pandas_profiling import ProfileReport\nfrom streamlit_pandas_profiling import st_profile_report\ndef load_lottieurl(url: str):\n    r = requests.get(url)\n    if r.status_code != 200:\n        return None\n    return r.json()\nlottie_penguin = load_lottieurl('https://assets9.lottiefiles.com/private_files/lf30_lntyk83o.json')\nst_lottie(lottie_penguin, speed=1.5, width = 800, height = 400)\n\nst.title(\"Palmer's Penguins\") \nst.markdown('Use this Streamlit app to make your own scatterplot about penguins!') \n\nselected_x_var = st.selectbox('What do want the x variable to be?', \n  ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g']) \nselected_y_var = st.selectbox('What about the y?', \n  ['bill_depth_mm', 'bill_length_mm', 'flipper_length_mm', 'body_mass_g']) \n```", "```py\npenguin_file = st.file_uploader('Select Your Local Penguins CSV') \nif penguin_file is not None: \n     penguins_df = pd.read_csv(penguin_file) \nelse:\n     penguins_df = pd.read_csv('penguins.csv')\nsns.set_style('darkgrid')\nmarkers = {\"Adelie\": \"X\", \"Gentoo\": \"s\", \"Chinstrap\":'o'}\nfig, ax = plt.subplots() \nax = sns.scatterplot(data = penguins_df, x = selected_x_var, \n  y = selected_y_var, hue = 'species', markers = markers,\n  style = 'species') \nplt.xlabel(selected_x_var) \nplt.ylabel(selected_y_var) \nplt.title(\"Scatterplot of Palmer's Penguins\") \nst.pyplot(fig) \nst.title('Pandas Profiling of Penguin Dataset')\npenguin_profile = ProfileReport(penguins_df, explorative=True)\nst_profile_report(penguin_profile)\n```"]