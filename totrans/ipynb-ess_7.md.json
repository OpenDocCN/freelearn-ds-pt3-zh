["```py\na = 3\nb = 2.28\nc = 12\nd = 1+2j\n\n```", "```py\na, b, c, d = 3, 2.28, 12, 1+2j\n\n```", "```py\nv, w = w, v\n\n```", "```py\na, b, c = a + b, c + d, a * b * c * d\nprint a, b, c, d\n\n```", "```py\na, b, c = 2., -1., -4.\nx1, x2 = .5 * (-b - (b ** 2 - 4 * a * c) ** 0.5), .5 * (-b + (b ** 2 - 4 * a * c) ** 0.5)\nprint x1, x2\n\n```", "```py\nfrom __future__ import division\n```", "```py\n2 + 3 < 5 ** 2 and 4 * 3 != 13\n\n```", "```py\n(((2 + 3) < (5 ** 2)) and ((4 * 3) != 13))\n\n```", "```py\n2 < 3 or 4 > 5\n\n```", "```py\na = 5\na += 1\n\n```", "```py\nv $= <expression>\n\n```", "```py\nv = v $ (<expression>)\n\n```", "```py\nnumbers = [0, 1.2, 234259399992, 4+3j]\n\n```", "```py\nnumbers[2]\n\n```", "```py\nnumbers[0] = -3\nnumbers[2] += numbers[0]\nprint numbers\n\n```", "```py\n    len(numbers)\n\n    ```", "```py\n    numbers.reverse()\n    print numbers\n\n    ```", "```py\n    numbers.append(35)\n    print numbers\n\n    ```", "```py\n    values = [1.2, 0.5, -3.4, 12.6, 3.5]\n    values.sort()\n    print values\n    values.sort(reverse=True)\n    print values\n\n    ```", "```py\n    values.insert(3, 6.8)\n    print values\n\n    ```", "```py\n    values.extend([7,8,9])\n    print values\n\n    ```", "```py\nrange(10)\n\n```", "```py\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n```", "```py\nrange(3, 17)\n\n```", "```py\nrange(6,100,6)\n\n```", "```py\nrange(20, 2, -3)\n\n```", "```py\nl1 = range(1, 10)\nl2 = range(10, 0, -1)\nl3 = l1 + l2\nprint l3\n\n```", "```py\nl4 = 3*[4,-1,5]\nprint l4\n\n```", "```py\n    [n ** 2 for n in range(11)]\n\n    ```", "```py\n    k = 60\n    [d for d in range(1, k+1) if k % d == 0]\n\n    ```", "```py\n    [k for k in range(2,101) if len([d for d in range(1, k+1) if k % d == 0])==2]\n\n    ```", "```py\n    [(i,j,(i*i+j*j)**0.5) for i in range(5) for j in range(6)]\n\n    ```", "```py\nt1 = (2,3,5,7)\nt1[2] = -4\n\n```", "```py\ndivmod(213, 43)\n\n```", "```py\ns1 = 'I am a string'\ns2 = \"I am a string\"\nprint s1\nprint s2\n\n```", "```py\ns3 = \"I'm a string\"\nprint s3\n\n```", "```py\nn = 3\nmessage = 'The square root of {:d} is approximately {:8.5f}.'.format(n, n ** 0.5)\nprint message\n\n```", "```py\ngrades = {'Pete':87, 'Annie':92, 'Jodi':78}\n\n```", "```py\nprint grades['Annie']\n\n```", "```py\ngrades['Jodi'] += 10\nprint grades['Jodi']\n\n```", "```py\ngrades['Ivan']=94\n\n```", "```py\nfor key, item in grades.iteritems():\n print \"{:s}'s grade in the test is {:d}\".format(key, item)\n\n```", "```py\na, b, c = 2., -4., 5.\ndiscr = b ** 2 - 4 * a * c\nif discr >= 0:\n sqroot = discr ** 0.5\n x1 = 0.5 * (-b + sqroot)\n x2 = 0.5 * (-b - sqroot)\nelse:\n sqroot = (-discr) ** 0.5\n x1 = 0.5 * (-b + sqroot * 1j)\n x2 = 0.5 * (-b - sqroot * 1j)\nprint x1, x2\n\n```", "```py\nif <condition>:\n <statement block T>\nelse:\n <statement block F>\n\n```", "```py\nnumbers = [2, 4, 3, 6, 2, 1, 5, 10]\nfor n in numbers:\n r = n % 2\n if r == 0:\n print 'The integer {:d} is even'.format(n)\n else:\n print 'The integer {:d} is odd'.format(n)\n\n```", "```py\nfor n in range(30, 90):\n if int(n ** 0.5) ** 2 == n:\n print n\n break\n\n```", "```py\nfor n in range(125, 140):\n if int(n ** 0.5) ** 2 == n:\n print n\n break\nelse:\n print 'There are no perfect squares in the range'\n\n```", "```py\nimport random\nnumbers = [-1 + 2 * rand() for _ in range(20)]\nfor n in numbers:\n if n < 0:\n continue\n print 'The square root of {:8.6} is {:8.6}'.format(n, n ** 0.5)\n\n```", "```py\nimport random\nbound = 10.\nacc = 0.\nn = 0\nwhile acc < bound:\n v = random.random()\n acc += v\n print 'v={:5.4}, acc={:6.4}'.format(v, acc)\n\n```", "```py\nn = 7\nwhile True:\n if n % 2 == 0:\n n /= 2\n else:\n n = 3 * n + 1\n print n\n if n == 1:\n break\n\n```", "```py\nwhile True:\n <statements>\n if <condition>:\n break\n <possibly more statements>\n\n```", "```py\nlst = range(1000)\nprint len(lst)\n\n```", "```py\nfunction_name(arg1, arg2, â€¦, argn)\n\n```", "```py\npow(b, n, m)\n\n```", "```py\npow(12, 10, 15)\n\n```", "```py\nmax(2,6,8,-3,3,4)\n\n```", "```py\nn = int('10111010100001', base=2)\nprint n\n\n```", "```py\ndef bisection(f, a, b, tol=1e-5, itermax=1000):\n fa = f(a)\n fb = f(b)\n if fa * fb > 0:\n raise ValueError('f(a) and f(b) must have opposite signs')\n niter = 0\n while abs(a-b) > tol and niter < itermax:\n m = 0.5 * (a + b)\n fm = f(m)\n if fm * fa < 0:\n b, fb = m, fm\n else:\n a, fa = m, fm\n return min(a, b), max(a, b)\n\n```", "```py\nfrom math import cos, pi\nf = lambda x: cos(x) - x\n\n```", "```py\nbisection(f, 0, pi/2)\n\n```", "```py\n(0.7390851262506977, 0.7390911183631504)\n\n```", "```py\nbisection(f, 0, pi/2, tol=1E-10)\n\n```", "```py\nbisection(f, 0, pi/2, itermax=10, tol=1E-20)\n\n```", "```py\nmessage = 'Mathematics is the queen of science'\n\n```", "```py\nmessage.upper()\n\n```", "```py\n    message.find('queen')\n\n    ```", "```py\n    words = message.split()\n    print words\n\n    ```", "```py\n    message.count('e')\n\n    ```", "```py\n    message.replace('Mathematics', 'Mme. Curie')\n\n    ```"]