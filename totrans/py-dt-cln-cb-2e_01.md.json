["```py\n    import pandas as pd\n    pd.options.display.float_format = '{:,.2f}'.format\n    pd.set_option('display.width', 85)\n    pd.set_option('display.max_columns', 8) \n    ```", "```py\nlandtemps = pd.read_csv('data/landtempssample.csv',\n...     names=['stationid','year','month','avgtemp','latitude',\n...       'longitude','elevation','station','countryid','country'],\n...     skiprows=1,\n...     parse_dates=[['month','year']],\n...     low_memory=False)\ntype(landtemps) \n```", "```py\n<class 'pandas.core.frame.DataFrame'> \n```", "```py\nlandtemps.head(7) \n```", "```py\n month_year    stationid  ...  countryid              country\n0 2000-04-01  USS0010K01S  ...         US        United States\n1 1940-05-01  CI000085406  ...         CI                Chile\n2 2013-12-01  USC00036376  ...         US        United States\n3 1963-02-01  ASN00024002  ...         AS            Australia\n4 2001-11-01  ASN00028007  ...         AS            Australia\n5 1991-04-01  USW00024151  ...         US        United States\n6 1993-12-01  RSM00022641  ...         RS               Russia\n[7 rows x 9 columns] \n```", "```py\nlandtemps.dtypes \n```", "```py\nmonth_year       datetime64[ns]\nstationed        object\navgtemp          float64\nlatitude         float64\nlongitude        float64\nelevation        float64\nstation          object\ncountryid        object\ncountry          object\ndtype: object \n```", "```py\nlandtemps.shape \n```", "```py\n(100000, 9) \n```", "```py\n    landtemps.rename(columns={'month_year':'measuredate'}, inplace=True)\n    landtemps.dtypes \n    ```", "```py\n    measuredate      datetime64[ns]\n    stationid        object\n    avgtemp          float64\n    latitude         float64\n    longitude        float64\n    elevation        float64\n    station          object\n    countryid        object\n    country          object\n    dtype:           object \n    ```", "```py\n    landtemps.avgtemp.describe() \n    ```", "```py\n    count   85,554.00\n    mean    10.92\n    std     11.52\n    min     -70.70\n    25%     3.46\n    50%     12.22\n    75%     19.57\n    max     39.95\n    Name: avgtemp, dtype: float64 \n    ```", "```py\nlandtemps.isnull().sum() \n```", "```py\nmeasuredate    0\nstationed      0\navgtemp        14446\nlatitude       0\nlongitude      0\nelevation      0\nstation        0\ncountryid      0\ncountry        5\ndtype: int64 \n```", "```py\nlandtemps.dropna(subset=['avgtemp'], inplace=True)\nlandtemps.shape \n```", "```py\n(85554, 9) \n```", "```py\nlandtemps = pd.read_csv('data/landtempssample.csv',\n    names=['stationid','year','month','avgtemp','latitude',\n      'longitude','elevation','station','countryid','country'],\n    skiprows=1,\n    parse_dates=[['month','year']],\n    dtype={'stationid':'object', 'avgtemp':'float64',\n     'latitude':'float64','longitude':'float64',\n     'elevation':'float64','station':'object',\n     'countryid':'object','country':'object'},\n    )\nlandtemps.info() \n```", "```py\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 100000 entries, 0 to 99999\nData columns (total 9 columns):\n #   Column      Non-Null Count   Dtype       \n---  ------      --------------   -----       \n 0   month_year  100000 non-null  datetime64[ns]\n 1   stationid   100000 non-null  object      \n 2   avgtemp     85554 non-null   float64     \n 3   latitude    100000 non-null  float64     \n 4   longitude   100000 non-null  float64     \n 5   elevation   100000 non-null  float64     \n 6   station     100000 non-null  object      \n 7   countryid   100000 non-null  object      \n 8   country     99995 non-null   object      \ndtypes: datetime64[ns](1), float64(4), object(4)\nmemory usage: 6.9+ MB \n```", "```py\nchecknull = landtemps.isnull()\nchecknull.sum() \n```", "```py\nlandtemps = pd.read_csv('data/landtemps.zip',\n...   compression='zip', names=['stationid','year',\n...     'month','avgtemp','latitude','longitude',\n...     'elevation','station','countryid','country'],\n...     skiprows=1,\n...     parse_dates=[['month','year']],\n...     low_memory=False) \n```", "```py\n    import pandas as pd \n    ```", "```py\npercapitaGDP = pd.read_excel(\"data/GDPpercapita22b.xlsx\",\n...    sheet_name=\"OECD.Stat export\",\n...    skiprows=4,\n...    skipfooter=1,\n...    usecols=\"A,C:W\")\npercapitaGDP.head() \n```", "```py\n Year\t2000\t...\t2019\t2020\n0\tMetropolitan areas\t       ...\tNaN \t...\tNaN\tNaN\n1\tAUS: Australia\t..\t       ...\t...  \t...\t...\t...\n2\tAUS01: Greater Sydney\t       ...\t... \t... \t45576\t45152\n3\tAUS02: Greater Melbourne     ...\t... \t... \t42299\t40848\n4\tAUS03: Greater Brisbane      ...\t... \t... \t42145\t40741\n[5 rows x 22 columns] \n```", "```py\npercapitaGDP.shape \n```", "```py\n(731, 22) \n```", "```py\n    percapitaGDP.info() \n    ```", "```py\n    <class 'pandas.core.frame.DataFrame'>\n    RangeIndex: 731 entries, 0 to 730\n    Data columns (total 22 columns):\n     #   Column  Non-Null Count  Dtype\n    ---  ------  --------------  -----\n     0   Year    731 non-null    object\n     1   2000    730 non-null    object\n     2   2001    730 non-null    object\n     3   2002    730 non-null    object\n     4   2003    730 non-null    object\n     5   2004    730 non-null    object\n     6   2005    730 non-null    object\n     7   2006    730 non-null    object\n     8   2007    730 non-null    object\n     9   2008    730 non-null    object\n     10  2009    730 non-null    object\n     11  2010    730 non-null    object\n     12  2011    730 non-null    object\n     13  2012    730 non-null    object\n     14  2013    730 non-null    object\n     15  2014    730 non-null    object\n     16  2015    730 non-null    object\n     17  2016    730 non-null    object\n     18  2017    730 non-null    object\n     19  2018    730 non-null    object\n     20  2019    730 non-null    object\n     21  2020    730 non-null    object\n    dtypes: object(22)\n    memory usage: 125.8+ KB \n    ```", "```py\npercapitaGDP.rename(columns={'Year':'metro'}, inplace=True)\npercapitaGDP.metro.str.startswith(' ').any() \n```", "```py\nTrue \n```", "```py\npercapitaGDP.metro.str.endswith(' ').any() \n```", "```py\nFalse \n```", "```py\npercapitaGDP.metro = percapitaGDP.metro.str.strip()\npercapitaGDP.metro.str.startswith(' ').any() \n```", "```py\nFalse \n```", "```py\nfor col in percapitaGDP.columns[1:]:\n...   percapitaGDP[col] = pd.to_numeric(percapitaGDP[col],\n...     errors='coerce')\n...   percapitaGDP.rename(columns={col:'pcGDP'+col},\n...     inplace=True)\n...\npercapitaGDP.head() \n```", "```py\n metro  pcGDP2000  pcGDP2001  ...  \\\n0        Metropolitan areas        NaN        NaN  ... \n1            AUS: Australia        NaN        NaN  ... \n2     AUS01: Greater Sydney        NaN      41091  ... \n3  AUS02: Greater Melbourne        NaN      40488  ... \n4   AUS03: Greater Brisbane        NaN      35276  ... \n   pcGDP2018  pcGDP2019  pcGDP2020\n0        NaN        NaN        NaN\n1        NaN        NaN        NaN\n2      47171      45576      45152\n3      43237      42299      40848\n4      44328      42145      40741\n[5 rows x 22 columns] \n```", "```py\npercapitaGDP.dtypes \n```", "```py\nmetro          object\npcGDP2000      float64\npcGDP2001      float64\nabbreviated to save space\npcGDP2019      float64\npcGDP2020      float64\ndtype: object \n```", "```py\n    percapitaGDP.describe() \n    ```", "```py\n     pcGDP2000  pcGDP2001  pcGDP2002  ...  pcGDP2018  \\\n    count        158        450        479  ...        692 \n    mean       33961      38874      39621  ...      41667 \n    std        15155      13194      13061  ...      17440 \n    min         2686       7805       7065  ...       5530 \n    25%        21523      30790      31064  ...      31322 \n    50%        35836      38078      39246  ...      41428 \n    75%        42804      46576      47874  ...      51130 \n    max        95221      96941      98929  ...     147760 \n           pcGDP2019  pcGDP2020\n    count        596        425\n    mean       42709      39792\n    std        18893      19230\n    min         5698       5508\n    25%        29760      24142\n    50%        43505      41047\n    75%        53647      51130\n    max       146094     131082\n    [8 rows x 21 columns] \n    ```", "```py\npercapitaGDP.dropna(subset=percapitaGDP.columns[1:], how=\"all\", inplace=True)\npercapitaGDP.shape \n```", "```py\n(692, 22) \n```", "```py\npercapitaGDP.metro.count() \n```", "```py\n692 \n```", "```py\npercapitaGDP.metro.nunique() \n```", "```py\n692 \n```", "```py\npercapitaGDP.set_index('metro', inplace=True)\npercapitaGDP.head() \n```", "```py\n pcGDP2000  pcGDP2001  ...  \\\nmetro                                           ... \nAUS01: Greater Sydney           NaN      41091  ... \nAUS02: Greater Melbourne        NaN      40488  ... \nAUS03: Greater Brisbane         NaN      35276  ... \nAUS04: Greater Perth            NaN      43355  ... \nAUS05: Greater Adelaide         NaN      36081  ... \n                          pcGDP2019  pcGDP2020\nmetro                                         \nAUS01: Greater Sydney         45576      45152\nAUS02: Greater Melbourne      42299      40848\nAUS03: Greater Brisbane       42145      40741\nAUS04: Greater Perth          70970      78489\nAUS05: Greater Adelaide       38314      39181\n[5 rows x 21 columns]\npercapitaGDP.loc['AUS02: Greater Melbourne']\npcGDP2000     NaN\npcGDP2001   40488\n...\npcGDP2019   42299\npcGDP2020   40848\nName: AUS02: Greater Melbourne, dtype: float64 \n```", "```py\nimport pandas as pd\nimport numpy as np\nimport pymssql\nimport mysql.connector \n```", "```py\nsqlselect = \"SELECT studentid, school, sex, age, famsize,\\\n...   medu AS mothereducation, fedu AS fathereducation,\\\n...   traveltime, studytime, failures, famrel, freetime,\\\n...   goout, g1 AS gradeperiod1, g2 AS gradeperiod2,\\\n...   g3 AS gradeperiod3 From studentmath\"\nserver = \"pdcc.c9sqqzd5fulv.us-west-2.rds.amazonaws.com\"\nuser = \"pdccuser\"\npassword = \"pdccpass\"\ndatabase = \"pdcctest\"\nconn = pymssql.connect(server=server,\n...   user=user, password=password, database=database)\nstudentmath = pd.read_sql(sqlselect,conn)\nconn.close() \n```", "```py\n    studentmath.dtypes \n    ```", "```py\n    studentid          object\n    school             object\n    sex                object\n    age                int64\n    famsize            object\n    mothereducation    int64\n    fathereducation    int64\n    traveltime         int64\n    studytime          int64\n    failures           int64\n    famrel             int64\n    freetime           int64\n    gout               int64\n    gradeperiod1       int64\n    gradeperiod2       int64\n    gradeperiod3       int64\n    dtype: object \n    ```", "```py\n    studentmath.head() \n    ```", "```py\n     studentid    school  ...      gradeperiod2    gradeperiod3\n    0\t001\t    GP      ...\t6\t        6\n    1\t002\t    GP      ...\t5\t        6\n    2\t003\t    GP      ...\t8\t        10\n    3\t004\t    GP      ...\t14\t        15\n    4\t005\t    GP      ...\t10\t        10\n    [5 rows x 16 columns] \n    ```", "```py\nhost = \"pdccmysql.c9sqqzd5fulv.us-west-2.rds.amazonaws.com\"\nuser = \"pdccuser\"\npassword = \"pdccpass\"\ndatabase = \"pdccschema\"\nconnmysql = mysql.connector.connect(host=host, \\\n...   database=database,user=user,password=password)\nstudentmath = pd.read_sql(sqlselect,connmysql)\nconnmysql.close() \n```", "```py\nnewcolorder = ['studentid', 'gradeperiod1',\n...   'gradeperiod2','gradeperiod3', 'school',\n...   'sex', 'age', 'famsize','mothereducation',\n...   'fathereducation', 'traveltime',\n...   'studytime', 'freetime', 'failures',\n...   'famrel','goout']\nstudentmath = studentmath[newcolorder]\nstudentmath.studentid.count() \n```", "```py\n395 \n```", "```py\nstudentmath.studentid.nunique() \n```", "```py\n395 \n```", "```py\nstudentmath.set_index('studentid', inplace=True) \n```", "```py\n    studentmath.count() \n    ```", "```py\n    gradeperiod1\t\t395\n    gradeperiod2\t\t395\n    gradeperiod3\t\t395\n    school\t\t395\n    sex\t\t\t395\n    age\t\t\t395\n    famsize\t\t395\n    mothereducation\t395\n    fathereducation\t395\n    traveltime\t\t395\n    studytime\t\t395\n    freetime\t\t395\n    failures\t\t395\n    famrel\t\t395\n    goout\t\t\t395\n    dtype: int64 \n    ```", "```py\nsetvalues= \\\n...   {\"famrel\":{1:\"1:very bad\",2:\"2:bad\",\n...     3:\"3:neutral\",4:\"4:good\",5:\"5:excellent\"},\n...   \"freetime\":{1:\"1:very low\",2:\"2:low\",\n...     3:\"3:neutral\",4:\"4:high\",5:\"5:very high\"},\n...   \"goout\":{1:\"1:very low\",2:\"2:low\",3:\"3:neutral\",\n...     4:\"4:high\",5:\"5:very high\"},\n...   \"mothereducation\":{0:np.nan,1:\"1:k-4\",2:\"2:5-9\",\n...     3:\"3:secondary ed\",4:\"4:higher ed\"},\n...   \"fathereducation\":{0:np.nan,1:\"1:k-4\",2:\"2:5-9\",\n...     3:\"3:secondary ed\",4:\"4:higher ed\"}}\nstudentmath.replace(setvalues, inplace=True) \n```", "```py\nsetvalueskeys = [k for k in setvalues]\nstudentmath[setvalueskeys].memory_usage(index=False) \n```", "```py\nfamrel\t\t3160\nfreetime\t\t3160\ngoout\t\t\t3160\nmothereducation\t3160\nfathereducation\t3160\ndtype: int64 \n```", "```py\nfor col in studentmath[setvalueskeys].columns:\n...   studentmath[col] = studentmath[col]. \\\n...     astype('category')\n...\nstudentmath[setvalueskeys].memory_usage(index=False) \n```", "```py\nfamrel\t\t607\nfreetime\t\t607\ngoout\t\t\t607\nmothereducation\t599\nfathereducation\t599\ndtype: int64 \n```", "```py\nstudentmath['famrel'].value_counts(sort=False, normalize=True) \n```", "```py\n1:very bad\t0.02\n2:bad\t\t0.05\n3:neutral\t0.17\n4:good\t0.49\n5:excellent\t0.27\nName: famrel, dtype: float64 \n```", "```py\n    studentmath[['freetime','goout']].\\\n    ...   apply(pd.Series.value_counts, sort=False,\n    ...   normalize=True) \n    ```", "```py\n     freetime   goout\n    1:very low\t0.05\t    0.06\n    2:low\t\t0.16\t    0.26\n    3:neutral\t0.40\t    0.33\n    4:high\t0.29\t    0.22\n    5:very high\t0.10\t    0.13 \n    ```", "```py\n    studentmath[['mothereducation','fathereducation']].\\\n    ...   apply(pd.Series.value_counts, sort=False,\n    ...   normalize=True) \n    ```", "```py\n     mothereducation\tfathereducation\n    1:k-4\t\t\t0.15\t\t\t0.21\n    2:5-9\t\t\t0.26\t\t\t0.29\n    3:secondary ed\t0.25\t\t\t0.25\n    4:higher ed\t\t0.33\t\t\t0.24 \n    ```", "```py\nimport pandas as pd\nimport numpy as np\nimport pyreadstat \n```", "```py\nnls97spss, metaspss = pyreadstat.read_sav('data/nls97.sav')\nnls97spss.dtypes \n```", "```py\nR0000100\tfloat64\nR0536300\tfloat64\nR0536401\tfloat64\n...\nU2962900\tfloat64\nU2963000\tfloat64\nZ9063900\tfloat64\ndtype: object \n```", "```py\nnls97spss.head() \n```", "```py\n R0000100  R0536300  ...  U2963000  Z9063900\n0\t1\t2         ...  nan       52\n1\t2\t1         ...  6         0\n2\t3\t2         ...  6         0\n3\t4\t2         ...  6         4\n4\t5\t1         ...  5         12\n[5 rows x 42 columns] \n```", "```py\nnls97spss['R0536300'].value_counts(normalize=True) \n```", "```py\n1.00\t0.51\n2.00\t0.49\nName: R0536300, dtype: float64 \n```", "```py\nmetaspss.variable_value_labels['R0536300'] \n```", "```py\n{0.0: 'No Information', 1.0: 'Male', 2.0: 'Female'} \n```", "```py\nnls97spss['R0536300'].\\\n...   map(metaspss.variable_value_labels['R0536300']).\\\n...   value_counts(normalize=True) \n```", "```py\nMale\t\t0.51\nFemale\t0.49\nName: R0536300, dtype: float64 \n```", "```py\nnls97spss = pyreadstat.set_value_labels(nls97spss, metaspss, formats_as_category=True) \n```", "```py\nnls97spss.columns = metaspss.column_labels\nnls97spss['KEY!SEX (SYMBOL) 1997'].value_counts(normalize=True) \n```", "```py\nMale\t\t0.51\nFemale\t0.49\nName: KEY!SEX (SYMBOL) 1997, dtype: float64 \n```", "```py\nnls97spss.dtypes \n```", "```py\nPUBID - YTH ID CODE \t\t1997\tfloat64\nKEY!SEX (SYMBOL) \t\t\t1997\tcategory\nKEY!BDATE M/Y (SYMBOL)\t\t1997\tfloat64\nKEY!BDATE M/Y (SYMBOL) \t\t1997\tfloat64\nCV_SAMPLE_TYPE \t\t\t1997\tcategory\nKEY!RACE_ETHNICITY (SYMBOL) \t1997\tcategory\n\"... abbreviated to save space\"\nHRS/WK R WATCHES TELEVISION \t2017\tcategory\nHRS/NIGHT R SLEEPS \t\t \t2017\tfloat64\nCVC_WKSWK_YR_ALL L99\t\t\tfloat64\ndtype: object \n```", "```py\nnls97spss.columns = nls97spss.columns.\\\n...     str.lower().\\\n...     str.replace(' ','_').\\\n...     str.replace('[^a-z0-9_]', '', regex=True)\nnls97spss.set_index('pubid__yth_id_code_1997', inplace=True) \n```", "```py\nnls97spss, metaspss = pyreadstat.read_sav('data/nls97.sav', apply_value_formats=True, formats_as_category=True)\nnls97spss.columns = metaspss.column_labels\nnls97spss.columns = nls97spss.columns.\\\n...   str.lower().\\\n...   str.replace(' ','_').\\\n...   str.replace('[^a-z0-9_]', '', regex=True) \n```", "```py\n    nls97spss.dtypes \n    ```", "```py\n    pubid__yth_id_code_1997\tfloat64\n    keysex_symbol_1997\t\tcategory\n    keybdate_my_symbol_1997\tfloat64\n    keybdate_my_symbol_1997\tfloat64\n    hrsnight_r_sleeps_2017\tfloat64\n    cvc_wkswk_yr_all_l99\tfloat64\n    dtype: object \n    ```", "```py\n    nls97spss.head() \n    ```", "```py\n     pubid__yth_id_code_1997 keysex_symbol_1997  ...  \\\n    0\t1\tFemale  ... \n    1\t2\tMale  ... \n    2\t3\tFemale  ... \n    3\t4\tFemale  ... \n    4\t5\tMale  ... \n       hrsnight_r_sleeps_2017  cvc_wkswk_yr_all_l99\n    0\tnan\t52\n    1\t6\t0\n    2\t6\t0\n    3\t6\t4\n    4\t5\t12\n    [5 rows x 42 columns] \n    ```", "```py\n    nls97spss.govt_responsibility__provide_jobs_2006.\\\n    ...   value_counts(sort=False) \n    ```", "```py\n    Definitely should be\t454\n    Definitely should not be\t300\n    Probably should be\t\t617\n    Probably should not be\t462\n    Name: govt_responsibility__provide_jobs_2006, dtype: int64 \n    ```", "```py\n    nls97spss.set_index('pubid__yth_id_code_1997', inplace=True) \n    ```", "```py\nnls97stata, metastata = pyreadstat.read_dta('data/nls97.dta', apply_value_formats=True, formats_as_category=True)\nnls97stata.columns = metastata.column_labels\nnls97stata.columns = nls97stata.columns.\\\n...     str.lower().\\\n...     str.replace(' ','_').\\\n...     str.replace('[^a-z0-9_]', '', regex=True)\nnls97stata.dtypes \n```", "```py\npubid__yth_id_code_1997\tfloat64\nkeysex_symbol_1997\t\tcategory\nkeybdate_my_symbol_1997\tfloat64\nkeybdate_my_symbol_1997\tfloat64\nhrsnight_r_sleeps_2017\tfloat64\ncvc_wkswk_yr_all_l99\tfloat64\ndtype: object \n```", "```py\n    nls97stata.head() \n    ```", "```py\n     pubid__yth_id_code_1997    keysex_symbol_1997  ...  \\\n    0                        1                Female  ... \n    1                        2                  Male  ... \n    2                        3                Female  ... \n    3                        4                Female  ... \n    4                        5                  Male  ... \n       hrsnight_r_sleeps_2017    cvc_wkswk_yr_all_l99\n    0                      -5                      52\n    1                       6                       0\n    2                       6                       0\n    3                       6                       4\n    4                       5                      12\n    [5 rows x 42 columns] \n    ```", "```py\n    nls97stata.govt_responsibility__provide_jobs_2006.\\\n    ...   value_counts(sort=False) \n    ```", "```py\n    -5.0\t1425\n    -4.0\t5665\n    -2.0\t56\n    -1.0\t5\n    Definitely should be\t454\n    Definitely should not be\t300\n    Probably should be\t\t617\n    Probably should not be\t462\n    Name: govt_responsibility__provide_jobs_2006, dtype: int64 \n    ```", "```py\n    nls97stata.min(numeric_only=True) \n    ```", "```py\n    pubid__yth_id_code_1997          1\n    keybdate_my_symbol_1997          1\n    keybdate_my_symbol_1997      1,980\n    trans_sat_verbal_hstr           -4\n    trans_sat_math_hstr             -4\n    trans_crd_gpa_overall_hstr      -9\n    trans_crd_gpa_eng_hstr          -9\n    trans_crd_gpa_math_hstr         -9\n    trans_crd_gpa_lp_sci_hstr       -9\n    cv_ba_credits_l1_2011           -5\n    cv_bio_child_hh_2017            -5\n    cv_bio_child_nr_2017            -5\n    hrsnight_r_sleeps_2017          -5\n    cvc_wkswk_yr_all_l99            -4\n    dtype: float64 \n    ```", "```py\n    nls97stata.replace(list(range(-9,0)), np.nan, inplace=True)\n    nls97stata.min(numeric_only=True) \n    ```", "```py\n    pubid__yth_id_code_1997          1\n    keybdate_my_symbol_1997          1\n    keybdate_my_symbol_1997      1,980\n    trans_sat_verbal_hstr           14\n    trans_sat_math_hstr              7\n    trans_crd_gpa_overall_hstr      10\n    trans_crd_gpa_eng_hstr           0\n    trans_crd_gpa_math_hstr          0\n    trans_crd_gpa_lp_sci_hstr        0\n    cv_ba_credits_l1_2011            0\n    cv_bio_child_hh_2017             0\n    cv_bio_child_nr_2017             0\n    hrsnight_r_sleeps_2017           0\n    cvc_wkswk_yr_all_l99             0\n    dtype: float64 \n    ```", "```py\n    nls97stata.set_index('pubid__yth_id_code_1997', inplace=True) \n    ```", "```py\nnls97sas, metasas = pyreadstat.read_sas7bdat('data/nls97.sas7bdat', catalog_file='data/nlsformats3.sas7bcat', formats_as_category=True)\nnls97sas.columns = metasas.column_labels\nnls97sas.columns = nls97sas.columns.\\\n...     str.lower().\\\n...     str.replace(' ','_').\\\n...     str.replace('[^a-z0-9_]', '', regex=True)\nnls97sas.head() \n```", "```py\n pubid__yth_id_code_1997   keysex_symbol_1997    ...  \\\n0\t\t\t     1\t\t       Female    ... \n1\t\t\t     2\t\t         Male    ... \n2\t\t\t     3\t\t       Female    ... \n3\t\t\t     4\t\t       Female    ... \n4\t\t\t     5\t\t         Male    ... \n   hrsnight_r_sleeps_2017  cvc_wkswk_yr_all_l99\n0\t\t\t  nan\t\t\t   52\n1\t\t\t    6\t\t\t    0\n2\t\t\t    6\t\t\t    0\n3\t\t\t    6\t\t\t    4\n4\t\t\t    5\t\t\t   12\n[5 rows x 42 columns] \n```", "```py\nnls97sas.keysex_symbol_1997.value_counts() \n```", "```py\nMale\t\t4599\nFemale\t4385\nName: keysex_symbol_1997, dtype: int64 \n```", "```py\nnls97sas.set_index('pubid__yth_id_code_1997', inplace=True) \n```", "```py\n    import pandas as pd\n    import numpy as np\n    import pyreadr\n    import pprint \n    ```", "```py\nnls97r = pyreadr.read_r('data/nls97.rds')[None]\nnls97r.dtypes \n```", "```py\nR0000100\tint32\nR0536300\tint32\n...\nU2962800\tint32\nU2962900\tint32\nU2963000\tint32\nZ9063900\tint32\ndtype: object \n```", "```py\nnls97r.head(10) \n```", "```py\n R0000100  R0536300  ...      U2963000    Z9063900\n0\t1\t  2         ...      -5          52\n1\t2\t  1         ...       6          0\n2\t3\t  2         ...       6          0\n3\t4\t  2         ...       6          4\n4\t5\t  1         ...       5          12\n5\t6\t  2         ...       6          6\n6\t7\t  1         ...      -5          0\n7\t8\t  2         ...      -5          39\n8\t9\t  1         ...       4          0\n9\t10\t  1         ...       6          0\n[10 rows x 42 columns] \n```", "```py\nwith open('data/nlscodes.txt', 'r') as reader:\n...     setvalues = eval(reader.read())\n...\npprint.pprint(setvalues) \n```", "```py\n{'R0536300': {0.0: 'No Information', 1.0: 'Male', 2.0: 'Female'},\n 'R1235800': {0.0: 'Oversample', 1.0: 'Cross-sectional'},\n 'S8646900': {1.0: '1\\. Definitely',\n              2.0: '2\\. Probably ',\n              3.0: '3\\. Probably not',\n              4.0: '4\\. Definitely not'}}\n...abbreviated to save space\nnewcols = ['personid','gender','birthmonth',\n...   'birthyear','sampletype','category',\n...   'satverbal','satmath','gpaoverall',\n...   'gpaeng','gpamath','gpascience','govjobs',\n...   'govprices','govhealth','goveld','govind',\n...   'govunemp','govinc','govcollege',\n...   'govhousing','govenvironment','bacredits',\n...   'coltype1','coltype2','coltype3','coltype4',\n...   'coltype5','coltype6','highestgrade',\n...   'maritalstatus','childnumhome','childnumaway',\n...   'degreecol1','degreecol2','degreecol3',\n...   'degreecol4','wageincome','weeklyhrscomputer',\n...   'weeklyhrstv','nightlyhrssleep',\n...   'weeksworkedlastyear'] \n```", "```py\nnls97r.replace(setvalues, inplace=True)\nnls97r.head() \n```", "```py\n R0000100   R0536300  ...     U2963000  Z9063900\n0    1          Female    ...     -5        52\n1    2          Male      ...     6         0\n2    3          Female    ...     6         0\n3    4          Female    ...     6         4\n4    5          Male      ...     5         12\n[5 rows x 42 columns] \n```", "```py\nnls97r.replace(list(range(-9,0)), np.nan, inplace=True)\nfor col in nls97r[[k for k in setvalues]].columns:\n...     nls97r[col] = nls97r[col].astype('category')\n...\nnls97r.dtypes \n```", "```py\nR0000100\tint64\nR0536300\tcategory\nR0536401\tint64\nR0536402\tint64\nR1235800\tcategory\n              ... \nU2857300\tcategory\nU2962800\tcategory\nU2962900\tcategory\nU2963000\tfloat64\nZ9063900\tfloat64\nLength: 42, dtype: object \n```", "```py\n    nls97r.columns = newcols\n    nls97r.dtypes \n    ```", "```py\n    personid\tint64\n    gender\tcategory\n    birthmonth\tint64\n    birthyear\tint64\n    sampletype\tcategory\n                             ... \n    wageincome\tcategory\n    weeklyhrscomputer\tcategory\n    weeklyhrstv\tcategory\n    nightlyhrssleep\tfloat64\n    weeksworkedlastyear\tfloat64\n    Length: 42, dtype: object \n    ```", "```py\nimport rpy2.robjects as robjects\nfrom rpy2.robjects import pandas2ri\npandas2ri.activate()\nreadRDS = robjects.r['readRDS']\nnls97withvalues = readRDS('data/nls97withvalues.rds')\nnls97withvalues \n```", "```py\n R0000100      R0536300     ...    U2963000         Z9063900\n1         1             Female       ...    -2147483648      52\n2         2             Male         ...    6                0\n3         3             Female       ...    6                0\n4         4             Female       ...    6                4\n5         5             Male         ...    5                12\n...       ...           ...          ...    ...             ...\n8980     9018           Female       ...    4                49\n8981     9019           Male         ...    6                0\n8982     9020           Male         ...    -2147483648      15\n8983     9021           Male         ...    7                50\n8984     9022           Female       ...    7                20\n[8984 rows x 42 columns] \n```", "```py\nimport pandas as pd\nimport pyarrow \n```", "```py\n    landtemps = \\\n    ...   pd.read_csv('data/landtempssample.csv',\n    ...     names=['stationid','year','month','avgtemp',\n    ...       'latitude','longitude','elevation',\n    ...       'station','countryid','country'],\n    ...     skiprows=1,\n    ...     parse_dates=[['month','year']],\n    ...     low_memory=False)\n    landtemps.rename(columns={'month_year':'measuredate'}, inplace=True)\n    landtemps.dropna(subset=['avgtemp'], inplace=True)\n    landtemps.dtypes \n    ```", "```py\n    measuredate\tdatetime64[ns]\n    stationid\tobject\n    avgtemp\tfloat64\n    latitude\tfloat64\n    longitude\tfloat64\n    elevation\tfloat64\n    station\tobject\n    countryid\tobject\n    country\tobject\n    dtype: object \n    ```", "```py\n    landtemps.set_index(['measuredate','stationid'], inplace=True) \n    ```", "```py\nextremevals = landtemps[(landtemps.avgtemp < landtemps.avgtemp.quantile(.001)) | (landtemps.avgtemp > landtemps.avgtemp.quantile(.999))]\nextremevals.shape \n```", "```py\n(171, 7) \n```", "```py\nextremevals.sample(7) \n```", "```py\n avgtemp  ...   country\nmeasuredate  stationid              ...       \n2013-08-01\tQAM00041170\t35.30    ...\tQatar\n2005-01-01\tRSM00024966\t-40.09   ...\tRussia\n1973-03-01\tCA002401200\t-40.26   ...\tCanada\n2007-06-01\tKU000405820\t37.35    ...\tKuwait\n1987-07-01\tSUM00062700\t35.50    ...\tSudan\n1998-02-01\tRSM00025325\t-35.71   ...\tRussia\n1968-12-01\tRSM00024329\t-43.20   ...\tRussia\n[7 rows x 7 columns] \n```", "```py\nextremevals.to_excel('views/tempext.xlsx')\nextremevals.to_csv('views/tempext.csv') \n```", "```py\nlandtemps.to_pickle('data/landtemps.pkl')\nlandtemps.reset_index(inplace=True)\nlandtemps.to_feather(\"data/landtemps.ftr\") \n```", "```py\nlandtemps = pd.read_pickle('data/landtemps.pkl')\nlandtemps.head(2).T \n```", "```py\nmeasuredate\t2000-04-01\t1940-05-01\nstationid\tUSS0010K01S\tCI000085406\navgtemp\t5.27\t\t18.04\nlatitude\t39.90\t\t-18.35\nlongitude\t-110.75\t\t-70.33\nelevation\t2,773.70\t58.00\nstation\tINDIAN_CANYON\tARICA\ncountryid\tUS\t\tCI\ncountry\tUnited States\tChile \n```", "```py\nlandtemps = pd.read_feather(\"data/landtemps.ftr\")\nlandtemps.head(2).T \n```", "```py\n 0                    1\nmeasuredate\t2000-04-01 00:00:00\t1940-05-01 00:00:00\nstationid\tUSS0010K01S\t\tCI000085406\navgtemp\t5.27\t\t\t18.04\nlatitude\t39.90\t\t\t-18.35\nlongitude\t-110.75\t\t\t-70.33\nelevation\t2,773.70\t\t58.00\nstation\tINDIAN_CANYON\t\tARICA\ncountryid\tUS\t\t\tCI\ncountry\tUnited States\t\tChile \n```"]