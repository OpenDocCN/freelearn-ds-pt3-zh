["```py\nmkdir penguin_app\ncd penguin_app\ntouch penguins.py \n```", "```py\nimport streamlit as st\nimport pandas as pd\nst.title(\"Palmer's Penguins\")\n#import our data\npenguins_df = pd.read_csv('penguins.csv')\nst.write(penguins_df.head()) \n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport altair as alt\nimport seaborn as sns\nst.title(\"Palmer's Penguins\")\nst.markdown('Use this Streamlit app to make your own scatterplot about penguins!')\nselected_species = st.selectbox('What species would you like to visualize?',\n     ['Adelie', 'Gentoo', 'Chinstrap'])\nselected_x_var = st.selectbox('What do you want the x variable to be?',\n     ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g'])\nselected_y_var = st.selectbox('What about the y?',\n     ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g']) \n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport altair as alt\nimport seaborn as sns\nst.title(\"Palmer's Penguins\")\nst.markdown('Use this Streamlit app to make your own scatterplot about penguins!')\nselected_species = st.selectbox('What species would you like to visualize?',\n     ['Adelie', 'Gentoo', 'Chinstrap'])\nselected_x_var = st.selectbox('What do you want the x variable to be?',\n     ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g'])\nselected_y_var = st.selectbox('What about the y?',\n     ['bill_depth_mm', 'bill_length_mm', 'flipper_length_mm', 'body_mass_g'])\npenguins_df = pd.read_csv('penguins.csv')\npenguins_df = penguins_df[penguins_df['species'] == selected_species] \nalt_chart = (\n    alt.Chart(penguins_df)\n    .mark_circle()\n    .encode(\n        x=selected_x_var,\n        y=selected_y_var,\n    )\n)\nst.altair_chart(alt_chart) \n```", "```py\nimport altair as alt\nimport pandas as pd\nimport seaborn as sns\nimport streamlit as st\n\nst.title(\"Palmer's Penguins\")\nst.markdown(\"Use this Streamlit app to make your own scatterplot about penguins!\")\n\nselected_species = st.selectbox(\n    \"What species would you like to visualize?\", [\"Adelie\", \"Gentoo\", \"Chinstrap\"]\n)\n\nselected_x_var = st.selectbox(\n    \"What do you want the x variable to be?\",\n    [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n)\n\nselected_y_var = st.selectbox(\n    \"What about the y?\",\n    [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n)\npenguins_df = pd.read_csv(\"penguins.csv\")\npenguins_df = penguins_df[penguins_df[\"species\"] == selected_species]\n\nalt_chart = (\n    alt.Chart(penguins_df, title=f\"Scatterplot of {selected_species} Penguins\")\n    .mark_circle()\n    .encode(\n        x=selected_x_var,\n        y=selected_y_var,\n    )\n)\nst.altair_chart(alt_chart) \n```", "```py\nimport altair as alt\nimport pandas as pd\nimport seaborn as sns\nimport streamlit as st\nst.title(\"Palmer's Penguins\")\nst.markdown(\"Use this Streamlit app to make your own scatterplot about penguins!\")\nselected_species = st.selectbox(\n    \"What species would you like to visualize?\", [\"Adelie\", \"Gentoo\", \"Chinstrap\"]\n)\nselected_x_var = st.selectbox(\n    \"What do you want the x variable to be?\",\n    [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n)\nselected_y_var = st.selectbox(\n    \"What about the y?\",\n    [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n)\npenguins_df = pd.read_csv(\"penguins.csv\")\npenguins_df = penguins_df[penguins_df[\"species\"] == selected_species]\nalt_chart = (\n    alt.Chart(penguins_df, title=f\"Scatterplot of {selected_species} Penguins\")\n    .mark_circle()\n    .encode(\n        x=selected_x_var,\n        y=selected_y_var,\n    )\n    .interactive()\n)\nst.altair_chart(alt_chart, use_container_width=True) \n```", "```py\nimport altair as alt\nimport pandas as pd\nimport seaborn as sns\nimport streamlit as st\nst.title(\"Palmer's Penguins\")\nst.markdown(\"Use this Streamlit app to make your own scatterplot about penguins!\")\nselected_x_var = st.selectbox(\n    \"What do you want the x variable to be?\",\n    [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n)\nselected_y_var = st.selectbox(\n    \"What about the y?\",\n    [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n)\npenguins_df = pd.read_csv(\"penguins.csv\")\nalt_chart = (\n    alt.Chart(penguins_df, title=\"Scatterplot of Palmer's Penguins\")\n    .mark_circle()\n    .encode(\n        x=selected_x_var,\n        y=selected_y_var,\n        color=\"species\",\n    )\n    .interactive()\n)\nst.altair_chart(alt_chart, use_container_width=True) \n```", "```py\nimport altair as alt\nimport pandas as pd\nimport seaborn as sns\nimport streamlit as st\n\nst.title(\"Palmer's Penguins\")\nst.markdown(\"Use this Streamlit app to make your own scatterplot about penguins!\")\n\npenguin_file = st.file_uploader(\"Select Your Local Penguins CSV (default provided)\")\nif penguin_file is not None:\n    penguins_df = pd.read_csv(penguin_file)\nelse:\n    penguins_df = pd.read_csv(\"penguins.csv\")\n\nselected_x_var = st.selectbox(\n    \"What do you want the x variable to be?\",\n    [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n)\n\nselected_y_var = st.selectbox(\n    \"What about the y?\",\n    [\"bill_depth_mm\", \"bill_length_mm\", \"flipper_length_mm\", \"body_mass_g\"],\n)\n\nalt_chart = (\n    alt.Chart(penguins_df, title=\"Scatterplot of Palmer's Penguins\")\n    .mark_circle()\n    .encode(\n        x=selected_x_var,\n        y=selected_y_var,\n        color=\"species\",\n    )\n    .interactive()\n)\nst.altair_chart(alt_chart, use_container_width=True) \n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport altair as alt \nimport seaborn as sns\nst.title(\"Palmer's Penguins\")\nst.markdown('Use this Streamlit app to make your own scatterplot about penguins!')\nselected_x_var = st.selectbox('What do you want the x variable to be?',\n     ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g'])\nselected_y_var = st.selectbox('What about the y?',\n     ['bill_depth_mm', 'bill_length_mm', 'flipper_length_mm', 'body_mass_g'])\npenguin_file = st.file_uploader('Select Your Local Penguins CSV')\nif penguin_file is not None:\n     penguins_df = pd.read_csv(penguin_file)\nelse:\n     st.stop()\nsns.set_style('darkgrid')\nmarkers = {\"Adelie\": \"X\", \"Gentoo\": \"s\", \"Chinstrap\":'o'}\nalt_chart = (\n    alt.Chart(penguins_df, title=\"Scatterplot of Palmer's Penguins\")\n    .mark_circle()\n    .encode(\n        x=selected_x_var,\n        y=selected_y_var,\n        color=\"species\",\n    )\n    .interactive()\n)\nst.altair_chart(alt_chart, use_container_width=True) \n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport altair as alt \nimport seaborn as sns\nst.title(\"Palmer's Penguins\")\nst.markdown('Use this Streamlit app to make your own scatterplot about penguins!')\npenguin_file = st.file_uploader(\n    'Select Your Local Penguins CSV (default provided)')\nif penguin_file is not None:\n    penguins_df = pd.read_csv(penguin_file)\nelse:\n    penguins_df = pd.read_csv('penguins.csv')\nselected_x_var = st.selectbox('What do you want the x variable to be?',\n                              ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g'])\nselected_y_var = st.selectbox('What about the y?',\n                              ['bill_depth_mm', 'bill_length_mm', 'flipper_length_mm', 'body_mass_g'])\nselected_gender = st.selectbox('What gender do you want to filter for?',\n                               ['all penguins', 'male penguins', 'female penguins'])\nif selected_gender == 'male penguins':\n    penguins_df = penguins_df[penguins_df['sex'] == 'male']\nelif selected_gender == 'female penguins':\n    penguins_df = penguins_df[penguins_df['sex'] == 'female']\nelse:\n    pass\nalt_chart = (\n    alt.Chart(penguins_df, title=\"Scatterplot of Palmer's Penguins\")\n    .mark_circle()\n    .encode(\n        x=selected_x_var,\n        y=selected_y_var,\n        color=\"species\",\n    )\n    .interactive()\n)\nst.altair_chart(alt_chart, use_container_width=True) \n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport altair as alt \nimport seaborn as sns\nimport time\nst.title(\"Palmer's Penguins\")\nst.markdown('Use this Streamlit app to make your own scatterplot about penguins!')\npenguin_file = st.file_uploader(\n    'Select Your Local Penguins CSV (default provided)')\ndef load_file(penguin_file):\n    time.sleep(3)\n    if penguin_file is not None:\n        df = pd.read_csv(penguin_file)\n    else:\n        df = pd.read_csv('penguins.csv')\n    return(df)\npenguins_df = load_file(penguin_file)\nselected_x_var = st.selectbox('What do you want the x variable to be?',\n                              ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g'])\nselected_y_var = st.selectbox('What about the y?',\n                              ['bill_depth_mm', 'bill_length_mm', 'flipper_length_mm', 'body_mass_g'])\nselected_gender = st.selectbox('What gender do you want to filter for?',\n                               ['all penguins', 'male penguins', 'female penguins'])\nif selected_gender == 'male penguins':\n    penguins_df = penguins_df[penguins_df['sex'] == 'male']\nelif selected_gender == 'female penguins':\n    penguins_df = penguins_df[penguins_df['sex'] == 'female']\nelse:\n    pass \nalt_chart = (\n    alt.Chart(penguins_df, title=\"Scatterplot of Palmer's Penguins\")\n    .mark_circle()\n    .encode(\n        x=selected_x_var,\n        y=selected_y_var,\n        color=\"species\",\n    )\n    .interactive()\n)\nst.altair_chart(alt_chart, use_container_width=True) \n```", "```py\nimport streamlit as st\nimport pandas as pd\nimport altair as alt\nimport seaborn as sns\nimport time\nst.title(\"Palmer's Penguins\")\nst.markdown('Use this Streamlit app to make your own scatterplot about penguins!')\npenguin_file = st.file_uploader(\n    'Select Your Local Penguins CSV (default provided)')\n@st.cache_data()\ndef load_file(penguin_file):\n    time.sleep(3)\n    if penguin_file is not None:\n        df = pd.read_csv(penguin_file)\n    else:\n        df = pd.read_csv('penguins.csv')\n    return(df)\npenguins_df = load_file(penguin_file)\nselected_x_var = st.selectbox('What do you want the x variable to be?',\n                              ['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g'])\nselected_y_var = st.selectbox('What about the y?',\n                              ['bill_depth_mm', 'bill_length_mm', 'flipper_length_mm', 'body_mass_g'])\nselected_gender = st.selectbox('What gender do you want to filter for?',\n                               ['all penguins', 'male penguins', 'female penguins'])\nif selected_gender == 'male penguins':\n    penguins_df = penguins_df[penguins_df['sex'] == 'male']\nelif selected_gender == 'female penguins':\n    penguins_df = penguins_df[penguins_df['sex'] == 'female']\nelse:\n    pass\nalt_chart = (\n    alt.Chart(penguins_df, title=\"Scatterplot of Palmer's Penguins\")\n    .mark_circle()\n    .encode(\n        x=selected_x_var,\n        y=selected_y_var,\n        color=\"species\",\n    )\n    .interactive()\n)\nst.altair_chart(alt_chart, use_container_width=True) \n```", "```py\nimport streamlit as st\nst.title('My To-Do List Creator')\nmy_todo_list = [\"Buy groceries\", \"Learn Streamlit\", \"Learn Python\"]\nst.write('My current To-Do list is:', my_todo_list)\nnew_todo = st.text_input(\"What do you need to do?\")\nif st.button('Add the new To-Do item'):\n    st.write('Adding a new item to the list')\n    my_todo_list.append(new_todo)\nst.write('My new To-Do list is:', my_todo_list) \n```", "```py\nimport streamlit as st\nst.title('My To-Do List Creator')\nif 'my_todo_list' not in st.session_state:\n    st.session_state.my_todo_list = [\"Buy groceries\", \"Learn Streamlit\", \"Learn Python\"]\nnew_todo = st.text_input(\"What do you need to do?\")\nif st.button('Add the new To-Do item'):\n    st.write('Adding a new item to the list')\n    st.session_state.my_todo_list.append(new_todo)\nst.write('My To-Do list is:', st.session_state.my_todo_list) \n```"]