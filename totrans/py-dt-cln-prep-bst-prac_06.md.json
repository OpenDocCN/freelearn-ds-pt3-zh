["```py\ngrouped = df.groupby('column_name')\n```", "```py\n       Category Sub-Category Region  Sales        Date\n0   Electronics       Mobile  North    200  2023-01-01\n1   Electronics       Laptop  South    300  2023-01-02\n2   Electronics       Tablet   East    250  2023-01-03\n3   Electronics       Laptop   West    400  2023-01-04\n4     Furniture        Chair  North    150  2023-01-05\n5     Furniture        Table  South    350  2023-01-06\n```", "```py\ncategory_sales = df.groupby('Category')['Sales'].sum().reset_index()\n```", "```py\n      Category  Sales\n0     Clothing   1070\n1  Electronics   1370\n2    Furniture   1270\n```", "```py\ncategory_region_sales = df.groupby(['Category', 'Region'])['Sales'].sum().reset_index()\n```", "```py\n       Category Region  Sales\n0      Clothing   East    420\n1      Clothing  North    100\n2      Clothing  South    250\n3      Clothing   West    300\n4   Electronics   East    250\n5   Electronics  North    420\n6   Electronics  South    300\n7   Electronics   West    400\n8     Furniture   East    200\n9     Furniture  North    150\n10    Furniture  South    350\n11    Furniture   West    570\n```", "```py\ntotal_sales = df.groupby('Category')['Sales'].sum().reset_index()\n```", "```py\ncategory_region_sales_agg = df.groupby(['Category', 'Region'])['Sales'].agg(['sum', 'mean']).reset_index()\n```", "```py\n       Category Region  sum   mean\n0      Clothing   East  420  210.0\n1      Clothing  North  100  100.0\n2      Clothing  South  250  250.0\n3      Clothing   West  300  300.0\n4   Electronics   East  250  250.0\n5   Electronics  North  420  210.0\n6   Electronics  South  300  300.0\n7   Electronics   West  400  400.0\n8     Furniture   East  200  200.0\n9     Furniture  North  150  150.0\n10    Furniture  South  350  350.0\n11    Furniture   West  570  285.0\n```", "```py\nadvanced_agg = df.groupby(['Category', 'Region']).agg({\n  'Sales': ['sum', 'mean', 'count'],\n  'Sub-Category': 'nunique' # Unique count of Sub-Category\n}).reset_index()\n```", "```py\n       Category Region Sales              Sub-Category\n                         sum   mean count      nunique\n0      Clothing   East   420  210.0     2            2\n1      Clothing  North   100  100.0     1            1\n2      Clothing  South   250  250.0     1            1\n3      Clothing   West   300  300.0     1            1\n4   Electronics   East   250  250.0     1            1\n5   Electronics  North   420  210.0     2            1\n6   Electronics  South   300  300.0     1            1\n```", "```py\n    def range_sales(series):\n      return series.max() - series.min()\n    ```", "```py\n    def coefficient_of_variation(series):\n      return series.std() / series.mean()\n    ```", "```py\n    advanced_agg_custom = df.groupby('Region').agg({\n      'Sales': ['sum', 'mean', 'count', range_sales, coefficient_of_variation],\n      'Sub-Category': 'nunique'\n    }).reset_index()\n    ```", "```py\n    advanced_agg_custom.columns = [\n      'Region', 'Total Sales', 'Average Sales', 'Number of Transactions',\n      'Sales Range', 'Coefficient of Variation', 'Unique Sub-Categories'\n    ]\n    ```", "```py\n    print(advanced_agg_custom)\n    ```", "```py\n  Region  TotalSales SalesRange  Coef Unique Sub-Categories\n0   East         870        120  0.24                     4\n1  North         670        120  0.32                     3\n2  South         900        100  0.16                     3\n3   West        1270        230  0.34                     4\n```", "```py\n    data = {\n      'Category': ['Electronics', 'Electronics', 'Furniture', 'Furniture', 'Clothing', 'Clothing'],\n      'Sub-Category': ['Mobile', 'Laptop', 'Chair', 'Table', 'Men', 'Women'],\n      'Sales': [100, 200, 150, 300, 120, 180],\n      'Quantity': [10, 5, 8, 3, 15, 12],\n      'Date': ['2023-01-01', '2023-01-02', '2023-01-03', '2023-01-04', '2023-01-05', '2023-01-06']\n    }\n    df = pd.DataFrame(data)\n    ```", "```py\n    df['Date'] = pd.to_datetime(df['Date'])\n    ```", "```py\n    def compute_statistics(series):\n        sum_sales = series['Sales'].sum()\n        mean_sales = series['Sales'].mean()\n        std_sales = series['Sales'].std()\n        cv_sales = std_sales / mean_sales\n        sum_quantity = series['Quantity'].sum()\n        mean_quantity = series['Quantity'].mean()\n        std_quantity = series['Quantity'].std()\n        cv_quantity = std_quantity / mean_quantity\n        return pd.Series([sum_sales, mean_sales, std_sales, cv_sales, sum_quantity, mean_quantity, std_quantity, cv_quantity],\n    index=['Sum_Sales', 'Mean_Sales', 'Std_Sales', 'CV_Sales',\n    'Sum_Quantity', 'Mean_Quantity', 'Std_Quantity', 'CV_Quantity'])\n    ```", "```py\n    result_complex = df.groupby('Category').apply(compute_statistics).reset_index()\n    ```", "```py\n    def row_summary(row):\n        total_sales_quantity = row['Sales'] + row['Quantity']\n        sales_quantity_ratio = row['Sales'] / row['Quantity'] if row['Quantity'] != 0 else np.nan\n        return pd.Series(\n            [total_sales_quantity,sales_quantity_ratio],\n            index=['Total_Sales_Quantity',\n            'Sales_Quantity_Ratio'])\n    ```", "```py\n    df_row_summary = df.apply(row_summary, axis=1)\n       Total_Sales_Quantity  Sales_Quantity_Ratio\n    0                 110.0                 10.00\n    1                 205.0                 40.00\n    2                 158.0                 18.75\n    3                 303.0                100.00\n    4                 135.0                  8.00\n    5                 192.0                 15.0\n    ```", "```py\n    category_metrics = df.groupby('Category')[['Total_Sales_Quantity', 'Sales_Quantity_Ratio']].mean().reset_index()\n    ```", "```py\n     Category  Total_Sales_Quantity  Sales_Quantity_Ratio\n0     Clothing                 163.5                11.500\n1  Electronics                 157.5                25.000\n2    Furniture                 230.5                59.375\n```", "```py\nfiltered_data = df[df['Quantity'] > 10]\n```", "```py\n   Category Sub-Category  Sales  Quantity        Date\n4  Clothing          Men    120        15  2023-01-05\n5  Clothing        Women    180        12  2023-01-06\n```", "```py\nfiltered_data = df[(df['Sales'] > 1000) & (df['Quantity'] < 30)]\n```", "```py\n      Category Sub-Category  Sales  Quantity        Date\n1  Electronics       Laptop   1500        25  2023-01-02\n```"]